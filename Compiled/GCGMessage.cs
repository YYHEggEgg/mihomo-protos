// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCGMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from GCGMessage.proto</summary>
  public static partial class GCGMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for GCGMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCGMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHQ0dNZXNzYWdlLnByb3RvEg1taUhvbW8uUHJvdG9zGhRHQ0dNc2dBZGRD",
            "YXJkcy5wcm90bxoTR0NHTXNnQWRkRGljZS5wcm90bxoWR0NHTXNnQ2FyZFVw",
            "ZGF0ZS5wcm90bxoTR0NHTXNnQ2hhckRpZS5wcm90bxoZR0NHTXNnQ2xpZW50",
            "UGVyZm9ybS5wcm90bxoUR0NHTXNnQ29zdERpY2UucHJvdG8aFkdDR01zZ0Nv",
            "c3RSZXZpc2UucHJvdG8aFkdDR01zZ0RpY2VSZXJvbGwucHJvdG8aFEdDR01z",
            "Z0RpY2VSb2xsLnByb3RvGhpHQ0dNc2dEdWVsRGF0YUNoYW5nZS5wcm90bxoU",
            "R0NHTXNnR2FtZU92ZXIucHJvdG8aFUdDR01zZ01vZGlmeUFkZC5wcm90bxoY",
            "R0NHTXNnTW9kaWZ5UmVtb3ZlLnByb3RvGhRHQ0dNc2dNb3ZlQ2FyZC5wcm90",
            "bxoTR0NHTXNnTmV3Q2FyZC5wcm90bxofR0NHTXNnTm9EYW1hZ2VTa2lsbFJl",
            "c3VsdC5wcm90bxoTR0NHTXNnT3BUaW1lci5wcm90bxoQR0NHTXNnUGFzcy5w",
            "cm90bxoXR0NHTXNnUGhhc2VDaGFuZ2UucHJvdG8aGUdDR01zZ1BoYXNlQ29u",
            "dGludWUucHJvdG8aHkdDR01zZ1BWRUludGVudGlvbkNoYW5nZS5wcm90bxoc",
            "R0NHTXNnUFZFSW50ZW50aW9uSW5mby5wcm90bxoZR0NHTXNnUmVhY3Rpb25C",
            "ZWdpbi5wcm90bxoXR0NHTXNnUmVhY3Rpb25FbmQucHJvdG8aF0dDR01zZ1Jl",
            "bW92ZUNhcmRzLnByb3RvGhlHQ0dNc2dTZWxlY3RPblN0YWdlLnByb3RvGiFH",
            "Q0dNc2dTZWxlY3RPblN0YWdlQnlFZmZlY3QucHJvdG8aHUdDR01zZ1NraWxs",
            "TGltaXRzQ2hhbmdlLnByb3RvGhdHQ0dNc2dTa2lsbFJlc3VsdC5wcm90bxoX",
            "R0NHTXNnVG9rZW5DaGFuZ2UucHJvdG8aHEdDR01zZ1VwZGF0ZUNvbnRyb2xs",
            "ZXIucHJvdG8aFEdDR01zZ1VzZVNraWxsLnByb3RvGhdHQ0dNc2dVc2VTa2ls",
            "bEVuZC5wcm90bxodR0NHTXNnV2FpdGluZ0xpc3RDaGFuZ2UucHJvdG8ihBAK",
            "CkdDR01lc3NhZ2USMgoJYWRkX2NhcmRzGAUgASgLMh0ubWlIb21vLlByb3Rv",
            "cy5HQ0dNc2dBZGRDYXJkc0gAEjAKCGFkZF9kaWNlGAcgASgLMhwubWlIb21v",
            "LlByb3Rvcy5HQ0dNc2dBZGREaWNlSAASNwoLY2FyZF91cGRhdGUYpg0gASgL",
            "Mh8ubWlIb21vLlByb3Rvcy5HQ0dNc2dDYXJkVXBkYXRlSAASMAoIY2hhcl9k",
            "aWUYBCABKAsyHC5taUhvbW8uUHJvdG9zLkdDR01zZ0NoYXJEaWVIABI9Cg5j",
            "bGllbnRfcGVyZm9ybRiNDSABKAsyIi5taUhvbW8uUHJvdG9zLkdDR01zZ0Ns",
            "aWVudFBlcmZvcm1IABIyCgljb3N0X2RpY2UYDSABKAsyHS5taUhvbW8uUHJv",
            "dG9zLkdDR01zZ0Nvc3REaWNlSAASNwoLY29zdF9yZXZpc2UY1AMgASgLMh8u",
            "bWlIb21vLlByb3Rvcy5HQ0dNc2dDb3N0UmV2aXNlSAASNgoLZGljZV9yZXJv",
            "bGwYDyABKAsyHy5taUhvbW8uUHJvdG9zLkdDR01zZ0RpY2VSZXJvbGxIABIy",
            "CglkaWNlX3JvbGwYDiABKAsyHS5taUhvbW8uUHJvdG9zLkdDR01zZ0RpY2VS",
            "b2xsSAASQAoQZHVlbF9kYXRhX2NoYW5nZRj/DSABKAsyIy5taUhvbW8uUHJv",
            "dG9zLkdDR01zZ0R1ZWxEYXRhQ2hhbmdlSAASMwoJZ2FtZV9vdmVyGPgEIAEo",
            "CzIdLm1pSG9tby5Qcm90b3MuR0NHTXNnR2FtZU92ZXJIABI1Cgptb2RpZnlf",
            "YWRkGMUNIAEoCzIeLm1pSG9tby5Qcm90b3MuR0NHTXNnTW9kaWZ5QWRkSAAS",
            "OwoNbW9kaWZ5X3JlbW92ZRjeDyABKAsyIS5taUhvbW8uUHJvdG9zLkdDR01z",
            "Z01vZGlmeVJlbW92ZUgAEjIKCW1vdmVfY2FyZBgLIAEoCzIdLm1pSG9tby5Q",
            "cm90b3MuR0NHTXNnTW92ZUNhcmRIABIxCghuZXdfY2FyZBioAiABKAsyHC5t",
            "aUhvbW8uUHJvdG9zLkdDR01zZ05ld0NhcmRIABJLChZub19kYW1hZ2Vfc2tp",
            "bGxfcmVzdWx0GIUGIAEoCzIoLm1pSG9tby5Qcm90b3MuR0NHTXNnTm9EYW1h",
            "Z2VTa2lsbFJlc3VsdEgAEjEKCG9wX3RpbWVyGJoBIAEoCzIcLm1pSG9tby5Q",
            "cm90b3MuR0NHTXNnT3BUaW1lckgAEikKBHBhc3MYCCABKAsyGS5taUhvbW8u",
            "UHJvdG9zLkdDR01zZ1Bhc3NIABI4CgxwaGFzZV9jaGFuZ2UYCiABKAsyIC5t",
            "aUhvbW8uUHJvdG9zLkdDR01zZ1BoYXNlQ2hhbmdlSAASPQoOcGhhc2VfY29u",
            "dGludWUYhQkgASgLMiIubWlIb21vLlByb3Rvcy5HQ0dNc2dQaGFzZUNvbnRp",
            "bnVlSAASSAoUcHZlX2ludGVudGlvbl9jaGFuZ2UY9AkgASgLMicubWlIb21v",
            "LlByb3Rvcy5HQ0dNc2dQVkVJbnRlbnRpb25DaGFuZ2VIABJEChJwdmVfaW50",
            "ZW50aW9uX2luZm8Y0gYgASgLMiUubWlIb21vLlByb3Rvcy5HQ0dNc2dQVkVJ",
            "bnRlbnRpb25JbmZvSAASPQoOcmVhY3Rpb25fYmVnaW4Y8wEgASgLMiIubWlI",
            "b21vLlByb3Rvcy5HQ0dNc2dSZWFjdGlvbkJlZ2luSAASOQoMcmVhY3Rpb25f",
            "ZW5kGJQJIAEoCzIgLm1pSG9tby5Qcm90b3MuR0NHTXNnUmVhY3Rpb25FbmRI",
            "ABI4CgxyZW1vdmVfY2FyZHMYDCABKAsyIC5taUhvbW8uUHJvdG9zLkdDR01z",
            "Z1JlbW92ZUNhcmRzSAASPQoPc2VsZWN0X29uX3N0YWdlGAYgASgLMiIubWlI",
            "b21vLlByb3Rvcy5HQ0dNc2dTZWxlY3RPblN0YWdlSAASUAoZc2VsZWN0X29u",
            "X3N0YWdlX2J5X2VmZmVjdBjJDSABKAsyKi5taUhvbW8uUHJvdG9zLkdDR01z",
            "Z1NlbGVjdE9uU3RhZ2VCeUVmZmVjdEgAEkYKE3NraWxsX2xpbWl0c19jaGFu",
            "Z2UYxgUgASgLMiYubWlIb21vLlByb3Rvcy5HQ0dNc2dTa2lsbExpbWl0c0No",
            "YW5nZUgAEjgKDHNraWxsX3Jlc3VsdBgDIAEoCzIgLm1pSG9tby5Qcm90b3Mu",
            "R0NHTXNnU2tpbGxSZXN1bHRIABI4Cgx0b2tlbl9jaGFuZ2UYAiABKAsyIC5t",
            "aUhvbW8uUHJvdG9zLkdDR01zZ1Rva2VuQ2hhbmdlSAASQwoRdXBkYXRlX2Nv",
            "bnRyb2xsZXIY1wggASgLMiUubWlIb21vLlByb3Rvcy5HQ0dNc2dVcGRhdGVD",
            "b250cm9sbGVySAASMgoJdXNlX3NraWxsGAEgASgLMh0ubWlIb21vLlByb3Rv",
            "cy5HQ0dNc2dVc2VTa2lsbEgAEjoKDXVzZV9za2lsbF9lbmQY2AogASgLMiAu",
            "bWlIb21vLlByb3Rvcy5HQ0dNc2dVc2VTa2lsbEVuZEgAEkYKE3dhaXRpbmdf",
            "bGlzdF9jaGFuZ2UYxw8gASgLMiYubWlIb21vLlByb3Rvcy5HQ0dNc2dXYWl0",
            "aW5nTGlzdENoYW5nZUgAQgkKB21lc3NhZ2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.GCGMsgAddCardsReflection.Descriptor, global::MiHomo.Protos.GCGMsgAddDiceReflection.Descriptor, global::MiHomo.Protos.GCGMsgCardUpdateReflection.Descriptor, global::MiHomo.Protos.GCGMsgCharDieReflection.Descriptor, global::MiHomo.Protos.GCGMsgClientPerformReflection.Descriptor, global::MiHomo.Protos.GCGMsgCostDiceReflection.Descriptor, global::MiHomo.Protos.GCGMsgCostReviseReflection.Descriptor, global::MiHomo.Protos.GCGMsgDiceRerollReflection.Descriptor, global::MiHomo.Protos.GCGMsgDiceRollReflection.Descriptor, global::MiHomo.Protos.GCGMsgDuelDataChangeReflection.Descriptor, global::MiHomo.Protos.GCGMsgGameOverReflection.Descriptor, global::MiHomo.Protos.GCGMsgModifyAddReflection.Descriptor, global::MiHomo.Protos.GCGMsgModifyRemoveReflection.Descriptor, global::MiHomo.Protos.GCGMsgMoveCardReflection.Descriptor, global::MiHomo.Protos.GCGMsgNewCardReflection.Descriptor, global::MiHomo.Protos.GCGMsgNoDamageSkillResultReflection.Descriptor, global::MiHomo.Protos.GCGMsgOpTimerReflection.Descriptor, global::MiHomo.Protos.GCGMsgPassReflection.Descriptor, global::MiHomo.Protos.GCGMsgPhaseChangeReflection.Descriptor, global::MiHomo.Protos.GCGMsgPhaseContinueReflection.Descriptor, global::MiHomo.Protos.GCGMsgPVEIntentionChangeReflection.Descriptor, global::MiHomo.Protos.GCGMsgPVEIntentionInfoReflection.Descriptor, global::MiHomo.Protos.GCGMsgReactionBeginReflection.Descriptor, global::MiHomo.Protos.GCGMsgReactionEndReflection.Descriptor, global::MiHomo.Protos.GCGMsgRemoveCardsReflection.Descriptor, global::MiHomo.Protos.GCGMsgSelectOnStageReflection.Descriptor, global::MiHomo.Protos.GCGMsgSelectOnStageByEffectReflection.Descriptor, global::MiHomo.Protos.GCGMsgSkillLimitsChangeReflection.Descriptor, global::MiHomo.Protos.GCGMsgSkillResultReflection.Descriptor, global::MiHomo.Protos.GCGMsgTokenChangeReflection.Descriptor, global::MiHomo.Protos.GCGMsgUpdateControllerReflection.Descriptor, global::MiHomo.Protos.GCGMsgUseSkillReflection.Descriptor, global::MiHomo.Protos.GCGMsgUseSkillEndReflection.Descriptor, global::MiHomo.Protos.GCGMsgWaitingListChangeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.GCGMessage), global::MiHomo.Protos.GCGMessage.Parser, new[]{ "AddCards", "AddDice", "CardUpdate", "CharDie", "ClientPerform", "CostDice", "CostRevise", "DiceReroll", "DiceRoll", "DuelDataChange", "GameOver", "ModifyAdd", "ModifyRemove", "MoveCard", "NewCard", "NoDamageSkillResult", "OpTimer", "Pass", "PhaseChange", "PhaseContinue", "PveIntentionChange", "PveIntentionInfo", "ReactionBegin", "ReactionEnd", "RemoveCards", "SelectOnStage", "SelectOnStageByEffect", "SkillLimitsChange", "SkillResult", "TokenChange", "UpdateController", "UseSkill", "UseSkillEnd", "WaitingListChange" }, new[]{ "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GCGMessage : pb::IMessage<GCGMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GCGMessage> _parser = new pb::MessageParser<GCGMessage>(() => new GCGMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GCGMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.GCGMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGMessage(GCGMessage other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.AddCards:
          AddCards = other.AddCards.Clone();
          break;
        case MessageOneofCase.AddDice:
          AddDice = other.AddDice.Clone();
          break;
        case MessageOneofCase.CardUpdate:
          CardUpdate = other.CardUpdate.Clone();
          break;
        case MessageOneofCase.CharDie:
          CharDie = other.CharDie.Clone();
          break;
        case MessageOneofCase.ClientPerform:
          ClientPerform = other.ClientPerform.Clone();
          break;
        case MessageOneofCase.CostDice:
          CostDice = other.CostDice.Clone();
          break;
        case MessageOneofCase.CostRevise:
          CostRevise = other.CostRevise.Clone();
          break;
        case MessageOneofCase.DiceReroll:
          DiceReroll = other.DiceReroll.Clone();
          break;
        case MessageOneofCase.DiceRoll:
          DiceRoll = other.DiceRoll.Clone();
          break;
        case MessageOneofCase.DuelDataChange:
          DuelDataChange = other.DuelDataChange.Clone();
          break;
        case MessageOneofCase.GameOver:
          GameOver = other.GameOver.Clone();
          break;
        case MessageOneofCase.ModifyAdd:
          ModifyAdd = other.ModifyAdd.Clone();
          break;
        case MessageOneofCase.ModifyRemove:
          ModifyRemove = other.ModifyRemove.Clone();
          break;
        case MessageOneofCase.MoveCard:
          MoveCard = other.MoveCard.Clone();
          break;
        case MessageOneofCase.NewCard:
          NewCard = other.NewCard.Clone();
          break;
        case MessageOneofCase.NoDamageSkillResult:
          NoDamageSkillResult = other.NoDamageSkillResult.Clone();
          break;
        case MessageOneofCase.OpTimer:
          OpTimer = other.OpTimer.Clone();
          break;
        case MessageOneofCase.Pass:
          Pass = other.Pass.Clone();
          break;
        case MessageOneofCase.PhaseChange:
          PhaseChange = other.PhaseChange.Clone();
          break;
        case MessageOneofCase.PhaseContinue:
          PhaseContinue = other.PhaseContinue.Clone();
          break;
        case MessageOneofCase.PveIntentionChange:
          PveIntentionChange = other.PveIntentionChange.Clone();
          break;
        case MessageOneofCase.PveIntentionInfo:
          PveIntentionInfo = other.PveIntentionInfo.Clone();
          break;
        case MessageOneofCase.ReactionBegin:
          ReactionBegin = other.ReactionBegin.Clone();
          break;
        case MessageOneofCase.ReactionEnd:
          ReactionEnd = other.ReactionEnd.Clone();
          break;
        case MessageOneofCase.RemoveCards:
          RemoveCards = other.RemoveCards.Clone();
          break;
        case MessageOneofCase.SelectOnStage:
          SelectOnStage = other.SelectOnStage.Clone();
          break;
        case MessageOneofCase.SelectOnStageByEffect:
          SelectOnStageByEffect = other.SelectOnStageByEffect.Clone();
          break;
        case MessageOneofCase.SkillLimitsChange:
          SkillLimitsChange = other.SkillLimitsChange.Clone();
          break;
        case MessageOneofCase.SkillResult:
          SkillResult = other.SkillResult.Clone();
          break;
        case MessageOneofCase.TokenChange:
          TokenChange = other.TokenChange.Clone();
          break;
        case MessageOneofCase.UpdateController:
          UpdateController = other.UpdateController.Clone();
          break;
        case MessageOneofCase.UseSkill:
          UseSkill = other.UseSkill.Clone();
          break;
        case MessageOneofCase.UseSkillEnd:
          UseSkillEnd = other.UseSkillEnd.Clone();
          break;
        case MessageOneofCase.WaitingListChange:
          WaitingListChange = other.WaitingListChange.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGMessage Clone() {
      return new GCGMessage(this);
    }

    /// <summary>Field number for the "add_cards" field.</summary>
    public const int AddCardsFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgAddCards AddCards {
      get { return messageCase_ == MessageOneofCase.AddCards ? (global::MiHomo.Protos.GCGMsgAddCards) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AddCards;
      }
    }

    /// <summary>Field number for the "add_dice" field.</summary>
    public const int AddDiceFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgAddDice AddDice {
      get { return messageCase_ == MessageOneofCase.AddDice ? (global::MiHomo.Protos.GCGMsgAddDice) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.AddDice;
      }
    }

    /// <summary>Field number for the "card_update" field.</summary>
    public const int CardUpdateFieldNumber = 1702;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgCardUpdate CardUpdate {
      get { return messageCase_ == MessageOneofCase.CardUpdate ? (global::MiHomo.Protos.GCGMsgCardUpdate) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CardUpdate;
      }
    }

    /// <summary>Field number for the "char_die" field.</summary>
    public const int CharDieFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgCharDie CharDie {
      get { return messageCase_ == MessageOneofCase.CharDie ? (global::MiHomo.Protos.GCGMsgCharDie) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CharDie;
      }
    }

    /// <summary>Field number for the "client_perform" field.</summary>
    public const int ClientPerformFieldNumber = 1677;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgClientPerform ClientPerform {
      get { return messageCase_ == MessageOneofCase.ClientPerform ? (global::MiHomo.Protos.GCGMsgClientPerform) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ClientPerform;
      }
    }

    /// <summary>Field number for the "cost_dice" field.</summary>
    public const int CostDiceFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgCostDice CostDice {
      get { return messageCase_ == MessageOneofCase.CostDice ? (global::MiHomo.Protos.GCGMsgCostDice) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CostDice;
      }
    }

    /// <summary>Field number for the "cost_revise" field.</summary>
    public const int CostReviseFieldNumber = 468;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgCostRevise CostRevise {
      get { return messageCase_ == MessageOneofCase.CostRevise ? (global::MiHomo.Protos.GCGMsgCostRevise) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.CostRevise;
      }
    }

    /// <summary>Field number for the "dice_reroll" field.</summary>
    public const int DiceRerollFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgDiceReroll DiceReroll {
      get { return messageCase_ == MessageOneofCase.DiceReroll ? (global::MiHomo.Protos.GCGMsgDiceReroll) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.DiceReroll;
      }
    }

    /// <summary>Field number for the "dice_roll" field.</summary>
    public const int DiceRollFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgDiceRoll DiceRoll {
      get { return messageCase_ == MessageOneofCase.DiceRoll ? (global::MiHomo.Protos.GCGMsgDiceRoll) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.DiceRoll;
      }
    }

    /// <summary>Field number for the "duel_data_change" field.</summary>
    public const int DuelDataChangeFieldNumber = 1791;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgDuelDataChange DuelDataChange {
      get { return messageCase_ == MessageOneofCase.DuelDataChange ? (global::MiHomo.Protos.GCGMsgDuelDataChange) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.DuelDataChange;
      }
    }

    /// <summary>Field number for the "game_over" field.</summary>
    public const int GameOverFieldNumber = 632;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgGameOver GameOver {
      get { return messageCase_ == MessageOneofCase.GameOver ? (global::MiHomo.Protos.GCGMsgGameOver) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.GameOver;
      }
    }

    /// <summary>Field number for the "modify_add" field.</summary>
    public const int ModifyAddFieldNumber = 1733;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgModifyAdd ModifyAdd {
      get { return messageCase_ == MessageOneofCase.ModifyAdd ? (global::MiHomo.Protos.GCGMsgModifyAdd) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ModifyAdd;
      }
    }

    /// <summary>Field number for the "modify_remove" field.</summary>
    public const int ModifyRemoveFieldNumber = 2014;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgModifyRemove ModifyRemove {
      get { return messageCase_ == MessageOneofCase.ModifyRemove ? (global::MiHomo.Protos.GCGMsgModifyRemove) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ModifyRemove;
      }
    }

    /// <summary>Field number for the "move_card" field.</summary>
    public const int MoveCardFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgMoveCard MoveCard {
      get { return messageCase_ == MessageOneofCase.MoveCard ? (global::MiHomo.Protos.GCGMsgMoveCard) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.MoveCard;
      }
    }

    /// <summary>Field number for the "new_card" field.</summary>
    public const int NewCardFieldNumber = 296;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgNewCard NewCard {
      get { return messageCase_ == MessageOneofCase.NewCard ? (global::MiHomo.Protos.GCGMsgNewCard) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NewCard;
      }
    }

    /// <summary>Field number for the "no_damage_skill_result" field.</summary>
    public const int NoDamageSkillResultFieldNumber = 773;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgNoDamageSkillResult NoDamageSkillResult {
      get { return messageCase_ == MessageOneofCase.NoDamageSkillResult ? (global::MiHomo.Protos.GCGMsgNoDamageSkillResult) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.NoDamageSkillResult;
      }
    }

    /// <summary>Field number for the "op_timer" field.</summary>
    public const int OpTimerFieldNumber = 154;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgOpTimer OpTimer {
      get { return messageCase_ == MessageOneofCase.OpTimer ? (global::MiHomo.Protos.GCGMsgOpTimer) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.OpTimer;
      }
    }

    /// <summary>Field number for the "pass" field.</summary>
    public const int PassFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgPass Pass {
      get { return messageCase_ == MessageOneofCase.Pass ? (global::MiHomo.Protos.GCGMsgPass) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Pass;
      }
    }

    /// <summary>Field number for the "phase_change" field.</summary>
    public const int PhaseChangeFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgPhaseChange PhaseChange {
      get { return messageCase_ == MessageOneofCase.PhaseChange ? (global::MiHomo.Protos.GCGMsgPhaseChange) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PhaseChange;
      }
    }

    /// <summary>Field number for the "phase_continue" field.</summary>
    public const int PhaseContinueFieldNumber = 1157;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgPhaseContinue PhaseContinue {
      get { return messageCase_ == MessageOneofCase.PhaseContinue ? (global::MiHomo.Protos.GCGMsgPhaseContinue) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PhaseContinue;
      }
    }

    /// <summary>Field number for the "pve_intention_change" field.</summary>
    public const int PveIntentionChangeFieldNumber = 1268;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgPVEIntentionChange PveIntentionChange {
      get { return messageCase_ == MessageOneofCase.PveIntentionChange ? (global::MiHomo.Protos.GCGMsgPVEIntentionChange) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PveIntentionChange;
      }
    }

    /// <summary>Field number for the "pve_intention_info" field.</summary>
    public const int PveIntentionInfoFieldNumber = 850;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgPVEIntentionInfo PveIntentionInfo {
      get { return messageCase_ == MessageOneofCase.PveIntentionInfo ? (global::MiHomo.Protos.GCGMsgPVEIntentionInfo) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.PveIntentionInfo;
      }
    }

    /// <summary>Field number for the "reaction_begin" field.</summary>
    public const int ReactionBeginFieldNumber = 243;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgReactionBegin ReactionBegin {
      get { return messageCase_ == MessageOneofCase.ReactionBegin ? (global::MiHomo.Protos.GCGMsgReactionBegin) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ReactionBegin;
      }
    }

    /// <summary>Field number for the "reaction_end" field.</summary>
    public const int ReactionEndFieldNumber = 1172;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgReactionEnd ReactionEnd {
      get { return messageCase_ == MessageOneofCase.ReactionEnd ? (global::MiHomo.Protos.GCGMsgReactionEnd) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ReactionEnd;
      }
    }

    /// <summary>Field number for the "remove_cards" field.</summary>
    public const int RemoveCardsFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgRemoveCards RemoveCards {
      get { return messageCase_ == MessageOneofCase.RemoveCards ? (global::MiHomo.Protos.GCGMsgRemoveCards) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RemoveCards;
      }
    }

    /// <summary>Field number for the "select_on_stage" field.</summary>
    public const int SelectOnStageFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgSelectOnStage SelectOnStage {
      get { return messageCase_ == MessageOneofCase.SelectOnStage ? (global::MiHomo.Protos.GCGMsgSelectOnStage) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SelectOnStage;
      }
    }

    /// <summary>Field number for the "select_on_stage_by_effect" field.</summary>
    public const int SelectOnStageByEffectFieldNumber = 1737;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgSelectOnStageByEffect SelectOnStageByEffect {
      get { return messageCase_ == MessageOneofCase.SelectOnStageByEffect ? (global::MiHomo.Protos.GCGMsgSelectOnStageByEffect) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SelectOnStageByEffect;
      }
    }

    /// <summary>Field number for the "skill_limits_change" field.</summary>
    public const int SkillLimitsChangeFieldNumber = 710;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgSkillLimitsChange SkillLimitsChange {
      get { return messageCase_ == MessageOneofCase.SkillLimitsChange ? (global::MiHomo.Protos.GCGMsgSkillLimitsChange) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SkillLimitsChange;
      }
    }

    /// <summary>Field number for the "skill_result" field.</summary>
    public const int SkillResultFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgSkillResult SkillResult {
      get { return messageCase_ == MessageOneofCase.SkillResult ? (global::MiHomo.Protos.GCGMsgSkillResult) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SkillResult;
      }
    }

    /// <summary>Field number for the "token_change" field.</summary>
    public const int TokenChangeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgTokenChange TokenChange {
      get { return messageCase_ == MessageOneofCase.TokenChange ? (global::MiHomo.Protos.GCGMsgTokenChange) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.TokenChange;
      }
    }

    /// <summary>Field number for the "update_controller" field.</summary>
    public const int UpdateControllerFieldNumber = 1111;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgUpdateController UpdateController {
      get { return messageCase_ == MessageOneofCase.UpdateController ? (global::MiHomo.Protos.GCGMsgUpdateController) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UpdateController;
      }
    }

    /// <summary>Field number for the "use_skill" field.</summary>
    public const int UseSkillFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgUseSkill UseSkill {
      get { return messageCase_ == MessageOneofCase.UseSkill ? (global::MiHomo.Protos.GCGMsgUseSkill) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UseSkill;
      }
    }

    /// <summary>Field number for the "use_skill_end" field.</summary>
    public const int UseSkillEndFieldNumber = 1368;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgUseSkillEnd UseSkillEnd {
      get { return messageCase_ == MessageOneofCase.UseSkillEnd ? (global::MiHomo.Protos.GCGMsgUseSkillEnd) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UseSkillEnd;
      }
    }

    /// <summary>Field number for the "waiting_list_change" field.</summary>
    public const int WaitingListChangeFieldNumber = 1991;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GCGMsgWaitingListChange WaitingListChange {
      get { return messageCase_ == MessageOneofCase.WaitingListChange ? (global::MiHomo.Protos.GCGMsgWaitingListChange) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.WaitingListChange;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      AddCards = 5,
      AddDice = 7,
      CardUpdate = 1702,
      CharDie = 4,
      ClientPerform = 1677,
      CostDice = 13,
      CostRevise = 468,
      DiceReroll = 15,
      DiceRoll = 14,
      DuelDataChange = 1791,
      GameOver = 632,
      ModifyAdd = 1733,
      ModifyRemove = 2014,
      MoveCard = 11,
      NewCard = 296,
      NoDamageSkillResult = 773,
      OpTimer = 154,
      Pass = 8,
      PhaseChange = 10,
      PhaseContinue = 1157,
      PveIntentionChange = 1268,
      PveIntentionInfo = 850,
      ReactionBegin = 243,
      ReactionEnd = 1172,
      RemoveCards = 12,
      SelectOnStage = 6,
      SelectOnStageByEffect = 1737,
      SkillLimitsChange = 710,
      SkillResult = 3,
      TokenChange = 2,
      UpdateController = 1111,
      UseSkill = 1,
      UseSkillEnd = 1368,
      WaitingListChange = 1991,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GCGMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GCGMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AddCards, other.AddCards)) return false;
      if (!object.Equals(AddDice, other.AddDice)) return false;
      if (!object.Equals(CardUpdate, other.CardUpdate)) return false;
      if (!object.Equals(CharDie, other.CharDie)) return false;
      if (!object.Equals(ClientPerform, other.ClientPerform)) return false;
      if (!object.Equals(CostDice, other.CostDice)) return false;
      if (!object.Equals(CostRevise, other.CostRevise)) return false;
      if (!object.Equals(DiceReroll, other.DiceReroll)) return false;
      if (!object.Equals(DiceRoll, other.DiceRoll)) return false;
      if (!object.Equals(DuelDataChange, other.DuelDataChange)) return false;
      if (!object.Equals(GameOver, other.GameOver)) return false;
      if (!object.Equals(ModifyAdd, other.ModifyAdd)) return false;
      if (!object.Equals(ModifyRemove, other.ModifyRemove)) return false;
      if (!object.Equals(MoveCard, other.MoveCard)) return false;
      if (!object.Equals(NewCard, other.NewCard)) return false;
      if (!object.Equals(NoDamageSkillResult, other.NoDamageSkillResult)) return false;
      if (!object.Equals(OpTimer, other.OpTimer)) return false;
      if (!object.Equals(Pass, other.Pass)) return false;
      if (!object.Equals(PhaseChange, other.PhaseChange)) return false;
      if (!object.Equals(PhaseContinue, other.PhaseContinue)) return false;
      if (!object.Equals(PveIntentionChange, other.PveIntentionChange)) return false;
      if (!object.Equals(PveIntentionInfo, other.PveIntentionInfo)) return false;
      if (!object.Equals(ReactionBegin, other.ReactionBegin)) return false;
      if (!object.Equals(ReactionEnd, other.ReactionEnd)) return false;
      if (!object.Equals(RemoveCards, other.RemoveCards)) return false;
      if (!object.Equals(SelectOnStage, other.SelectOnStage)) return false;
      if (!object.Equals(SelectOnStageByEffect, other.SelectOnStageByEffect)) return false;
      if (!object.Equals(SkillLimitsChange, other.SkillLimitsChange)) return false;
      if (!object.Equals(SkillResult, other.SkillResult)) return false;
      if (!object.Equals(TokenChange, other.TokenChange)) return false;
      if (!object.Equals(UpdateController, other.UpdateController)) return false;
      if (!object.Equals(UseSkill, other.UseSkill)) return false;
      if (!object.Equals(UseSkillEnd, other.UseSkillEnd)) return false;
      if (!object.Equals(WaitingListChange, other.WaitingListChange)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.AddCards) hash ^= AddCards.GetHashCode();
      if (messageCase_ == MessageOneofCase.AddDice) hash ^= AddDice.GetHashCode();
      if (messageCase_ == MessageOneofCase.CardUpdate) hash ^= CardUpdate.GetHashCode();
      if (messageCase_ == MessageOneofCase.CharDie) hash ^= CharDie.GetHashCode();
      if (messageCase_ == MessageOneofCase.ClientPerform) hash ^= ClientPerform.GetHashCode();
      if (messageCase_ == MessageOneofCase.CostDice) hash ^= CostDice.GetHashCode();
      if (messageCase_ == MessageOneofCase.CostRevise) hash ^= CostRevise.GetHashCode();
      if (messageCase_ == MessageOneofCase.DiceReroll) hash ^= DiceReroll.GetHashCode();
      if (messageCase_ == MessageOneofCase.DiceRoll) hash ^= DiceRoll.GetHashCode();
      if (messageCase_ == MessageOneofCase.DuelDataChange) hash ^= DuelDataChange.GetHashCode();
      if (messageCase_ == MessageOneofCase.GameOver) hash ^= GameOver.GetHashCode();
      if (messageCase_ == MessageOneofCase.ModifyAdd) hash ^= ModifyAdd.GetHashCode();
      if (messageCase_ == MessageOneofCase.ModifyRemove) hash ^= ModifyRemove.GetHashCode();
      if (messageCase_ == MessageOneofCase.MoveCard) hash ^= MoveCard.GetHashCode();
      if (messageCase_ == MessageOneofCase.NewCard) hash ^= NewCard.GetHashCode();
      if (messageCase_ == MessageOneofCase.NoDamageSkillResult) hash ^= NoDamageSkillResult.GetHashCode();
      if (messageCase_ == MessageOneofCase.OpTimer) hash ^= OpTimer.GetHashCode();
      if (messageCase_ == MessageOneofCase.Pass) hash ^= Pass.GetHashCode();
      if (messageCase_ == MessageOneofCase.PhaseChange) hash ^= PhaseChange.GetHashCode();
      if (messageCase_ == MessageOneofCase.PhaseContinue) hash ^= PhaseContinue.GetHashCode();
      if (messageCase_ == MessageOneofCase.PveIntentionChange) hash ^= PveIntentionChange.GetHashCode();
      if (messageCase_ == MessageOneofCase.PveIntentionInfo) hash ^= PveIntentionInfo.GetHashCode();
      if (messageCase_ == MessageOneofCase.ReactionBegin) hash ^= ReactionBegin.GetHashCode();
      if (messageCase_ == MessageOneofCase.ReactionEnd) hash ^= ReactionEnd.GetHashCode();
      if (messageCase_ == MessageOneofCase.RemoveCards) hash ^= RemoveCards.GetHashCode();
      if (messageCase_ == MessageOneofCase.SelectOnStage) hash ^= SelectOnStage.GetHashCode();
      if (messageCase_ == MessageOneofCase.SelectOnStageByEffect) hash ^= SelectOnStageByEffect.GetHashCode();
      if (messageCase_ == MessageOneofCase.SkillLimitsChange) hash ^= SkillLimitsChange.GetHashCode();
      if (messageCase_ == MessageOneofCase.SkillResult) hash ^= SkillResult.GetHashCode();
      if (messageCase_ == MessageOneofCase.TokenChange) hash ^= TokenChange.GetHashCode();
      if (messageCase_ == MessageOneofCase.UpdateController) hash ^= UpdateController.GetHashCode();
      if (messageCase_ == MessageOneofCase.UseSkill) hash ^= UseSkill.GetHashCode();
      if (messageCase_ == MessageOneofCase.UseSkillEnd) hash ^= UseSkillEnd.GetHashCode();
      if (messageCase_ == MessageOneofCase.WaitingListChange) hash ^= WaitingListChange.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (messageCase_ == MessageOneofCase.UseSkill) {
        output.WriteRawTag(10);
        output.WriteMessage(UseSkill);
      }
      if (messageCase_ == MessageOneofCase.TokenChange) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenChange);
      }
      if (messageCase_ == MessageOneofCase.SkillResult) {
        output.WriteRawTag(26);
        output.WriteMessage(SkillResult);
      }
      if (messageCase_ == MessageOneofCase.CharDie) {
        output.WriteRawTag(34);
        output.WriteMessage(CharDie);
      }
      if (messageCase_ == MessageOneofCase.AddCards) {
        output.WriteRawTag(42);
        output.WriteMessage(AddCards);
      }
      if (messageCase_ == MessageOneofCase.SelectOnStage) {
        output.WriteRawTag(50);
        output.WriteMessage(SelectOnStage);
      }
      if (messageCase_ == MessageOneofCase.AddDice) {
        output.WriteRawTag(58);
        output.WriteMessage(AddDice);
      }
      if (messageCase_ == MessageOneofCase.Pass) {
        output.WriteRawTag(66);
        output.WriteMessage(Pass);
      }
      if (messageCase_ == MessageOneofCase.PhaseChange) {
        output.WriteRawTag(82);
        output.WriteMessage(PhaseChange);
      }
      if (messageCase_ == MessageOneofCase.MoveCard) {
        output.WriteRawTag(90);
        output.WriteMessage(MoveCard);
      }
      if (messageCase_ == MessageOneofCase.RemoveCards) {
        output.WriteRawTag(98);
        output.WriteMessage(RemoveCards);
      }
      if (messageCase_ == MessageOneofCase.CostDice) {
        output.WriteRawTag(106);
        output.WriteMessage(CostDice);
      }
      if (messageCase_ == MessageOneofCase.DiceRoll) {
        output.WriteRawTag(114);
        output.WriteMessage(DiceRoll);
      }
      if (messageCase_ == MessageOneofCase.DiceReroll) {
        output.WriteRawTag(122);
        output.WriteMessage(DiceReroll);
      }
      if (messageCase_ == MessageOneofCase.OpTimer) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(OpTimer);
      }
      if (messageCase_ == MessageOneofCase.ReactionBegin) {
        output.WriteRawTag(154, 15);
        output.WriteMessage(ReactionBegin);
      }
      if (messageCase_ == MessageOneofCase.NewCard) {
        output.WriteRawTag(194, 18);
        output.WriteMessage(NewCard);
      }
      if (messageCase_ == MessageOneofCase.CostRevise) {
        output.WriteRawTag(162, 29);
        output.WriteMessage(CostRevise);
      }
      if (messageCase_ == MessageOneofCase.GameOver) {
        output.WriteRawTag(194, 39);
        output.WriteMessage(GameOver);
      }
      if (messageCase_ == MessageOneofCase.SkillLimitsChange) {
        output.WriteRawTag(178, 44);
        output.WriteMessage(SkillLimitsChange);
      }
      if (messageCase_ == MessageOneofCase.NoDamageSkillResult) {
        output.WriteRawTag(170, 48);
        output.WriteMessage(NoDamageSkillResult);
      }
      if (messageCase_ == MessageOneofCase.PveIntentionInfo) {
        output.WriteRawTag(146, 53);
        output.WriteMessage(PveIntentionInfo);
      }
      if (messageCase_ == MessageOneofCase.UpdateController) {
        output.WriteRawTag(186, 69);
        output.WriteMessage(UpdateController);
      }
      if (messageCase_ == MessageOneofCase.PhaseContinue) {
        output.WriteRawTag(170, 72);
        output.WriteMessage(PhaseContinue);
      }
      if (messageCase_ == MessageOneofCase.ReactionEnd) {
        output.WriteRawTag(162, 73);
        output.WriteMessage(ReactionEnd);
      }
      if (messageCase_ == MessageOneofCase.PveIntentionChange) {
        output.WriteRawTag(162, 79);
        output.WriteMessage(PveIntentionChange);
      }
      if (messageCase_ == MessageOneofCase.UseSkillEnd) {
        output.WriteRawTag(194, 85);
        output.WriteMessage(UseSkillEnd);
      }
      if (messageCase_ == MessageOneofCase.ClientPerform) {
        output.WriteRawTag(234, 104);
        output.WriteMessage(ClientPerform);
      }
      if (messageCase_ == MessageOneofCase.CardUpdate) {
        output.WriteRawTag(178, 106);
        output.WriteMessage(CardUpdate);
      }
      if (messageCase_ == MessageOneofCase.ModifyAdd) {
        output.WriteRawTag(170, 108);
        output.WriteMessage(ModifyAdd);
      }
      if (messageCase_ == MessageOneofCase.SelectOnStageByEffect) {
        output.WriteRawTag(202, 108);
        output.WriteMessage(SelectOnStageByEffect);
      }
      if (messageCase_ == MessageOneofCase.DuelDataChange) {
        output.WriteRawTag(250, 111);
        output.WriteMessage(DuelDataChange);
      }
      if (messageCase_ == MessageOneofCase.WaitingListChange) {
        output.WriteRawTag(186, 124);
        output.WriteMessage(WaitingListChange);
      }
      if (messageCase_ == MessageOneofCase.ModifyRemove) {
        output.WriteRawTag(242, 125);
        output.WriteMessage(ModifyRemove);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (messageCase_ == MessageOneofCase.UseSkill) {
        output.WriteRawTag(10);
        output.WriteMessage(UseSkill);
      }
      if (messageCase_ == MessageOneofCase.TokenChange) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenChange);
      }
      if (messageCase_ == MessageOneofCase.SkillResult) {
        output.WriteRawTag(26);
        output.WriteMessage(SkillResult);
      }
      if (messageCase_ == MessageOneofCase.CharDie) {
        output.WriteRawTag(34);
        output.WriteMessage(CharDie);
      }
      if (messageCase_ == MessageOneofCase.AddCards) {
        output.WriteRawTag(42);
        output.WriteMessage(AddCards);
      }
      if (messageCase_ == MessageOneofCase.SelectOnStage) {
        output.WriteRawTag(50);
        output.WriteMessage(SelectOnStage);
      }
      if (messageCase_ == MessageOneofCase.AddDice) {
        output.WriteRawTag(58);
        output.WriteMessage(AddDice);
      }
      if (messageCase_ == MessageOneofCase.Pass) {
        output.WriteRawTag(66);
        output.WriteMessage(Pass);
      }
      if (messageCase_ == MessageOneofCase.PhaseChange) {
        output.WriteRawTag(82);
        output.WriteMessage(PhaseChange);
      }
      if (messageCase_ == MessageOneofCase.MoveCard) {
        output.WriteRawTag(90);
        output.WriteMessage(MoveCard);
      }
      if (messageCase_ == MessageOneofCase.RemoveCards) {
        output.WriteRawTag(98);
        output.WriteMessage(RemoveCards);
      }
      if (messageCase_ == MessageOneofCase.CostDice) {
        output.WriteRawTag(106);
        output.WriteMessage(CostDice);
      }
      if (messageCase_ == MessageOneofCase.DiceRoll) {
        output.WriteRawTag(114);
        output.WriteMessage(DiceRoll);
      }
      if (messageCase_ == MessageOneofCase.DiceReroll) {
        output.WriteRawTag(122);
        output.WriteMessage(DiceReroll);
      }
      if (messageCase_ == MessageOneofCase.OpTimer) {
        output.WriteRawTag(210, 9);
        output.WriteMessage(OpTimer);
      }
      if (messageCase_ == MessageOneofCase.ReactionBegin) {
        output.WriteRawTag(154, 15);
        output.WriteMessage(ReactionBegin);
      }
      if (messageCase_ == MessageOneofCase.NewCard) {
        output.WriteRawTag(194, 18);
        output.WriteMessage(NewCard);
      }
      if (messageCase_ == MessageOneofCase.CostRevise) {
        output.WriteRawTag(162, 29);
        output.WriteMessage(CostRevise);
      }
      if (messageCase_ == MessageOneofCase.GameOver) {
        output.WriteRawTag(194, 39);
        output.WriteMessage(GameOver);
      }
      if (messageCase_ == MessageOneofCase.SkillLimitsChange) {
        output.WriteRawTag(178, 44);
        output.WriteMessage(SkillLimitsChange);
      }
      if (messageCase_ == MessageOneofCase.NoDamageSkillResult) {
        output.WriteRawTag(170, 48);
        output.WriteMessage(NoDamageSkillResult);
      }
      if (messageCase_ == MessageOneofCase.PveIntentionInfo) {
        output.WriteRawTag(146, 53);
        output.WriteMessage(PveIntentionInfo);
      }
      if (messageCase_ == MessageOneofCase.UpdateController) {
        output.WriteRawTag(186, 69);
        output.WriteMessage(UpdateController);
      }
      if (messageCase_ == MessageOneofCase.PhaseContinue) {
        output.WriteRawTag(170, 72);
        output.WriteMessage(PhaseContinue);
      }
      if (messageCase_ == MessageOneofCase.ReactionEnd) {
        output.WriteRawTag(162, 73);
        output.WriteMessage(ReactionEnd);
      }
      if (messageCase_ == MessageOneofCase.PveIntentionChange) {
        output.WriteRawTag(162, 79);
        output.WriteMessage(PveIntentionChange);
      }
      if (messageCase_ == MessageOneofCase.UseSkillEnd) {
        output.WriteRawTag(194, 85);
        output.WriteMessage(UseSkillEnd);
      }
      if (messageCase_ == MessageOneofCase.ClientPerform) {
        output.WriteRawTag(234, 104);
        output.WriteMessage(ClientPerform);
      }
      if (messageCase_ == MessageOneofCase.CardUpdate) {
        output.WriteRawTag(178, 106);
        output.WriteMessage(CardUpdate);
      }
      if (messageCase_ == MessageOneofCase.ModifyAdd) {
        output.WriteRawTag(170, 108);
        output.WriteMessage(ModifyAdd);
      }
      if (messageCase_ == MessageOneofCase.SelectOnStageByEffect) {
        output.WriteRawTag(202, 108);
        output.WriteMessage(SelectOnStageByEffect);
      }
      if (messageCase_ == MessageOneofCase.DuelDataChange) {
        output.WriteRawTag(250, 111);
        output.WriteMessage(DuelDataChange);
      }
      if (messageCase_ == MessageOneofCase.WaitingListChange) {
        output.WriteRawTag(186, 124);
        output.WriteMessage(WaitingListChange);
      }
      if (messageCase_ == MessageOneofCase.ModifyRemove) {
        output.WriteRawTag(242, 125);
        output.WriteMessage(ModifyRemove);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.AddCards) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddCards);
      }
      if (messageCase_ == MessageOneofCase.AddDice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddDice);
      }
      if (messageCase_ == MessageOneofCase.CardUpdate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CardUpdate);
      }
      if (messageCase_ == MessageOneofCase.CharDie) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CharDie);
      }
      if (messageCase_ == MessageOneofCase.ClientPerform) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClientPerform);
      }
      if (messageCase_ == MessageOneofCase.CostDice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CostDice);
      }
      if (messageCase_ == MessageOneofCase.CostRevise) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CostRevise);
      }
      if (messageCase_ == MessageOneofCase.DiceReroll) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiceReroll);
      }
      if (messageCase_ == MessageOneofCase.DiceRoll) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiceRoll);
      }
      if (messageCase_ == MessageOneofCase.DuelDataChange) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DuelDataChange);
      }
      if (messageCase_ == MessageOneofCase.GameOver) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameOver);
      }
      if (messageCase_ == MessageOneofCase.ModifyAdd) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ModifyAdd);
      }
      if (messageCase_ == MessageOneofCase.ModifyRemove) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ModifyRemove);
      }
      if (messageCase_ == MessageOneofCase.MoveCard) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveCard);
      }
      if (messageCase_ == MessageOneofCase.NewCard) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewCard);
      }
      if (messageCase_ == MessageOneofCase.NoDamageSkillResult) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NoDamageSkillResult);
      }
      if (messageCase_ == MessageOneofCase.OpTimer) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OpTimer);
      }
      if (messageCase_ == MessageOneofCase.Pass) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pass);
      }
      if (messageCase_ == MessageOneofCase.PhaseChange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhaseChange);
      }
      if (messageCase_ == MessageOneofCase.PhaseContinue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PhaseContinue);
      }
      if (messageCase_ == MessageOneofCase.PveIntentionChange) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PveIntentionChange);
      }
      if (messageCase_ == MessageOneofCase.PveIntentionInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PveIntentionInfo);
      }
      if (messageCase_ == MessageOneofCase.ReactionBegin) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReactionBegin);
      }
      if (messageCase_ == MessageOneofCase.ReactionEnd) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReactionEnd);
      }
      if (messageCase_ == MessageOneofCase.RemoveCards) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoveCards);
      }
      if (messageCase_ == MessageOneofCase.SelectOnStage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectOnStage);
      }
      if (messageCase_ == MessageOneofCase.SelectOnStageByEffect) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SelectOnStageByEffect);
      }
      if (messageCase_ == MessageOneofCase.SkillLimitsChange) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SkillLimitsChange);
      }
      if (messageCase_ == MessageOneofCase.SkillResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkillResult);
      }
      if (messageCase_ == MessageOneofCase.TokenChange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenChange);
      }
      if (messageCase_ == MessageOneofCase.UpdateController) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateController);
      }
      if (messageCase_ == MessageOneofCase.UseSkill) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UseSkill);
      }
      if (messageCase_ == MessageOneofCase.UseSkillEnd) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UseSkillEnd);
      }
      if (messageCase_ == MessageOneofCase.WaitingListChange) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaitingListChange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GCGMessage other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.AddCards:
          if (AddCards == null) {
            AddCards = new global::MiHomo.Protos.GCGMsgAddCards();
          }
          AddCards.MergeFrom(other.AddCards);
          break;
        case MessageOneofCase.AddDice:
          if (AddDice == null) {
            AddDice = new global::MiHomo.Protos.GCGMsgAddDice();
          }
          AddDice.MergeFrom(other.AddDice);
          break;
        case MessageOneofCase.CardUpdate:
          if (CardUpdate == null) {
            CardUpdate = new global::MiHomo.Protos.GCGMsgCardUpdate();
          }
          CardUpdate.MergeFrom(other.CardUpdate);
          break;
        case MessageOneofCase.CharDie:
          if (CharDie == null) {
            CharDie = new global::MiHomo.Protos.GCGMsgCharDie();
          }
          CharDie.MergeFrom(other.CharDie);
          break;
        case MessageOneofCase.ClientPerform:
          if (ClientPerform == null) {
            ClientPerform = new global::MiHomo.Protos.GCGMsgClientPerform();
          }
          ClientPerform.MergeFrom(other.ClientPerform);
          break;
        case MessageOneofCase.CostDice:
          if (CostDice == null) {
            CostDice = new global::MiHomo.Protos.GCGMsgCostDice();
          }
          CostDice.MergeFrom(other.CostDice);
          break;
        case MessageOneofCase.CostRevise:
          if (CostRevise == null) {
            CostRevise = new global::MiHomo.Protos.GCGMsgCostRevise();
          }
          CostRevise.MergeFrom(other.CostRevise);
          break;
        case MessageOneofCase.DiceReroll:
          if (DiceReroll == null) {
            DiceReroll = new global::MiHomo.Protos.GCGMsgDiceReroll();
          }
          DiceReroll.MergeFrom(other.DiceReroll);
          break;
        case MessageOneofCase.DiceRoll:
          if (DiceRoll == null) {
            DiceRoll = new global::MiHomo.Protos.GCGMsgDiceRoll();
          }
          DiceRoll.MergeFrom(other.DiceRoll);
          break;
        case MessageOneofCase.DuelDataChange:
          if (DuelDataChange == null) {
            DuelDataChange = new global::MiHomo.Protos.GCGMsgDuelDataChange();
          }
          DuelDataChange.MergeFrom(other.DuelDataChange);
          break;
        case MessageOneofCase.GameOver:
          if (GameOver == null) {
            GameOver = new global::MiHomo.Protos.GCGMsgGameOver();
          }
          GameOver.MergeFrom(other.GameOver);
          break;
        case MessageOneofCase.ModifyAdd:
          if (ModifyAdd == null) {
            ModifyAdd = new global::MiHomo.Protos.GCGMsgModifyAdd();
          }
          ModifyAdd.MergeFrom(other.ModifyAdd);
          break;
        case MessageOneofCase.ModifyRemove:
          if (ModifyRemove == null) {
            ModifyRemove = new global::MiHomo.Protos.GCGMsgModifyRemove();
          }
          ModifyRemove.MergeFrom(other.ModifyRemove);
          break;
        case MessageOneofCase.MoveCard:
          if (MoveCard == null) {
            MoveCard = new global::MiHomo.Protos.GCGMsgMoveCard();
          }
          MoveCard.MergeFrom(other.MoveCard);
          break;
        case MessageOneofCase.NewCard:
          if (NewCard == null) {
            NewCard = new global::MiHomo.Protos.GCGMsgNewCard();
          }
          NewCard.MergeFrom(other.NewCard);
          break;
        case MessageOneofCase.NoDamageSkillResult:
          if (NoDamageSkillResult == null) {
            NoDamageSkillResult = new global::MiHomo.Protos.GCGMsgNoDamageSkillResult();
          }
          NoDamageSkillResult.MergeFrom(other.NoDamageSkillResult);
          break;
        case MessageOneofCase.OpTimer:
          if (OpTimer == null) {
            OpTimer = new global::MiHomo.Protos.GCGMsgOpTimer();
          }
          OpTimer.MergeFrom(other.OpTimer);
          break;
        case MessageOneofCase.Pass:
          if (Pass == null) {
            Pass = new global::MiHomo.Protos.GCGMsgPass();
          }
          Pass.MergeFrom(other.Pass);
          break;
        case MessageOneofCase.PhaseChange:
          if (PhaseChange == null) {
            PhaseChange = new global::MiHomo.Protos.GCGMsgPhaseChange();
          }
          PhaseChange.MergeFrom(other.PhaseChange);
          break;
        case MessageOneofCase.PhaseContinue:
          if (PhaseContinue == null) {
            PhaseContinue = new global::MiHomo.Protos.GCGMsgPhaseContinue();
          }
          PhaseContinue.MergeFrom(other.PhaseContinue);
          break;
        case MessageOneofCase.PveIntentionChange:
          if (PveIntentionChange == null) {
            PveIntentionChange = new global::MiHomo.Protos.GCGMsgPVEIntentionChange();
          }
          PveIntentionChange.MergeFrom(other.PveIntentionChange);
          break;
        case MessageOneofCase.PveIntentionInfo:
          if (PveIntentionInfo == null) {
            PveIntentionInfo = new global::MiHomo.Protos.GCGMsgPVEIntentionInfo();
          }
          PveIntentionInfo.MergeFrom(other.PveIntentionInfo);
          break;
        case MessageOneofCase.ReactionBegin:
          if (ReactionBegin == null) {
            ReactionBegin = new global::MiHomo.Protos.GCGMsgReactionBegin();
          }
          ReactionBegin.MergeFrom(other.ReactionBegin);
          break;
        case MessageOneofCase.ReactionEnd:
          if (ReactionEnd == null) {
            ReactionEnd = new global::MiHomo.Protos.GCGMsgReactionEnd();
          }
          ReactionEnd.MergeFrom(other.ReactionEnd);
          break;
        case MessageOneofCase.RemoveCards:
          if (RemoveCards == null) {
            RemoveCards = new global::MiHomo.Protos.GCGMsgRemoveCards();
          }
          RemoveCards.MergeFrom(other.RemoveCards);
          break;
        case MessageOneofCase.SelectOnStage:
          if (SelectOnStage == null) {
            SelectOnStage = new global::MiHomo.Protos.GCGMsgSelectOnStage();
          }
          SelectOnStage.MergeFrom(other.SelectOnStage);
          break;
        case MessageOneofCase.SelectOnStageByEffect:
          if (SelectOnStageByEffect == null) {
            SelectOnStageByEffect = new global::MiHomo.Protos.GCGMsgSelectOnStageByEffect();
          }
          SelectOnStageByEffect.MergeFrom(other.SelectOnStageByEffect);
          break;
        case MessageOneofCase.SkillLimitsChange:
          if (SkillLimitsChange == null) {
            SkillLimitsChange = new global::MiHomo.Protos.GCGMsgSkillLimitsChange();
          }
          SkillLimitsChange.MergeFrom(other.SkillLimitsChange);
          break;
        case MessageOneofCase.SkillResult:
          if (SkillResult == null) {
            SkillResult = new global::MiHomo.Protos.GCGMsgSkillResult();
          }
          SkillResult.MergeFrom(other.SkillResult);
          break;
        case MessageOneofCase.TokenChange:
          if (TokenChange == null) {
            TokenChange = new global::MiHomo.Protos.GCGMsgTokenChange();
          }
          TokenChange.MergeFrom(other.TokenChange);
          break;
        case MessageOneofCase.UpdateController:
          if (UpdateController == null) {
            UpdateController = new global::MiHomo.Protos.GCGMsgUpdateController();
          }
          UpdateController.MergeFrom(other.UpdateController);
          break;
        case MessageOneofCase.UseSkill:
          if (UseSkill == null) {
            UseSkill = new global::MiHomo.Protos.GCGMsgUseSkill();
          }
          UseSkill.MergeFrom(other.UseSkill);
          break;
        case MessageOneofCase.UseSkillEnd:
          if (UseSkillEnd == null) {
            UseSkillEnd = new global::MiHomo.Protos.GCGMsgUseSkillEnd();
          }
          UseSkillEnd.MergeFrom(other.UseSkillEnd);
          break;
        case MessageOneofCase.WaitingListChange:
          if (WaitingListChange == null) {
            WaitingListChange = new global::MiHomo.Protos.GCGMsgWaitingListChange();
          }
          WaitingListChange.MergeFrom(other.WaitingListChange);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::MiHomo.Protos.GCGMsgUseSkill subBuilder = new global::MiHomo.Protos.GCGMsgUseSkill();
            if (messageCase_ == MessageOneofCase.UseSkill) {
              subBuilder.MergeFrom(UseSkill);
            }
            input.ReadMessage(subBuilder);
            UseSkill = subBuilder;
            break;
          }
          case 18: {
            global::MiHomo.Protos.GCGMsgTokenChange subBuilder = new global::MiHomo.Protos.GCGMsgTokenChange();
            if (messageCase_ == MessageOneofCase.TokenChange) {
              subBuilder.MergeFrom(TokenChange);
            }
            input.ReadMessage(subBuilder);
            TokenChange = subBuilder;
            break;
          }
          case 26: {
            global::MiHomo.Protos.GCGMsgSkillResult subBuilder = new global::MiHomo.Protos.GCGMsgSkillResult();
            if (messageCase_ == MessageOneofCase.SkillResult) {
              subBuilder.MergeFrom(SkillResult);
            }
            input.ReadMessage(subBuilder);
            SkillResult = subBuilder;
            break;
          }
          case 34: {
            global::MiHomo.Protos.GCGMsgCharDie subBuilder = new global::MiHomo.Protos.GCGMsgCharDie();
            if (messageCase_ == MessageOneofCase.CharDie) {
              subBuilder.MergeFrom(CharDie);
            }
            input.ReadMessage(subBuilder);
            CharDie = subBuilder;
            break;
          }
          case 42: {
            global::MiHomo.Protos.GCGMsgAddCards subBuilder = new global::MiHomo.Protos.GCGMsgAddCards();
            if (messageCase_ == MessageOneofCase.AddCards) {
              subBuilder.MergeFrom(AddCards);
            }
            input.ReadMessage(subBuilder);
            AddCards = subBuilder;
            break;
          }
          case 50: {
            global::MiHomo.Protos.GCGMsgSelectOnStage subBuilder = new global::MiHomo.Protos.GCGMsgSelectOnStage();
            if (messageCase_ == MessageOneofCase.SelectOnStage) {
              subBuilder.MergeFrom(SelectOnStage);
            }
            input.ReadMessage(subBuilder);
            SelectOnStage = subBuilder;
            break;
          }
          case 58: {
            global::MiHomo.Protos.GCGMsgAddDice subBuilder = new global::MiHomo.Protos.GCGMsgAddDice();
            if (messageCase_ == MessageOneofCase.AddDice) {
              subBuilder.MergeFrom(AddDice);
            }
            input.ReadMessage(subBuilder);
            AddDice = subBuilder;
            break;
          }
          case 66: {
            global::MiHomo.Protos.GCGMsgPass subBuilder = new global::MiHomo.Protos.GCGMsgPass();
            if (messageCase_ == MessageOneofCase.Pass) {
              subBuilder.MergeFrom(Pass);
            }
            input.ReadMessage(subBuilder);
            Pass = subBuilder;
            break;
          }
          case 82: {
            global::MiHomo.Protos.GCGMsgPhaseChange subBuilder = new global::MiHomo.Protos.GCGMsgPhaseChange();
            if (messageCase_ == MessageOneofCase.PhaseChange) {
              subBuilder.MergeFrom(PhaseChange);
            }
            input.ReadMessage(subBuilder);
            PhaseChange = subBuilder;
            break;
          }
          case 90: {
            global::MiHomo.Protos.GCGMsgMoveCard subBuilder = new global::MiHomo.Protos.GCGMsgMoveCard();
            if (messageCase_ == MessageOneofCase.MoveCard) {
              subBuilder.MergeFrom(MoveCard);
            }
            input.ReadMessage(subBuilder);
            MoveCard = subBuilder;
            break;
          }
          case 98: {
            global::MiHomo.Protos.GCGMsgRemoveCards subBuilder = new global::MiHomo.Protos.GCGMsgRemoveCards();
            if (messageCase_ == MessageOneofCase.RemoveCards) {
              subBuilder.MergeFrom(RemoveCards);
            }
            input.ReadMessage(subBuilder);
            RemoveCards = subBuilder;
            break;
          }
          case 106: {
            global::MiHomo.Protos.GCGMsgCostDice subBuilder = new global::MiHomo.Protos.GCGMsgCostDice();
            if (messageCase_ == MessageOneofCase.CostDice) {
              subBuilder.MergeFrom(CostDice);
            }
            input.ReadMessage(subBuilder);
            CostDice = subBuilder;
            break;
          }
          case 114: {
            global::MiHomo.Protos.GCGMsgDiceRoll subBuilder = new global::MiHomo.Protos.GCGMsgDiceRoll();
            if (messageCase_ == MessageOneofCase.DiceRoll) {
              subBuilder.MergeFrom(DiceRoll);
            }
            input.ReadMessage(subBuilder);
            DiceRoll = subBuilder;
            break;
          }
          case 122: {
            global::MiHomo.Protos.GCGMsgDiceReroll subBuilder = new global::MiHomo.Protos.GCGMsgDiceReroll();
            if (messageCase_ == MessageOneofCase.DiceReroll) {
              subBuilder.MergeFrom(DiceReroll);
            }
            input.ReadMessage(subBuilder);
            DiceReroll = subBuilder;
            break;
          }
          case 1234: {
            global::MiHomo.Protos.GCGMsgOpTimer subBuilder = new global::MiHomo.Protos.GCGMsgOpTimer();
            if (messageCase_ == MessageOneofCase.OpTimer) {
              subBuilder.MergeFrom(OpTimer);
            }
            input.ReadMessage(subBuilder);
            OpTimer = subBuilder;
            break;
          }
          case 1946: {
            global::MiHomo.Protos.GCGMsgReactionBegin subBuilder = new global::MiHomo.Protos.GCGMsgReactionBegin();
            if (messageCase_ == MessageOneofCase.ReactionBegin) {
              subBuilder.MergeFrom(ReactionBegin);
            }
            input.ReadMessage(subBuilder);
            ReactionBegin = subBuilder;
            break;
          }
          case 2370: {
            global::MiHomo.Protos.GCGMsgNewCard subBuilder = new global::MiHomo.Protos.GCGMsgNewCard();
            if (messageCase_ == MessageOneofCase.NewCard) {
              subBuilder.MergeFrom(NewCard);
            }
            input.ReadMessage(subBuilder);
            NewCard = subBuilder;
            break;
          }
          case 3746: {
            global::MiHomo.Protos.GCGMsgCostRevise subBuilder = new global::MiHomo.Protos.GCGMsgCostRevise();
            if (messageCase_ == MessageOneofCase.CostRevise) {
              subBuilder.MergeFrom(CostRevise);
            }
            input.ReadMessage(subBuilder);
            CostRevise = subBuilder;
            break;
          }
          case 5058: {
            global::MiHomo.Protos.GCGMsgGameOver subBuilder = new global::MiHomo.Protos.GCGMsgGameOver();
            if (messageCase_ == MessageOneofCase.GameOver) {
              subBuilder.MergeFrom(GameOver);
            }
            input.ReadMessage(subBuilder);
            GameOver = subBuilder;
            break;
          }
          case 5682: {
            global::MiHomo.Protos.GCGMsgSkillLimitsChange subBuilder = new global::MiHomo.Protos.GCGMsgSkillLimitsChange();
            if (messageCase_ == MessageOneofCase.SkillLimitsChange) {
              subBuilder.MergeFrom(SkillLimitsChange);
            }
            input.ReadMessage(subBuilder);
            SkillLimitsChange = subBuilder;
            break;
          }
          case 6186: {
            global::MiHomo.Protos.GCGMsgNoDamageSkillResult subBuilder = new global::MiHomo.Protos.GCGMsgNoDamageSkillResult();
            if (messageCase_ == MessageOneofCase.NoDamageSkillResult) {
              subBuilder.MergeFrom(NoDamageSkillResult);
            }
            input.ReadMessage(subBuilder);
            NoDamageSkillResult = subBuilder;
            break;
          }
          case 6802: {
            global::MiHomo.Protos.GCGMsgPVEIntentionInfo subBuilder = new global::MiHomo.Protos.GCGMsgPVEIntentionInfo();
            if (messageCase_ == MessageOneofCase.PveIntentionInfo) {
              subBuilder.MergeFrom(PveIntentionInfo);
            }
            input.ReadMessage(subBuilder);
            PveIntentionInfo = subBuilder;
            break;
          }
          case 8890: {
            global::MiHomo.Protos.GCGMsgUpdateController subBuilder = new global::MiHomo.Protos.GCGMsgUpdateController();
            if (messageCase_ == MessageOneofCase.UpdateController) {
              subBuilder.MergeFrom(UpdateController);
            }
            input.ReadMessage(subBuilder);
            UpdateController = subBuilder;
            break;
          }
          case 9258: {
            global::MiHomo.Protos.GCGMsgPhaseContinue subBuilder = new global::MiHomo.Protos.GCGMsgPhaseContinue();
            if (messageCase_ == MessageOneofCase.PhaseContinue) {
              subBuilder.MergeFrom(PhaseContinue);
            }
            input.ReadMessage(subBuilder);
            PhaseContinue = subBuilder;
            break;
          }
          case 9378: {
            global::MiHomo.Protos.GCGMsgReactionEnd subBuilder = new global::MiHomo.Protos.GCGMsgReactionEnd();
            if (messageCase_ == MessageOneofCase.ReactionEnd) {
              subBuilder.MergeFrom(ReactionEnd);
            }
            input.ReadMessage(subBuilder);
            ReactionEnd = subBuilder;
            break;
          }
          case 10146: {
            global::MiHomo.Protos.GCGMsgPVEIntentionChange subBuilder = new global::MiHomo.Protos.GCGMsgPVEIntentionChange();
            if (messageCase_ == MessageOneofCase.PveIntentionChange) {
              subBuilder.MergeFrom(PveIntentionChange);
            }
            input.ReadMessage(subBuilder);
            PveIntentionChange = subBuilder;
            break;
          }
          case 10946: {
            global::MiHomo.Protos.GCGMsgUseSkillEnd subBuilder = new global::MiHomo.Protos.GCGMsgUseSkillEnd();
            if (messageCase_ == MessageOneofCase.UseSkillEnd) {
              subBuilder.MergeFrom(UseSkillEnd);
            }
            input.ReadMessage(subBuilder);
            UseSkillEnd = subBuilder;
            break;
          }
          case 13418: {
            global::MiHomo.Protos.GCGMsgClientPerform subBuilder = new global::MiHomo.Protos.GCGMsgClientPerform();
            if (messageCase_ == MessageOneofCase.ClientPerform) {
              subBuilder.MergeFrom(ClientPerform);
            }
            input.ReadMessage(subBuilder);
            ClientPerform = subBuilder;
            break;
          }
          case 13618: {
            global::MiHomo.Protos.GCGMsgCardUpdate subBuilder = new global::MiHomo.Protos.GCGMsgCardUpdate();
            if (messageCase_ == MessageOneofCase.CardUpdate) {
              subBuilder.MergeFrom(CardUpdate);
            }
            input.ReadMessage(subBuilder);
            CardUpdate = subBuilder;
            break;
          }
          case 13866: {
            global::MiHomo.Protos.GCGMsgModifyAdd subBuilder = new global::MiHomo.Protos.GCGMsgModifyAdd();
            if (messageCase_ == MessageOneofCase.ModifyAdd) {
              subBuilder.MergeFrom(ModifyAdd);
            }
            input.ReadMessage(subBuilder);
            ModifyAdd = subBuilder;
            break;
          }
          case 13898: {
            global::MiHomo.Protos.GCGMsgSelectOnStageByEffect subBuilder = new global::MiHomo.Protos.GCGMsgSelectOnStageByEffect();
            if (messageCase_ == MessageOneofCase.SelectOnStageByEffect) {
              subBuilder.MergeFrom(SelectOnStageByEffect);
            }
            input.ReadMessage(subBuilder);
            SelectOnStageByEffect = subBuilder;
            break;
          }
          case 14330: {
            global::MiHomo.Protos.GCGMsgDuelDataChange subBuilder = new global::MiHomo.Protos.GCGMsgDuelDataChange();
            if (messageCase_ == MessageOneofCase.DuelDataChange) {
              subBuilder.MergeFrom(DuelDataChange);
            }
            input.ReadMessage(subBuilder);
            DuelDataChange = subBuilder;
            break;
          }
          case 15930: {
            global::MiHomo.Protos.GCGMsgWaitingListChange subBuilder = new global::MiHomo.Protos.GCGMsgWaitingListChange();
            if (messageCase_ == MessageOneofCase.WaitingListChange) {
              subBuilder.MergeFrom(WaitingListChange);
            }
            input.ReadMessage(subBuilder);
            WaitingListChange = subBuilder;
            break;
          }
          case 16114: {
            global::MiHomo.Protos.GCGMsgModifyRemove subBuilder = new global::MiHomo.Protos.GCGMsgModifyRemove();
            if (messageCase_ == MessageOneofCase.ModifyRemove) {
              subBuilder.MergeFrom(ModifyRemove);
            }
            input.ReadMessage(subBuilder);
            ModifyRemove = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::MiHomo.Protos.GCGMsgUseSkill subBuilder = new global::MiHomo.Protos.GCGMsgUseSkill();
            if (messageCase_ == MessageOneofCase.UseSkill) {
              subBuilder.MergeFrom(UseSkill);
            }
            input.ReadMessage(subBuilder);
            UseSkill = subBuilder;
            break;
          }
          case 18: {
            global::MiHomo.Protos.GCGMsgTokenChange subBuilder = new global::MiHomo.Protos.GCGMsgTokenChange();
            if (messageCase_ == MessageOneofCase.TokenChange) {
              subBuilder.MergeFrom(TokenChange);
            }
            input.ReadMessage(subBuilder);
            TokenChange = subBuilder;
            break;
          }
          case 26: {
            global::MiHomo.Protos.GCGMsgSkillResult subBuilder = new global::MiHomo.Protos.GCGMsgSkillResult();
            if (messageCase_ == MessageOneofCase.SkillResult) {
              subBuilder.MergeFrom(SkillResult);
            }
            input.ReadMessage(subBuilder);
            SkillResult = subBuilder;
            break;
          }
          case 34: {
            global::MiHomo.Protos.GCGMsgCharDie subBuilder = new global::MiHomo.Protos.GCGMsgCharDie();
            if (messageCase_ == MessageOneofCase.CharDie) {
              subBuilder.MergeFrom(CharDie);
            }
            input.ReadMessage(subBuilder);
            CharDie = subBuilder;
            break;
          }
          case 42: {
            global::MiHomo.Protos.GCGMsgAddCards subBuilder = new global::MiHomo.Protos.GCGMsgAddCards();
            if (messageCase_ == MessageOneofCase.AddCards) {
              subBuilder.MergeFrom(AddCards);
            }
            input.ReadMessage(subBuilder);
            AddCards = subBuilder;
            break;
          }
          case 50: {
            global::MiHomo.Protos.GCGMsgSelectOnStage subBuilder = new global::MiHomo.Protos.GCGMsgSelectOnStage();
            if (messageCase_ == MessageOneofCase.SelectOnStage) {
              subBuilder.MergeFrom(SelectOnStage);
            }
            input.ReadMessage(subBuilder);
            SelectOnStage = subBuilder;
            break;
          }
          case 58: {
            global::MiHomo.Protos.GCGMsgAddDice subBuilder = new global::MiHomo.Protos.GCGMsgAddDice();
            if (messageCase_ == MessageOneofCase.AddDice) {
              subBuilder.MergeFrom(AddDice);
            }
            input.ReadMessage(subBuilder);
            AddDice = subBuilder;
            break;
          }
          case 66: {
            global::MiHomo.Protos.GCGMsgPass subBuilder = new global::MiHomo.Protos.GCGMsgPass();
            if (messageCase_ == MessageOneofCase.Pass) {
              subBuilder.MergeFrom(Pass);
            }
            input.ReadMessage(subBuilder);
            Pass = subBuilder;
            break;
          }
          case 82: {
            global::MiHomo.Protos.GCGMsgPhaseChange subBuilder = new global::MiHomo.Protos.GCGMsgPhaseChange();
            if (messageCase_ == MessageOneofCase.PhaseChange) {
              subBuilder.MergeFrom(PhaseChange);
            }
            input.ReadMessage(subBuilder);
            PhaseChange = subBuilder;
            break;
          }
          case 90: {
            global::MiHomo.Protos.GCGMsgMoveCard subBuilder = new global::MiHomo.Protos.GCGMsgMoveCard();
            if (messageCase_ == MessageOneofCase.MoveCard) {
              subBuilder.MergeFrom(MoveCard);
            }
            input.ReadMessage(subBuilder);
            MoveCard = subBuilder;
            break;
          }
          case 98: {
            global::MiHomo.Protos.GCGMsgRemoveCards subBuilder = new global::MiHomo.Protos.GCGMsgRemoveCards();
            if (messageCase_ == MessageOneofCase.RemoveCards) {
              subBuilder.MergeFrom(RemoveCards);
            }
            input.ReadMessage(subBuilder);
            RemoveCards = subBuilder;
            break;
          }
          case 106: {
            global::MiHomo.Protos.GCGMsgCostDice subBuilder = new global::MiHomo.Protos.GCGMsgCostDice();
            if (messageCase_ == MessageOneofCase.CostDice) {
              subBuilder.MergeFrom(CostDice);
            }
            input.ReadMessage(subBuilder);
            CostDice = subBuilder;
            break;
          }
          case 114: {
            global::MiHomo.Protos.GCGMsgDiceRoll subBuilder = new global::MiHomo.Protos.GCGMsgDiceRoll();
            if (messageCase_ == MessageOneofCase.DiceRoll) {
              subBuilder.MergeFrom(DiceRoll);
            }
            input.ReadMessage(subBuilder);
            DiceRoll = subBuilder;
            break;
          }
          case 122: {
            global::MiHomo.Protos.GCGMsgDiceReroll subBuilder = new global::MiHomo.Protos.GCGMsgDiceReroll();
            if (messageCase_ == MessageOneofCase.DiceReroll) {
              subBuilder.MergeFrom(DiceReroll);
            }
            input.ReadMessage(subBuilder);
            DiceReroll = subBuilder;
            break;
          }
          case 1234: {
            global::MiHomo.Protos.GCGMsgOpTimer subBuilder = new global::MiHomo.Protos.GCGMsgOpTimer();
            if (messageCase_ == MessageOneofCase.OpTimer) {
              subBuilder.MergeFrom(OpTimer);
            }
            input.ReadMessage(subBuilder);
            OpTimer = subBuilder;
            break;
          }
          case 1946: {
            global::MiHomo.Protos.GCGMsgReactionBegin subBuilder = new global::MiHomo.Protos.GCGMsgReactionBegin();
            if (messageCase_ == MessageOneofCase.ReactionBegin) {
              subBuilder.MergeFrom(ReactionBegin);
            }
            input.ReadMessage(subBuilder);
            ReactionBegin = subBuilder;
            break;
          }
          case 2370: {
            global::MiHomo.Protos.GCGMsgNewCard subBuilder = new global::MiHomo.Protos.GCGMsgNewCard();
            if (messageCase_ == MessageOneofCase.NewCard) {
              subBuilder.MergeFrom(NewCard);
            }
            input.ReadMessage(subBuilder);
            NewCard = subBuilder;
            break;
          }
          case 3746: {
            global::MiHomo.Protos.GCGMsgCostRevise subBuilder = new global::MiHomo.Protos.GCGMsgCostRevise();
            if (messageCase_ == MessageOneofCase.CostRevise) {
              subBuilder.MergeFrom(CostRevise);
            }
            input.ReadMessage(subBuilder);
            CostRevise = subBuilder;
            break;
          }
          case 5058: {
            global::MiHomo.Protos.GCGMsgGameOver subBuilder = new global::MiHomo.Protos.GCGMsgGameOver();
            if (messageCase_ == MessageOneofCase.GameOver) {
              subBuilder.MergeFrom(GameOver);
            }
            input.ReadMessage(subBuilder);
            GameOver = subBuilder;
            break;
          }
          case 5682: {
            global::MiHomo.Protos.GCGMsgSkillLimitsChange subBuilder = new global::MiHomo.Protos.GCGMsgSkillLimitsChange();
            if (messageCase_ == MessageOneofCase.SkillLimitsChange) {
              subBuilder.MergeFrom(SkillLimitsChange);
            }
            input.ReadMessage(subBuilder);
            SkillLimitsChange = subBuilder;
            break;
          }
          case 6186: {
            global::MiHomo.Protos.GCGMsgNoDamageSkillResult subBuilder = new global::MiHomo.Protos.GCGMsgNoDamageSkillResult();
            if (messageCase_ == MessageOneofCase.NoDamageSkillResult) {
              subBuilder.MergeFrom(NoDamageSkillResult);
            }
            input.ReadMessage(subBuilder);
            NoDamageSkillResult = subBuilder;
            break;
          }
          case 6802: {
            global::MiHomo.Protos.GCGMsgPVEIntentionInfo subBuilder = new global::MiHomo.Protos.GCGMsgPVEIntentionInfo();
            if (messageCase_ == MessageOneofCase.PveIntentionInfo) {
              subBuilder.MergeFrom(PveIntentionInfo);
            }
            input.ReadMessage(subBuilder);
            PveIntentionInfo = subBuilder;
            break;
          }
          case 8890: {
            global::MiHomo.Protos.GCGMsgUpdateController subBuilder = new global::MiHomo.Protos.GCGMsgUpdateController();
            if (messageCase_ == MessageOneofCase.UpdateController) {
              subBuilder.MergeFrom(UpdateController);
            }
            input.ReadMessage(subBuilder);
            UpdateController = subBuilder;
            break;
          }
          case 9258: {
            global::MiHomo.Protos.GCGMsgPhaseContinue subBuilder = new global::MiHomo.Protos.GCGMsgPhaseContinue();
            if (messageCase_ == MessageOneofCase.PhaseContinue) {
              subBuilder.MergeFrom(PhaseContinue);
            }
            input.ReadMessage(subBuilder);
            PhaseContinue = subBuilder;
            break;
          }
          case 9378: {
            global::MiHomo.Protos.GCGMsgReactionEnd subBuilder = new global::MiHomo.Protos.GCGMsgReactionEnd();
            if (messageCase_ == MessageOneofCase.ReactionEnd) {
              subBuilder.MergeFrom(ReactionEnd);
            }
            input.ReadMessage(subBuilder);
            ReactionEnd = subBuilder;
            break;
          }
          case 10146: {
            global::MiHomo.Protos.GCGMsgPVEIntentionChange subBuilder = new global::MiHomo.Protos.GCGMsgPVEIntentionChange();
            if (messageCase_ == MessageOneofCase.PveIntentionChange) {
              subBuilder.MergeFrom(PveIntentionChange);
            }
            input.ReadMessage(subBuilder);
            PveIntentionChange = subBuilder;
            break;
          }
          case 10946: {
            global::MiHomo.Protos.GCGMsgUseSkillEnd subBuilder = new global::MiHomo.Protos.GCGMsgUseSkillEnd();
            if (messageCase_ == MessageOneofCase.UseSkillEnd) {
              subBuilder.MergeFrom(UseSkillEnd);
            }
            input.ReadMessage(subBuilder);
            UseSkillEnd = subBuilder;
            break;
          }
          case 13418: {
            global::MiHomo.Protos.GCGMsgClientPerform subBuilder = new global::MiHomo.Protos.GCGMsgClientPerform();
            if (messageCase_ == MessageOneofCase.ClientPerform) {
              subBuilder.MergeFrom(ClientPerform);
            }
            input.ReadMessage(subBuilder);
            ClientPerform = subBuilder;
            break;
          }
          case 13618: {
            global::MiHomo.Protos.GCGMsgCardUpdate subBuilder = new global::MiHomo.Protos.GCGMsgCardUpdate();
            if (messageCase_ == MessageOneofCase.CardUpdate) {
              subBuilder.MergeFrom(CardUpdate);
            }
            input.ReadMessage(subBuilder);
            CardUpdate = subBuilder;
            break;
          }
          case 13866: {
            global::MiHomo.Protos.GCGMsgModifyAdd subBuilder = new global::MiHomo.Protos.GCGMsgModifyAdd();
            if (messageCase_ == MessageOneofCase.ModifyAdd) {
              subBuilder.MergeFrom(ModifyAdd);
            }
            input.ReadMessage(subBuilder);
            ModifyAdd = subBuilder;
            break;
          }
          case 13898: {
            global::MiHomo.Protos.GCGMsgSelectOnStageByEffect subBuilder = new global::MiHomo.Protos.GCGMsgSelectOnStageByEffect();
            if (messageCase_ == MessageOneofCase.SelectOnStageByEffect) {
              subBuilder.MergeFrom(SelectOnStageByEffect);
            }
            input.ReadMessage(subBuilder);
            SelectOnStageByEffect = subBuilder;
            break;
          }
          case 14330: {
            global::MiHomo.Protos.GCGMsgDuelDataChange subBuilder = new global::MiHomo.Protos.GCGMsgDuelDataChange();
            if (messageCase_ == MessageOneofCase.DuelDataChange) {
              subBuilder.MergeFrom(DuelDataChange);
            }
            input.ReadMessage(subBuilder);
            DuelDataChange = subBuilder;
            break;
          }
          case 15930: {
            global::MiHomo.Protos.GCGMsgWaitingListChange subBuilder = new global::MiHomo.Protos.GCGMsgWaitingListChange();
            if (messageCase_ == MessageOneofCase.WaitingListChange) {
              subBuilder.MergeFrom(WaitingListChange);
            }
            input.ReadMessage(subBuilder);
            WaitingListChange = subBuilder;
            break;
          }
          case 16114: {
            global::MiHomo.Protos.GCGMsgModifyRemove subBuilder = new global::MiHomo.Protos.GCGMsgModifyRemove();
            if (messageCase_ == MessageOneofCase.ModifyRemove) {
              subBuilder.MergeFrom(ModifyRemove);
            }
            input.ReadMessage(subBuilder);
            ModifyRemove = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
