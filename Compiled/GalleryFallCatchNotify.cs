// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GalleryFallCatchNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from GalleryFallCatchNotify.proto</summary>
  public static partial class GalleryFallCatchNotifyReflection {

    #region Descriptor
    /// <summary>File descriptor for GalleryFallCatchNotify.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GalleryFallCatchNotifyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxHYWxsZXJ5RmFsbENhdGNoTm90aWZ5LnByb3RvEg1taUhvbW8uUHJvdG9z",
            "It0CChZHYWxsZXJ5RmFsbENhdGNoTm90aWZ5EhEKCWFkZF9zY29yZRgBIAEo",
            "DRIRCgljdXJfc2NvcmUYBiABKA0SEgoKZ2FsbGVyeV9pZBgKIAEoDRIRCglp",
            "c19ncm91bmQYDCABKAgSEQoJdGltZV9jb3N0GAsgASgNEloKFGJhbGxfY2F0",
            "Y2hfY291bnRfbWFwGA8gAygLMjwubWlIb21vLlByb3Rvcy5HYWxsZXJ5RmFs",
            "bENhdGNoTm90aWZ5LkJhbGxDYXRjaENvdW50TWFwRW50cnkaOAoWQmFsbENh",
            "dGNoQ291bnRNYXBFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06",
            "AjgBIk0KBUNtZElkEggKBE5PTkUQABITCg9FTkVUX0NIQU5ORUxfSUQQABIU",
            "ChBFTkVUX0lTX1JFTElBQkxFEAESCwoGQ01EX0lEEIMrGgIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.GalleryFallCatchNotify), global::MiHomo.Protos.GalleryFallCatchNotify.Parser, new[]{ "AddScore", "CurScore", "GalleryId", "IsGround", "TimeCost", "BallCatchCountMap" }, null, new[]{ typeof(global::MiHomo.Protos.GalleryFallCatchNotify.Types.CmdId) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GalleryFallCatchNotify : pb::IMessage<GalleryFallCatchNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GalleryFallCatchNotify> _parser = new pb::MessageParser<GalleryFallCatchNotify>(() => new GalleryFallCatchNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GalleryFallCatchNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.GalleryFallCatchNotifyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GalleryFallCatchNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GalleryFallCatchNotify(GalleryFallCatchNotify other) : this() {
      addScore_ = other.addScore_;
      curScore_ = other.curScore_;
      galleryId_ = other.galleryId_;
      isGround_ = other.isGround_;
      timeCost_ = other.timeCost_;
      ballCatchCountMap_ = other.ballCatchCountMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GalleryFallCatchNotify Clone() {
      return new GalleryFallCatchNotify(this);
    }

    /// <summary>Field number for the "add_score" field.</summary>
    public const int AddScoreFieldNumber = 1;
    private uint addScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AddScore {
      get { return addScore_; }
      set {
        addScore_ = value;
      }
    }

    /// <summary>Field number for the "cur_score" field.</summary>
    public const int CurScoreFieldNumber = 6;
    private uint curScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurScore {
      get { return curScore_; }
      set {
        curScore_ = value;
      }
    }

    /// <summary>Field number for the "gallery_id" field.</summary>
    public const int GalleryIdFieldNumber = 10;
    private uint galleryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GalleryId {
      get { return galleryId_; }
      set {
        galleryId_ = value;
      }
    }

    /// <summary>Field number for the "is_ground" field.</summary>
    public const int IsGroundFieldNumber = 12;
    private bool isGround_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGround {
      get { return isGround_; }
      set {
        isGround_ = value;
      }
    }

    /// <summary>Field number for the "time_cost" field.</summary>
    public const int TimeCostFieldNumber = 11;
    private uint timeCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeCost {
      get { return timeCost_; }
      set {
        timeCost_ = value;
      }
    }

    /// <summary>Field number for the "ball_catch_count_map" field.</summary>
    public const int BallCatchCountMapFieldNumber = 15;
    private static readonly pbc::MapField<uint, uint>.Codec _map_ballCatchCountMap_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 122);
    private readonly pbc::MapField<uint, uint> ballCatchCountMap_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> BallCatchCountMap {
      get { return ballCatchCountMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GalleryFallCatchNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GalleryFallCatchNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AddScore != other.AddScore) return false;
      if (CurScore != other.CurScore) return false;
      if (GalleryId != other.GalleryId) return false;
      if (IsGround != other.IsGround) return false;
      if (TimeCost != other.TimeCost) return false;
      if (!BallCatchCountMap.Equals(other.BallCatchCountMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AddScore != 0) hash ^= AddScore.GetHashCode();
      if (CurScore != 0) hash ^= CurScore.GetHashCode();
      if (GalleryId != 0) hash ^= GalleryId.GetHashCode();
      if (IsGround != false) hash ^= IsGround.GetHashCode();
      if (TimeCost != 0) hash ^= TimeCost.GetHashCode();
      hash ^= BallCatchCountMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AddScore != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AddScore);
      }
      if (CurScore != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CurScore);
      }
      if (GalleryId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(GalleryId);
      }
      if (TimeCost != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(TimeCost);
      }
      if (IsGround != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsGround);
      }
      ballCatchCountMap_.WriteTo(output, _map_ballCatchCountMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AddScore != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AddScore);
      }
      if (CurScore != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CurScore);
      }
      if (GalleryId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(GalleryId);
      }
      if (TimeCost != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(TimeCost);
      }
      if (IsGround != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsGround);
      }
      ballCatchCountMap_.WriteTo(ref output, _map_ballCatchCountMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AddScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AddScore);
      }
      if (CurScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurScore);
      }
      if (GalleryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GalleryId);
      }
      if (IsGround != false) {
        size += 1 + 1;
      }
      if (TimeCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCost);
      }
      size += ballCatchCountMap_.CalculateSize(_map_ballCatchCountMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GalleryFallCatchNotify other) {
      if (other == null) {
        return;
      }
      if (other.AddScore != 0) {
        AddScore = other.AddScore;
      }
      if (other.CurScore != 0) {
        CurScore = other.CurScore;
      }
      if (other.GalleryId != 0) {
        GalleryId = other.GalleryId;
      }
      if (other.IsGround != false) {
        IsGround = other.IsGround;
      }
      if (other.TimeCost != 0) {
        TimeCost = other.TimeCost;
      }
      ballCatchCountMap_.Add(other.ballCatchCountMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AddScore = input.ReadUInt32();
            break;
          }
          case 48: {
            CurScore = input.ReadUInt32();
            break;
          }
          case 80: {
            GalleryId = input.ReadUInt32();
            break;
          }
          case 88: {
            TimeCost = input.ReadUInt32();
            break;
          }
          case 96: {
            IsGround = input.ReadBool();
            break;
          }
          case 122: {
            ballCatchCountMap_.AddEntriesFrom(input, _map_ballCatchCountMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AddScore = input.ReadUInt32();
            break;
          }
          case 48: {
            CurScore = input.ReadUInt32();
            break;
          }
          case 80: {
            GalleryId = input.ReadUInt32();
            break;
          }
          case 88: {
            TimeCost = input.ReadUInt32();
            break;
          }
          case 96: {
            IsGround = input.ReadBool();
            break;
          }
          case 122: {
            ballCatchCountMap_.AddEntriesFrom(ref input, _map_ballCatchCountMap_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GalleryFallCatchNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CmdId {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("ENET_CHANNEL_ID", PreferredAlias = false)] EnetChannelId = 0,
        [pbr::OriginalName("ENET_IS_RELIABLE")] EnetIsReliable = 1,
        [pbr::OriginalName("CMD_ID")] CmdId = 5507,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
