// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AbilityMixinFireworksLauncher.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from AbilityMixinFireworksLauncher.proto</summary>
  public static partial class AbilityMixinFireworksLauncherReflection {

    #region Descriptor
    /// <summary>File descriptor for AbilityMixinFireworksLauncher.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AbilityMixinFireworksLauncherReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNBYmlsaXR5TWl4aW5GaXJld29ya3NMYXVuY2hlci5wcm90bxINbWlIb21v",
            "LlByb3RvcyKsAQodQWJpbGl0eU1peGluRmlyZXdvcmtzTGF1bmNoZXISGgoS",
            "ZmlyZWRfYnVsbGV0X2NvdW50GAEgASgNEhgKEGZpcmV3b3Jrc19jb25maWcY",
            "BCADKA0SEwoLaW52b2tlX3R5cGUYAiABKA0SDQoFcGhhc2UYBiABKA0SHQoV",
            "c3RhcnRfY291bnRfZG93bl90aW1lGAMgASgNEhIKCnR1cm5faW5kZXgYByAB",
            "KA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.AbilityMixinFireworksLauncher), global::MiHomo.Protos.AbilityMixinFireworksLauncher.Parser, new[]{ "FiredBulletCount", "FireworksConfig", "InvokeType", "Phase", "StartCountDownTime", "TurnIndex" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AbilityMixinFireworksLauncher : pb::IMessage<AbilityMixinFireworksLauncher>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AbilityMixinFireworksLauncher> _parser = new pb::MessageParser<AbilityMixinFireworksLauncher>(() => new AbilityMixinFireworksLauncher());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AbilityMixinFireworksLauncher> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.AbilityMixinFireworksLauncherReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AbilityMixinFireworksLauncher() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AbilityMixinFireworksLauncher(AbilityMixinFireworksLauncher other) : this() {
      firedBulletCount_ = other.firedBulletCount_;
      fireworksConfig_ = other.fireworksConfig_.Clone();
      invokeType_ = other.invokeType_;
      phase_ = other.phase_;
      startCountDownTime_ = other.startCountDownTime_;
      turnIndex_ = other.turnIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AbilityMixinFireworksLauncher Clone() {
      return new AbilityMixinFireworksLauncher(this);
    }

    /// <summary>Field number for the "fired_bullet_count" field.</summary>
    public const int FiredBulletCountFieldNumber = 1;
    private uint firedBulletCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FiredBulletCount {
      get { return firedBulletCount_; }
      set {
        firedBulletCount_ = value;
      }
    }

    /// <summary>Field number for the "fireworks_config" field.</summary>
    public const int FireworksConfigFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_fireworksConfig_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> fireworksConfig_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> FireworksConfig {
      get { return fireworksConfig_; }
    }

    /// <summary>Field number for the "invoke_type" field.</summary>
    public const int InvokeTypeFieldNumber = 2;
    private uint invokeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InvokeType {
      get { return invokeType_; }
      set {
        invokeType_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 6;
    private uint phase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    /// <summary>Field number for the "start_count_down_time" field.</summary>
    public const int StartCountDownTimeFieldNumber = 3;
    private uint startCountDownTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartCountDownTime {
      get { return startCountDownTime_; }
      set {
        startCountDownTime_ = value;
      }
    }

    /// <summary>Field number for the "turn_index" field.</summary>
    public const int TurnIndexFieldNumber = 7;
    private uint turnIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TurnIndex {
      get { return turnIndex_; }
      set {
        turnIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AbilityMixinFireworksLauncher);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AbilityMixinFireworksLauncher other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FiredBulletCount != other.FiredBulletCount) return false;
      if(!fireworksConfig_.Equals(other.fireworksConfig_)) return false;
      if (InvokeType != other.InvokeType) return false;
      if (Phase != other.Phase) return false;
      if (StartCountDownTime != other.StartCountDownTime) return false;
      if (TurnIndex != other.TurnIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FiredBulletCount != 0) hash ^= FiredBulletCount.GetHashCode();
      hash ^= fireworksConfig_.GetHashCode();
      if (InvokeType != 0) hash ^= InvokeType.GetHashCode();
      if (Phase != 0) hash ^= Phase.GetHashCode();
      if (StartCountDownTime != 0) hash ^= StartCountDownTime.GetHashCode();
      if (TurnIndex != 0) hash ^= TurnIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FiredBulletCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FiredBulletCount);
      }
      if (InvokeType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(InvokeType);
      }
      if (StartCountDownTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartCountDownTime);
      }
      fireworksConfig_.WriteTo(output, _repeated_fireworksConfig_codec);
      if (Phase != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Phase);
      }
      if (TurnIndex != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(TurnIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FiredBulletCount != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FiredBulletCount);
      }
      if (InvokeType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(InvokeType);
      }
      if (StartCountDownTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartCountDownTime);
      }
      fireworksConfig_.WriteTo(ref output, _repeated_fireworksConfig_codec);
      if (Phase != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Phase);
      }
      if (TurnIndex != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(TurnIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FiredBulletCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FiredBulletCount);
      }
      size += fireworksConfig_.CalculateSize(_repeated_fireworksConfig_codec);
      if (InvokeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InvokeType);
      }
      if (Phase != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Phase);
      }
      if (StartCountDownTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartCountDownTime);
      }
      if (TurnIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TurnIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AbilityMixinFireworksLauncher other) {
      if (other == null) {
        return;
      }
      if (other.FiredBulletCount != 0) {
        FiredBulletCount = other.FiredBulletCount;
      }
      fireworksConfig_.Add(other.fireworksConfig_);
      if (other.InvokeType != 0) {
        InvokeType = other.InvokeType;
      }
      if (other.Phase != 0) {
        Phase = other.Phase;
      }
      if (other.StartCountDownTime != 0) {
        StartCountDownTime = other.StartCountDownTime;
      }
      if (other.TurnIndex != 0) {
        TurnIndex = other.TurnIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FiredBulletCount = input.ReadUInt32();
            break;
          }
          case 16: {
            InvokeType = input.ReadUInt32();
            break;
          }
          case 24: {
            StartCountDownTime = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            fireworksConfig_.AddEntriesFrom(input, _repeated_fireworksConfig_codec);
            break;
          }
          case 48: {
            Phase = input.ReadUInt32();
            break;
          }
          case 56: {
            TurnIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FiredBulletCount = input.ReadUInt32();
            break;
          }
          case 16: {
            InvokeType = input.ReadUInt32();
            break;
          }
          case 24: {
            StartCountDownTime = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            fireworksConfig_.AddEntriesFrom(ref input, _repeated_fireworksConfig_codec);
            break;
          }
          case 48: {
            Phase = input.ReadUInt32();
            break;
          }
          case 56: {
            TurnIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
