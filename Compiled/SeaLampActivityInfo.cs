// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SeaLampActivityInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from SeaLampActivityInfo.proto</summary>
  public static partial class SeaLampActivityInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for SeaLampActivityInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SeaLampActivityInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlTZWFMYW1wQWN0aXZpdHlJbmZvLnByb3RvEg1taUhvbW8uUHJvdG9zGhhT",
            "ZWFMYW1wU2VjdGlvbkluZm8ucHJvdG8iogIKE1NlYUxhbXBBY3Rpdml0eUlu",
            "Zm8SEQoJZGF5X2luZGV4GAEgASgNEhwKFGZpcnN0X2RheV9zdGFydF90aW1l",
            "GAsgASgNEhkKEWlzX2NvbnRlbnRfY2xvc2VkGAUgASgIEiMKG2lzX21lY2hh",
            "bmljdXNfZmVhdHVyZV9jbG9zZRgMIAEoCBIaChJpc19tZWNoYW5pY3VzX29w",
            "ZW4YDiABKAgSFQoNbWVjaGFuaWN1c19pZBgJIAEoDRISCgpwb3B1bGFyaXR5",
            "GAogASgNEhUKDXNlYV9sYW1wX2NvaW4YDyABKA0SPAoRc2VjdGlvbl9pbmZv",
            "X2xpc3QYBiADKAsyIS5taUhvbW8uUHJvdG9zLlNlYUxhbXBTZWN0aW9uSW5m",
            "b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.SeaLampSectionInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.SeaLampActivityInfo), global::MiHomo.Protos.SeaLampActivityInfo.Parser, new[]{ "DayIndex", "FirstDayStartTime", "IsContentClosed", "IsMechanicusFeatureClose", "IsMechanicusOpen", "MechanicusId", "Popularity", "SeaLampCoin", "SectionInfoList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SeaLampActivityInfo : pb::IMessage<SeaLampActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeaLampActivityInfo> _parser = new pb::MessageParser<SeaLampActivityInfo>(() => new SeaLampActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeaLampActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.SeaLampActivityInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeaLampActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeaLampActivityInfo(SeaLampActivityInfo other) : this() {
      dayIndex_ = other.dayIndex_;
      firstDayStartTime_ = other.firstDayStartTime_;
      isContentClosed_ = other.isContentClosed_;
      isMechanicusFeatureClose_ = other.isMechanicusFeatureClose_;
      isMechanicusOpen_ = other.isMechanicusOpen_;
      mechanicusId_ = other.mechanicusId_;
      popularity_ = other.popularity_;
      seaLampCoin_ = other.seaLampCoin_;
      sectionInfoList_ = other.sectionInfoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeaLampActivityInfo Clone() {
      return new SeaLampActivityInfo(this);
    }

    /// <summary>Field number for the "day_index" field.</summary>
    public const int DayIndexFieldNumber = 1;
    private uint dayIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DayIndex {
      get { return dayIndex_; }
      set {
        dayIndex_ = value;
      }
    }

    /// <summary>Field number for the "first_day_start_time" field.</summary>
    public const int FirstDayStartTimeFieldNumber = 11;
    private uint firstDayStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FirstDayStartTime {
      get { return firstDayStartTime_; }
      set {
        firstDayStartTime_ = value;
      }
    }

    /// <summary>Field number for the "is_content_closed" field.</summary>
    public const int IsContentClosedFieldNumber = 5;
    private bool isContentClosed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsContentClosed {
      get { return isContentClosed_; }
      set {
        isContentClosed_ = value;
      }
    }

    /// <summary>Field number for the "is_mechanicus_feature_close" field.</summary>
    public const int IsMechanicusFeatureCloseFieldNumber = 12;
    private bool isMechanicusFeatureClose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMechanicusFeatureClose {
      get { return isMechanicusFeatureClose_; }
      set {
        isMechanicusFeatureClose_ = value;
      }
    }

    /// <summary>Field number for the "is_mechanicus_open" field.</summary>
    public const int IsMechanicusOpenFieldNumber = 14;
    private bool isMechanicusOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMechanicusOpen {
      get { return isMechanicusOpen_; }
      set {
        isMechanicusOpen_ = value;
      }
    }

    /// <summary>Field number for the "mechanicus_id" field.</summary>
    public const int MechanicusIdFieldNumber = 9;
    private uint mechanicusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MechanicusId {
      get { return mechanicusId_; }
      set {
        mechanicusId_ = value;
      }
    }

    /// <summary>Field number for the "popularity" field.</summary>
    public const int PopularityFieldNumber = 10;
    private uint popularity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Popularity {
      get { return popularity_; }
      set {
        popularity_ = value;
      }
    }

    /// <summary>Field number for the "sea_lamp_coin" field.</summary>
    public const int SeaLampCoinFieldNumber = 15;
    private uint seaLampCoin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SeaLampCoin {
      get { return seaLampCoin_; }
      set {
        seaLampCoin_ = value;
      }
    }

    /// <summary>Field number for the "section_info_list" field.</summary>
    public const int SectionInfoListFieldNumber = 6;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.SeaLampSectionInfo> _repeated_sectionInfoList_codec
        = pb::FieldCodec.ForMessage(50, global::MiHomo.Protos.SeaLampSectionInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.SeaLampSectionInfo> sectionInfoList_ = new pbc::RepeatedField<global::MiHomo.Protos.SeaLampSectionInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.SeaLampSectionInfo> SectionInfoList {
      get { return sectionInfoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeaLampActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeaLampActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DayIndex != other.DayIndex) return false;
      if (FirstDayStartTime != other.FirstDayStartTime) return false;
      if (IsContentClosed != other.IsContentClosed) return false;
      if (IsMechanicusFeatureClose != other.IsMechanicusFeatureClose) return false;
      if (IsMechanicusOpen != other.IsMechanicusOpen) return false;
      if (MechanicusId != other.MechanicusId) return false;
      if (Popularity != other.Popularity) return false;
      if (SeaLampCoin != other.SeaLampCoin) return false;
      if(!sectionInfoList_.Equals(other.sectionInfoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DayIndex != 0) hash ^= DayIndex.GetHashCode();
      if (FirstDayStartTime != 0) hash ^= FirstDayStartTime.GetHashCode();
      if (IsContentClosed != false) hash ^= IsContentClosed.GetHashCode();
      if (IsMechanicusFeatureClose != false) hash ^= IsMechanicusFeatureClose.GetHashCode();
      if (IsMechanicusOpen != false) hash ^= IsMechanicusOpen.GetHashCode();
      if (MechanicusId != 0) hash ^= MechanicusId.GetHashCode();
      if (Popularity != 0) hash ^= Popularity.GetHashCode();
      if (SeaLampCoin != 0) hash ^= SeaLampCoin.GetHashCode();
      hash ^= sectionInfoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DayIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DayIndex);
      }
      if (IsContentClosed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsContentClosed);
      }
      sectionInfoList_.WriteTo(output, _repeated_sectionInfoList_codec);
      if (MechanicusId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MechanicusId);
      }
      if (Popularity != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Popularity);
      }
      if (FirstDayStartTime != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(FirstDayStartTime);
      }
      if (IsMechanicusFeatureClose != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsMechanicusFeatureClose);
      }
      if (IsMechanicusOpen != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsMechanicusOpen);
      }
      if (SeaLampCoin != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(SeaLampCoin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DayIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DayIndex);
      }
      if (IsContentClosed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsContentClosed);
      }
      sectionInfoList_.WriteTo(ref output, _repeated_sectionInfoList_codec);
      if (MechanicusId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MechanicusId);
      }
      if (Popularity != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Popularity);
      }
      if (FirstDayStartTime != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(FirstDayStartTime);
      }
      if (IsMechanicusFeatureClose != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsMechanicusFeatureClose);
      }
      if (IsMechanicusOpen != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsMechanicusOpen);
      }
      if (SeaLampCoin != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(SeaLampCoin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DayIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DayIndex);
      }
      if (FirstDayStartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstDayStartTime);
      }
      if (IsContentClosed != false) {
        size += 1 + 1;
      }
      if (IsMechanicusFeatureClose != false) {
        size += 1 + 1;
      }
      if (IsMechanicusOpen != false) {
        size += 1 + 1;
      }
      if (MechanicusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MechanicusId);
      }
      if (Popularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Popularity);
      }
      if (SeaLampCoin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SeaLampCoin);
      }
      size += sectionInfoList_.CalculateSize(_repeated_sectionInfoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeaLampActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.DayIndex != 0) {
        DayIndex = other.DayIndex;
      }
      if (other.FirstDayStartTime != 0) {
        FirstDayStartTime = other.FirstDayStartTime;
      }
      if (other.IsContentClosed != false) {
        IsContentClosed = other.IsContentClosed;
      }
      if (other.IsMechanicusFeatureClose != false) {
        IsMechanicusFeatureClose = other.IsMechanicusFeatureClose;
      }
      if (other.IsMechanicusOpen != false) {
        IsMechanicusOpen = other.IsMechanicusOpen;
      }
      if (other.MechanicusId != 0) {
        MechanicusId = other.MechanicusId;
      }
      if (other.Popularity != 0) {
        Popularity = other.Popularity;
      }
      if (other.SeaLampCoin != 0) {
        SeaLampCoin = other.SeaLampCoin;
      }
      sectionInfoList_.Add(other.sectionInfoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DayIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            IsContentClosed = input.ReadBool();
            break;
          }
          case 50: {
            sectionInfoList_.AddEntriesFrom(input, _repeated_sectionInfoList_codec);
            break;
          }
          case 72: {
            MechanicusId = input.ReadUInt32();
            break;
          }
          case 80: {
            Popularity = input.ReadUInt32();
            break;
          }
          case 88: {
            FirstDayStartTime = input.ReadUInt32();
            break;
          }
          case 96: {
            IsMechanicusFeatureClose = input.ReadBool();
            break;
          }
          case 112: {
            IsMechanicusOpen = input.ReadBool();
            break;
          }
          case 120: {
            SeaLampCoin = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DayIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            IsContentClosed = input.ReadBool();
            break;
          }
          case 50: {
            sectionInfoList_.AddEntriesFrom(ref input, _repeated_sectionInfoList_codec);
            break;
          }
          case 72: {
            MechanicusId = input.ReadUInt32();
            break;
          }
          case 80: {
            Popularity = input.ReadUInt32();
            break;
          }
          case 88: {
            FirstDayStartTime = input.ReadUInt32();
            break;
          }
          case 96: {
            IsMechanicusFeatureClose = input.ReadBool();
            break;
          }
          case 112: {
            IsMechanicusOpen = input.ReadBool();
            break;
          }
          case 120: {
            SeaLampCoin = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
