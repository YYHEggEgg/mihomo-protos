// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AttackResult.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from AttackResult.proto</summary>
  public static partial class AttackResultReflection {

    #region Descriptor
    /// <summary>File descriptor for AttackResult.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AttackResultReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJBdHRhY2tSZXN1bHQucHJvdG8SDW1pSG9tby5Qcm90b3MaF0FiaWxpdHlJ",
            "ZGVudGlmaWVyLnByb3RvGhtBdHRhY2tIaXRFZmZlY3RSZXN1bHQucHJvdG8a",
            "EkhpdENvbGxpc2lvbi5wcm90bxoMVmVjdG9yLnByb3RvIqYHCgxBdHRhY2tS",
            "ZXN1bHQSPAoSYWJpbGl0eV9pZGVudGlmaWVyGA4gASgLMiAubWlIb21vLlBy",
            "b3Rvcy5BYmlsaXR5SWRlbnRpZmllchIeChVhZGRodXJ0X3JlYWN0aW9uX3R5",
            "cGUY3w4gASgNEh4KFWFtcGxpZnlfcmVhY3Rpb25fdHlwZRjVDyABKA0SFQoN",
            "YW5pbV9ldmVudF9pZBgEIAEoCRIVCgxhdHRhY2tfY291bnQYnAwgASgNEhwK",
            "E2F0dGFja190aW1lc3RhbXBfbXMYpAkgASgNEhMKC2F0dGFja2VyX2lkGAsg",
            "ASgNEhoKEmJ1bGxldF9mbHlfdGltZV9tcxhbIAEoDRIkChtjcmVhdGVfY291",
            "bnRfc3luY190b19zZXJ2ZXIY8wcgASgNEhYKDWNyaXRpY2FsX3JhbmQYgA0g",
            "ASgNEg4KBmRhbWFnZRgGIAEoAhIWCg1kYW1hZ2Vfc2hpZWxkGLIJIAEoAhIS",
            "CgpkZWZlbnNlX2lkGA8gASgNEh0KFGVsZW1lbnRfYW1wbGlmeV9yYXRlGIQH",
            "IAEoAhInCh5lbGVtZW50X2R1cmFiaWxpdHlfYXR0ZW51YXRpb24YqQMgASgC",
            "EhQKDGVsZW1lbnRfdHlwZRgFIAEoDRIUCgxlbmR1cmVfYnJlYWsYByABKA0S",
            "FQoMZW5kdXJlX2RlbHRhGK4DIAEoAhIhChhnYWRnZXRfZGFtYWdlX2FjdGlv",
            "bl9pZHgY1gggASgNEh0KFGhhc2hlZF9hbmltX2V2ZW50X2lkGJYCIAEoDRIy",
            "Cg1oaXRfY29sbGlzaW9uGAogASgLMhsubWlIb21vLlByb3Rvcy5IaXRDb2xs",
            "aXNpb24SPAoOaGl0X2VmZl9yZXN1bHQYCCABKAsyJC5taUhvbW8uUHJvdG9z",
            "LkF0dGFja0hpdEVmZmVjdFJlc3VsdBIUCgxoaXRfcG9zX3R5cGUYAiABKA0S",
            "IAoYaGl0X3JldHJlYXRfYW5nbGVfY29tcGF0GAkgASgFEg8KB2lzX2NyaXQY",
            "DSABKAgSFwoOaXNfcmVzaXN0X3RleHQYwg4gASgIEhoKEW11dGVfZWxlbWVu",
            "dF9odXJ0GPoLIAEoCBIrCgxyZXNvbHZlZF9kaXIYASABKAsyFS5taUhvbW8u",
            "UHJvdG9zLlZlY3RvchIUCgt0YXJnZXRfdHlwZRjWCiABKA0SIQoYdXNlX2dh",
            "ZGdldF9kYW1hZ2VfYWN0aW9uGIoLIAEoCGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.AbilityIdentifierReflection.Descriptor, global::MiHomo.Protos.AttackHitEffectResultReflection.Descriptor, global::MiHomo.Protos.HitCollisionReflection.Descriptor, global::MiHomo.Protos.VectorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.AttackResult), global::MiHomo.Protos.AttackResult.Parser, new[]{ "AbilityIdentifier", "AddhurtReactionType", "AmplifyReactionType", "AnimEventId", "AttackCount", "AttackTimestampMs", "AttackerId", "BulletFlyTimeMs", "CreateCountSyncToServer", "CriticalRand", "Damage", "DamageShield", "DefenseId", "ElementAmplifyRate", "ElementDurabilityAttenuation", "ElementType", "EndureBreak", "EndureDelta", "GadgetDamageActionIdx", "HashedAnimEventId", "HitCollision", "HitEffResult", "HitPosType", "HitRetreatAngleCompat", "IsCrit", "IsResistText", "MuteElementHurt", "ResolvedDir", "TargetType", "UseGadgetDamageAction" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AttackResult : pb::IMessage<AttackResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttackResult> _parser = new pb::MessageParser<AttackResult>(() => new AttackResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AttackResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.AttackResultReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AttackResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AttackResult(AttackResult other) : this() {
      abilityIdentifier_ = other.abilityIdentifier_ != null ? other.abilityIdentifier_.Clone() : null;
      addhurtReactionType_ = other.addhurtReactionType_;
      amplifyReactionType_ = other.amplifyReactionType_;
      animEventId_ = other.animEventId_;
      attackCount_ = other.attackCount_;
      attackTimestampMs_ = other.attackTimestampMs_;
      attackerId_ = other.attackerId_;
      bulletFlyTimeMs_ = other.bulletFlyTimeMs_;
      createCountSyncToServer_ = other.createCountSyncToServer_;
      criticalRand_ = other.criticalRand_;
      damage_ = other.damage_;
      damageShield_ = other.damageShield_;
      defenseId_ = other.defenseId_;
      elementAmplifyRate_ = other.elementAmplifyRate_;
      elementDurabilityAttenuation_ = other.elementDurabilityAttenuation_;
      elementType_ = other.elementType_;
      endureBreak_ = other.endureBreak_;
      endureDelta_ = other.endureDelta_;
      gadgetDamageActionIdx_ = other.gadgetDamageActionIdx_;
      hashedAnimEventId_ = other.hashedAnimEventId_;
      hitCollision_ = other.hitCollision_ != null ? other.hitCollision_.Clone() : null;
      hitEffResult_ = other.hitEffResult_ != null ? other.hitEffResult_.Clone() : null;
      hitPosType_ = other.hitPosType_;
      hitRetreatAngleCompat_ = other.hitRetreatAngleCompat_;
      isCrit_ = other.isCrit_;
      isResistText_ = other.isResistText_;
      muteElementHurt_ = other.muteElementHurt_;
      resolvedDir_ = other.resolvedDir_ != null ? other.resolvedDir_.Clone() : null;
      targetType_ = other.targetType_;
      useGadgetDamageAction_ = other.useGadgetDamageAction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AttackResult Clone() {
      return new AttackResult(this);
    }

    /// <summary>Field number for the "ability_identifier" field.</summary>
    public const int AbilityIdentifierFieldNumber = 14;
    private global::MiHomo.Protos.AbilityIdentifier abilityIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.AbilityIdentifier AbilityIdentifier {
      get { return abilityIdentifier_; }
      set {
        abilityIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "addhurt_reaction_type" field.</summary>
    public const int AddhurtReactionTypeFieldNumber = 1887;
    private uint addhurtReactionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AddhurtReactionType {
      get { return addhurtReactionType_; }
      set {
        addhurtReactionType_ = value;
      }
    }

    /// <summary>Field number for the "amplify_reaction_type" field.</summary>
    public const int AmplifyReactionTypeFieldNumber = 2005;
    private uint amplifyReactionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AmplifyReactionType {
      get { return amplifyReactionType_; }
      set {
        amplifyReactionType_ = value;
      }
    }

    /// <summary>Field number for the "anim_event_id" field.</summary>
    public const int AnimEventIdFieldNumber = 4;
    private string animEventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AnimEventId {
      get { return animEventId_; }
      set {
        animEventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attack_count" field.</summary>
    public const int AttackCountFieldNumber = 1564;
    private uint attackCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttackCount {
      get { return attackCount_; }
      set {
        attackCount_ = value;
      }
    }

    /// <summary>Field number for the "attack_timestamp_ms" field.</summary>
    public const int AttackTimestampMsFieldNumber = 1188;
    private uint attackTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttackTimestampMs {
      get { return attackTimestampMs_; }
      set {
        attackTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "attacker_id" field.</summary>
    public const int AttackerIdFieldNumber = 11;
    private uint attackerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttackerId {
      get { return attackerId_; }
      set {
        attackerId_ = value;
      }
    }

    /// <summary>Field number for the "bullet_fly_time_ms" field.</summary>
    public const int BulletFlyTimeMsFieldNumber = 91;
    private uint bulletFlyTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BulletFlyTimeMs {
      get { return bulletFlyTimeMs_; }
      set {
        bulletFlyTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "create_count_sync_to_server" field.</summary>
    public const int CreateCountSyncToServerFieldNumber = 1011;
    private uint createCountSyncToServer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreateCountSyncToServer {
      get { return createCountSyncToServer_; }
      set {
        createCountSyncToServer_ = value;
      }
    }

    /// <summary>Field number for the "critical_rand" field.</summary>
    public const int CriticalRandFieldNumber = 1664;
    private uint criticalRand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CriticalRand {
      get { return criticalRand_; }
      set {
        criticalRand_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 6;
    private float damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "damage_shield" field.</summary>
    public const int DamageShieldFieldNumber = 1202;
    private float damageShield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DamageShield {
      get { return damageShield_; }
      set {
        damageShield_ = value;
      }
    }

    /// <summary>Field number for the "defense_id" field.</summary>
    public const int DefenseIdFieldNumber = 15;
    private uint defenseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DefenseId {
      get { return defenseId_; }
      set {
        defenseId_ = value;
      }
    }

    /// <summary>Field number for the "element_amplify_rate" field.</summary>
    public const int ElementAmplifyRateFieldNumber = 900;
    private float elementAmplifyRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ElementAmplifyRate {
      get { return elementAmplifyRate_; }
      set {
        elementAmplifyRate_ = value;
      }
    }

    /// <summary>Field number for the "element_durability_attenuation" field.</summary>
    public const int ElementDurabilityAttenuationFieldNumber = 425;
    private float elementDurabilityAttenuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ElementDurabilityAttenuation {
      get { return elementDurabilityAttenuation_; }
      set {
        elementDurabilityAttenuation_ = value;
      }
    }

    /// <summary>Field number for the "element_type" field.</summary>
    public const int ElementTypeFieldNumber = 5;
    private uint elementType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ElementType {
      get { return elementType_; }
      set {
        elementType_ = value;
      }
    }

    /// <summary>Field number for the "endure_break" field.</summary>
    public const int EndureBreakFieldNumber = 7;
    private uint endureBreak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndureBreak {
      get { return endureBreak_; }
      set {
        endureBreak_ = value;
      }
    }

    /// <summary>Field number for the "endure_delta" field.</summary>
    public const int EndureDeltaFieldNumber = 430;
    private float endureDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EndureDelta {
      get { return endureDelta_; }
      set {
        endureDelta_ = value;
      }
    }

    /// <summary>Field number for the "gadget_damage_action_idx" field.</summary>
    public const int GadgetDamageActionIdxFieldNumber = 1110;
    private uint gadgetDamageActionIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GadgetDamageActionIdx {
      get { return gadgetDamageActionIdx_; }
      set {
        gadgetDamageActionIdx_ = value;
      }
    }

    /// <summary>Field number for the "hashed_anim_event_id" field.</summary>
    public const int HashedAnimEventIdFieldNumber = 278;
    private uint hashedAnimEventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HashedAnimEventId {
      get { return hashedAnimEventId_; }
      set {
        hashedAnimEventId_ = value;
      }
    }

    /// <summary>Field number for the "hit_collision" field.</summary>
    public const int HitCollisionFieldNumber = 10;
    private global::MiHomo.Protos.HitCollision hitCollision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.HitCollision HitCollision {
      get { return hitCollision_; }
      set {
        hitCollision_ = value;
      }
    }

    /// <summary>Field number for the "hit_eff_result" field.</summary>
    public const int HitEffResultFieldNumber = 8;
    private global::MiHomo.Protos.AttackHitEffectResult hitEffResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.AttackHitEffectResult HitEffResult {
      get { return hitEffResult_; }
      set {
        hitEffResult_ = value;
      }
    }

    /// <summary>Field number for the "hit_pos_type" field.</summary>
    public const int HitPosTypeFieldNumber = 2;
    private uint hitPosType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HitPosType {
      get { return hitPosType_; }
      set {
        hitPosType_ = value;
      }
    }

    /// <summary>Field number for the "hit_retreat_angle_compat" field.</summary>
    public const int HitRetreatAngleCompatFieldNumber = 9;
    private int hitRetreatAngleCompat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitRetreatAngleCompat {
      get { return hitRetreatAngleCompat_; }
      set {
        hitRetreatAngleCompat_ = value;
      }
    }

    /// <summary>Field number for the "is_crit" field.</summary>
    public const int IsCritFieldNumber = 13;
    private bool isCrit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCrit {
      get { return isCrit_; }
      set {
        isCrit_ = value;
      }
    }

    /// <summary>Field number for the "is_resist_text" field.</summary>
    public const int IsResistTextFieldNumber = 1858;
    private bool isResistText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsResistText {
      get { return isResistText_; }
      set {
        isResistText_ = value;
      }
    }

    /// <summary>Field number for the "mute_element_hurt" field.</summary>
    public const int MuteElementHurtFieldNumber = 1530;
    private bool muteElementHurt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MuteElementHurt {
      get { return muteElementHurt_; }
      set {
        muteElementHurt_ = value;
      }
    }

    /// <summary>Field number for the "resolved_dir" field.</summary>
    public const int ResolvedDirFieldNumber = 1;
    private global::MiHomo.Protos.Vector resolvedDir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.Vector ResolvedDir {
      get { return resolvedDir_; }
      set {
        resolvedDir_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 1366;
    private uint targetType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "use_gadget_damage_action" field.</summary>
    public const int UseGadgetDamageActionFieldNumber = 1418;
    private bool useGadgetDamageAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseGadgetDamageAction {
      get { return useGadgetDamageAction_; }
      set {
        useGadgetDamageAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AttackResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AttackResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AbilityIdentifier, other.AbilityIdentifier)) return false;
      if (AddhurtReactionType != other.AddhurtReactionType) return false;
      if (AmplifyReactionType != other.AmplifyReactionType) return false;
      if (AnimEventId != other.AnimEventId) return false;
      if (AttackCount != other.AttackCount) return false;
      if (AttackTimestampMs != other.AttackTimestampMs) return false;
      if (AttackerId != other.AttackerId) return false;
      if (BulletFlyTimeMs != other.BulletFlyTimeMs) return false;
      if (CreateCountSyncToServer != other.CreateCountSyncToServer) return false;
      if (CriticalRand != other.CriticalRand) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Damage, other.Damage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DamageShield, other.DamageShield)) return false;
      if (DefenseId != other.DefenseId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ElementAmplifyRate, other.ElementAmplifyRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ElementDurabilityAttenuation, other.ElementDurabilityAttenuation)) return false;
      if (ElementType != other.ElementType) return false;
      if (EndureBreak != other.EndureBreak) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EndureDelta, other.EndureDelta)) return false;
      if (GadgetDamageActionIdx != other.GadgetDamageActionIdx) return false;
      if (HashedAnimEventId != other.HashedAnimEventId) return false;
      if (!object.Equals(HitCollision, other.HitCollision)) return false;
      if (!object.Equals(HitEffResult, other.HitEffResult)) return false;
      if (HitPosType != other.HitPosType) return false;
      if (HitRetreatAngleCompat != other.HitRetreatAngleCompat) return false;
      if (IsCrit != other.IsCrit) return false;
      if (IsResistText != other.IsResistText) return false;
      if (MuteElementHurt != other.MuteElementHurt) return false;
      if (!object.Equals(ResolvedDir, other.ResolvedDir)) return false;
      if (TargetType != other.TargetType) return false;
      if (UseGadgetDamageAction != other.UseGadgetDamageAction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (abilityIdentifier_ != null) hash ^= AbilityIdentifier.GetHashCode();
      if (AddhurtReactionType != 0) hash ^= AddhurtReactionType.GetHashCode();
      if (AmplifyReactionType != 0) hash ^= AmplifyReactionType.GetHashCode();
      if (AnimEventId.Length != 0) hash ^= AnimEventId.GetHashCode();
      if (AttackCount != 0) hash ^= AttackCount.GetHashCode();
      if (AttackTimestampMs != 0) hash ^= AttackTimestampMs.GetHashCode();
      if (AttackerId != 0) hash ^= AttackerId.GetHashCode();
      if (BulletFlyTimeMs != 0) hash ^= BulletFlyTimeMs.GetHashCode();
      if (CreateCountSyncToServer != 0) hash ^= CreateCountSyncToServer.GetHashCode();
      if (CriticalRand != 0) hash ^= CriticalRand.GetHashCode();
      if (Damage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Damage);
      if (DamageShield != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DamageShield);
      if (DefenseId != 0) hash ^= DefenseId.GetHashCode();
      if (ElementAmplifyRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ElementAmplifyRate);
      if (ElementDurabilityAttenuation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ElementDurabilityAttenuation);
      if (ElementType != 0) hash ^= ElementType.GetHashCode();
      if (EndureBreak != 0) hash ^= EndureBreak.GetHashCode();
      if (EndureDelta != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EndureDelta);
      if (GadgetDamageActionIdx != 0) hash ^= GadgetDamageActionIdx.GetHashCode();
      if (HashedAnimEventId != 0) hash ^= HashedAnimEventId.GetHashCode();
      if (hitCollision_ != null) hash ^= HitCollision.GetHashCode();
      if (hitEffResult_ != null) hash ^= HitEffResult.GetHashCode();
      if (HitPosType != 0) hash ^= HitPosType.GetHashCode();
      if (HitRetreatAngleCompat != 0) hash ^= HitRetreatAngleCompat.GetHashCode();
      if (IsCrit != false) hash ^= IsCrit.GetHashCode();
      if (IsResistText != false) hash ^= IsResistText.GetHashCode();
      if (MuteElementHurt != false) hash ^= MuteElementHurt.GetHashCode();
      if (resolvedDir_ != null) hash ^= ResolvedDir.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (UseGadgetDamageAction != false) hash ^= UseGadgetDamageAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resolvedDir_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResolvedDir);
      }
      if (HitPosType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(HitPosType);
      }
      if (AnimEventId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AnimEventId);
      }
      if (ElementType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ElementType);
      }
      if (Damage != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Damage);
      }
      if (EndureBreak != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EndureBreak);
      }
      if (hitEffResult_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(HitEffResult);
      }
      if (HitRetreatAngleCompat != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HitRetreatAngleCompat);
      }
      if (hitCollision_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(HitCollision);
      }
      if (AttackerId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AttackerId);
      }
      if (IsCrit != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsCrit);
      }
      if (abilityIdentifier_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AbilityIdentifier);
      }
      if (DefenseId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(DefenseId);
      }
      if (BulletFlyTimeMs != 0) {
        output.WriteRawTag(216, 5);
        output.WriteUInt32(BulletFlyTimeMs);
      }
      if (HashedAnimEventId != 0) {
        output.WriteRawTag(176, 17);
        output.WriteUInt32(HashedAnimEventId);
      }
      if (ElementDurabilityAttenuation != 0F) {
        output.WriteRawTag(205, 26);
        output.WriteFloat(ElementDurabilityAttenuation);
      }
      if (EndureDelta != 0F) {
        output.WriteRawTag(245, 26);
        output.WriteFloat(EndureDelta);
      }
      if (ElementAmplifyRate != 0F) {
        output.WriteRawTag(165, 56);
        output.WriteFloat(ElementAmplifyRate);
      }
      if (CreateCountSyncToServer != 0) {
        output.WriteRawTag(152, 63);
        output.WriteUInt32(CreateCountSyncToServer);
      }
      if (GadgetDamageActionIdx != 0) {
        output.WriteRawTag(176, 69);
        output.WriteUInt32(GadgetDamageActionIdx);
      }
      if (AttackTimestampMs != 0) {
        output.WriteRawTag(160, 74);
        output.WriteUInt32(AttackTimestampMs);
      }
      if (DamageShield != 0F) {
        output.WriteRawTag(149, 75);
        output.WriteFloat(DamageShield);
      }
      if (TargetType != 0) {
        output.WriteRawTag(176, 85);
        output.WriteUInt32(TargetType);
      }
      if (UseGadgetDamageAction != false) {
        output.WriteRawTag(208, 88);
        output.WriteBool(UseGadgetDamageAction);
      }
      if (MuteElementHurt != false) {
        output.WriteRawTag(208, 95);
        output.WriteBool(MuteElementHurt);
      }
      if (AttackCount != 0) {
        output.WriteRawTag(224, 97);
        output.WriteUInt32(AttackCount);
      }
      if (CriticalRand != 0) {
        output.WriteRawTag(128, 104);
        output.WriteUInt32(CriticalRand);
      }
      if (IsResistText != false) {
        output.WriteRawTag(144, 116);
        output.WriteBool(IsResistText);
      }
      if (AddhurtReactionType != 0) {
        output.WriteRawTag(248, 117);
        output.WriteUInt32(AddhurtReactionType);
      }
      if (AmplifyReactionType != 0) {
        output.WriteRawTag(168, 125);
        output.WriteUInt32(AmplifyReactionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resolvedDir_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResolvedDir);
      }
      if (HitPosType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(HitPosType);
      }
      if (AnimEventId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AnimEventId);
      }
      if (ElementType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ElementType);
      }
      if (Damage != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Damage);
      }
      if (EndureBreak != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EndureBreak);
      }
      if (hitEffResult_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(HitEffResult);
      }
      if (HitRetreatAngleCompat != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HitRetreatAngleCompat);
      }
      if (hitCollision_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(HitCollision);
      }
      if (AttackerId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AttackerId);
      }
      if (IsCrit != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsCrit);
      }
      if (abilityIdentifier_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AbilityIdentifier);
      }
      if (DefenseId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(DefenseId);
      }
      if (BulletFlyTimeMs != 0) {
        output.WriteRawTag(216, 5);
        output.WriteUInt32(BulletFlyTimeMs);
      }
      if (HashedAnimEventId != 0) {
        output.WriteRawTag(176, 17);
        output.WriteUInt32(HashedAnimEventId);
      }
      if (ElementDurabilityAttenuation != 0F) {
        output.WriteRawTag(205, 26);
        output.WriteFloat(ElementDurabilityAttenuation);
      }
      if (EndureDelta != 0F) {
        output.WriteRawTag(245, 26);
        output.WriteFloat(EndureDelta);
      }
      if (ElementAmplifyRate != 0F) {
        output.WriteRawTag(165, 56);
        output.WriteFloat(ElementAmplifyRate);
      }
      if (CreateCountSyncToServer != 0) {
        output.WriteRawTag(152, 63);
        output.WriteUInt32(CreateCountSyncToServer);
      }
      if (GadgetDamageActionIdx != 0) {
        output.WriteRawTag(176, 69);
        output.WriteUInt32(GadgetDamageActionIdx);
      }
      if (AttackTimestampMs != 0) {
        output.WriteRawTag(160, 74);
        output.WriteUInt32(AttackTimestampMs);
      }
      if (DamageShield != 0F) {
        output.WriteRawTag(149, 75);
        output.WriteFloat(DamageShield);
      }
      if (TargetType != 0) {
        output.WriteRawTag(176, 85);
        output.WriteUInt32(TargetType);
      }
      if (UseGadgetDamageAction != false) {
        output.WriteRawTag(208, 88);
        output.WriteBool(UseGadgetDamageAction);
      }
      if (MuteElementHurt != false) {
        output.WriteRawTag(208, 95);
        output.WriteBool(MuteElementHurt);
      }
      if (AttackCount != 0) {
        output.WriteRawTag(224, 97);
        output.WriteUInt32(AttackCount);
      }
      if (CriticalRand != 0) {
        output.WriteRawTag(128, 104);
        output.WriteUInt32(CriticalRand);
      }
      if (IsResistText != false) {
        output.WriteRawTag(144, 116);
        output.WriteBool(IsResistText);
      }
      if (AddhurtReactionType != 0) {
        output.WriteRawTag(248, 117);
        output.WriteUInt32(AddhurtReactionType);
      }
      if (AmplifyReactionType != 0) {
        output.WriteRawTag(168, 125);
        output.WriteUInt32(AmplifyReactionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (abilityIdentifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbilityIdentifier);
      }
      if (AddhurtReactionType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AddhurtReactionType);
      }
      if (AmplifyReactionType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AmplifyReactionType);
      }
      if (AnimEventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnimEventId);
      }
      if (AttackCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AttackCount);
      }
      if (AttackTimestampMs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AttackTimestampMs);
      }
      if (AttackerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttackerId);
      }
      if (BulletFlyTimeMs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BulletFlyTimeMs);
      }
      if (CreateCountSyncToServer != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CreateCountSyncToServer);
      }
      if (CriticalRand != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CriticalRand);
      }
      if (Damage != 0F) {
        size += 1 + 4;
      }
      if (DamageShield != 0F) {
        size += 2 + 4;
      }
      if (DefenseId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefenseId);
      }
      if (ElementAmplifyRate != 0F) {
        size += 2 + 4;
      }
      if (ElementDurabilityAttenuation != 0F) {
        size += 2 + 4;
      }
      if (ElementType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ElementType);
      }
      if (EndureBreak != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndureBreak);
      }
      if (EndureDelta != 0F) {
        size += 2 + 4;
      }
      if (GadgetDamageActionIdx != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GadgetDamageActionIdx);
      }
      if (HashedAnimEventId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HashedAnimEventId);
      }
      if (hitCollision_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitCollision);
      }
      if (hitEffResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitEffResult);
      }
      if (HitPosType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitPosType);
      }
      if (HitRetreatAngleCompat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitRetreatAngleCompat);
      }
      if (IsCrit != false) {
        size += 1 + 1;
      }
      if (IsResistText != false) {
        size += 2 + 1;
      }
      if (MuteElementHurt != false) {
        size += 2 + 1;
      }
      if (resolvedDir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResolvedDir);
      }
      if (TargetType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (UseGadgetDamageAction != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AttackResult other) {
      if (other == null) {
        return;
      }
      if (other.abilityIdentifier_ != null) {
        if (abilityIdentifier_ == null) {
          AbilityIdentifier = new global::MiHomo.Protos.AbilityIdentifier();
        }
        AbilityIdentifier.MergeFrom(other.AbilityIdentifier);
      }
      if (other.AddhurtReactionType != 0) {
        AddhurtReactionType = other.AddhurtReactionType;
      }
      if (other.AmplifyReactionType != 0) {
        AmplifyReactionType = other.AmplifyReactionType;
      }
      if (other.AnimEventId.Length != 0) {
        AnimEventId = other.AnimEventId;
      }
      if (other.AttackCount != 0) {
        AttackCount = other.AttackCount;
      }
      if (other.AttackTimestampMs != 0) {
        AttackTimestampMs = other.AttackTimestampMs;
      }
      if (other.AttackerId != 0) {
        AttackerId = other.AttackerId;
      }
      if (other.BulletFlyTimeMs != 0) {
        BulletFlyTimeMs = other.BulletFlyTimeMs;
      }
      if (other.CreateCountSyncToServer != 0) {
        CreateCountSyncToServer = other.CreateCountSyncToServer;
      }
      if (other.CriticalRand != 0) {
        CriticalRand = other.CriticalRand;
      }
      if (other.Damage != 0F) {
        Damage = other.Damage;
      }
      if (other.DamageShield != 0F) {
        DamageShield = other.DamageShield;
      }
      if (other.DefenseId != 0) {
        DefenseId = other.DefenseId;
      }
      if (other.ElementAmplifyRate != 0F) {
        ElementAmplifyRate = other.ElementAmplifyRate;
      }
      if (other.ElementDurabilityAttenuation != 0F) {
        ElementDurabilityAttenuation = other.ElementDurabilityAttenuation;
      }
      if (other.ElementType != 0) {
        ElementType = other.ElementType;
      }
      if (other.EndureBreak != 0) {
        EndureBreak = other.EndureBreak;
      }
      if (other.EndureDelta != 0F) {
        EndureDelta = other.EndureDelta;
      }
      if (other.GadgetDamageActionIdx != 0) {
        GadgetDamageActionIdx = other.GadgetDamageActionIdx;
      }
      if (other.HashedAnimEventId != 0) {
        HashedAnimEventId = other.HashedAnimEventId;
      }
      if (other.hitCollision_ != null) {
        if (hitCollision_ == null) {
          HitCollision = new global::MiHomo.Protos.HitCollision();
        }
        HitCollision.MergeFrom(other.HitCollision);
      }
      if (other.hitEffResult_ != null) {
        if (hitEffResult_ == null) {
          HitEffResult = new global::MiHomo.Protos.AttackHitEffectResult();
        }
        HitEffResult.MergeFrom(other.HitEffResult);
      }
      if (other.HitPosType != 0) {
        HitPosType = other.HitPosType;
      }
      if (other.HitRetreatAngleCompat != 0) {
        HitRetreatAngleCompat = other.HitRetreatAngleCompat;
      }
      if (other.IsCrit != false) {
        IsCrit = other.IsCrit;
      }
      if (other.IsResistText != false) {
        IsResistText = other.IsResistText;
      }
      if (other.MuteElementHurt != false) {
        MuteElementHurt = other.MuteElementHurt;
      }
      if (other.resolvedDir_ != null) {
        if (resolvedDir_ == null) {
          ResolvedDir = new global::MiHomo.Protos.Vector();
        }
        ResolvedDir.MergeFrom(other.ResolvedDir);
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.UseGadgetDamageAction != false) {
        UseGadgetDamageAction = other.UseGadgetDamageAction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resolvedDir_ == null) {
              ResolvedDir = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(ResolvedDir);
            break;
          }
          case 16: {
            HitPosType = input.ReadUInt32();
            break;
          }
          case 34: {
            AnimEventId = input.ReadString();
            break;
          }
          case 40: {
            ElementType = input.ReadUInt32();
            break;
          }
          case 53: {
            Damage = input.ReadFloat();
            break;
          }
          case 56: {
            EndureBreak = input.ReadUInt32();
            break;
          }
          case 66: {
            if (hitEffResult_ == null) {
              HitEffResult = new global::MiHomo.Protos.AttackHitEffectResult();
            }
            input.ReadMessage(HitEffResult);
            break;
          }
          case 72: {
            HitRetreatAngleCompat = input.ReadInt32();
            break;
          }
          case 82: {
            if (hitCollision_ == null) {
              HitCollision = new global::MiHomo.Protos.HitCollision();
            }
            input.ReadMessage(HitCollision);
            break;
          }
          case 88: {
            AttackerId = input.ReadUInt32();
            break;
          }
          case 104: {
            IsCrit = input.ReadBool();
            break;
          }
          case 114: {
            if (abilityIdentifier_ == null) {
              AbilityIdentifier = new global::MiHomo.Protos.AbilityIdentifier();
            }
            input.ReadMessage(AbilityIdentifier);
            break;
          }
          case 120: {
            DefenseId = input.ReadUInt32();
            break;
          }
          case 728: {
            BulletFlyTimeMs = input.ReadUInt32();
            break;
          }
          case 2224: {
            HashedAnimEventId = input.ReadUInt32();
            break;
          }
          case 3405: {
            ElementDurabilityAttenuation = input.ReadFloat();
            break;
          }
          case 3445: {
            EndureDelta = input.ReadFloat();
            break;
          }
          case 7205: {
            ElementAmplifyRate = input.ReadFloat();
            break;
          }
          case 8088: {
            CreateCountSyncToServer = input.ReadUInt32();
            break;
          }
          case 8880: {
            GadgetDamageActionIdx = input.ReadUInt32();
            break;
          }
          case 9504: {
            AttackTimestampMs = input.ReadUInt32();
            break;
          }
          case 9621: {
            DamageShield = input.ReadFloat();
            break;
          }
          case 10928: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 11344: {
            UseGadgetDamageAction = input.ReadBool();
            break;
          }
          case 12240: {
            MuteElementHurt = input.ReadBool();
            break;
          }
          case 12512: {
            AttackCount = input.ReadUInt32();
            break;
          }
          case 13312: {
            CriticalRand = input.ReadUInt32();
            break;
          }
          case 14864: {
            IsResistText = input.ReadBool();
            break;
          }
          case 15096: {
            AddhurtReactionType = input.ReadUInt32();
            break;
          }
          case 16040: {
            AmplifyReactionType = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (resolvedDir_ == null) {
              ResolvedDir = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(ResolvedDir);
            break;
          }
          case 16: {
            HitPosType = input.ReadUInt32();
            break;
          }
          case 34: {
            AnimEventId = input.ReadString();
            break;
          }
          case 40: {
            ElementType = input.ReadUInt32();
            break;
          }
          case 53: {
            Damage = input.ReadFloat();
            break;
          }
          case 56: {
            EndureBreak = input.ReadUInt32();
            break;
          }
          case 66: {
            if (hitEffResult_ == null) {
              HitEffResult = new global::MiHomo.Protos.AttackHitEffectResult();
            }
            input.ReadMessage(HitEffResult);
            break;
          }
          case 72: {
            HitRetreatAngleCompat = input.ReadInt32();
            break;
          }
          case 82: {
            if (hitCollision_ == null) {
              HitCollision = new global::MiHomo.Protos.HitCollision();
            }
            input.ReadMessage(HitCollision);
            break;
          }
          case 88: {
            AttackerId = input.ReadUInt32();
            break;
          }
          case 104: {
            IsCrit = input.ReadBool();
            break;
          }
          case 114: {
            if (abilityIdentifier_ == null) {
              AbilityIdentifier = new global::MiHomo.Protos.AbilityIdentifier();
            }
            input.ReadMessage(AbilityIdentifier);
            break;
          }
          case 120: {
            DefenseId = input.ReadUInt32();
            break;
          }
          case 728: {
            BulletFlyTimeMs = input.ReadUInt32();
            break;
          }
          case 2224: {
            HashedAnimEventId = input.ReadUInt32();
            break;
          }
          case 3405: {
            ElementDurabilityAttenuation = input.ReadFloat();
            break;
          }
          case 3445: {
            EndureDelta = input.ReadFloat();
            break;
          }
          case 7205: {
            ElementAmplifyRate = input.ReadFloat();
            break;
          }
          case 8088: {
            CreateCountSyncToServer = input.ReadUInt32();
            break;
          }
          case 8880: {
            GadgetDamageActionIdx = input.ReadUInt32();
            break;
          }
          case 9504: {
            AttackTimestampMs = input.ReadUInt32();
            break;
          }
          case 9621: {
            DamageShield = input.ReadFloat();
            break;
          }
          case 10928: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 11344: {
            UseGadgetDamageAction = input.ReadBool();
            break;
          }
          case 12240: {
            MuteElementHurt = input.ReadBool();
            break;
          }
          case 12512: {
            AttackCount = input.ReadUInt32();
            break;
          }
          case 13312: {
            CriticalRand = input.ReadUInt32();
            break;
          }
          case 14864: {
            IsResistText = input.ReadBool();
            break;
          }
          case 15096: {
            AddhurtReactionType = input.ReadUInt32();
            break;
          }
          case 16040: {
            AmplifyReactionType = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
