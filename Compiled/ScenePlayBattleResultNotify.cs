// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ScenePlayBattleResultNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from ScenePlayBattleResultNotify.proto</summary>
  public static partial class ScenePlayBattleResultNotifyReflection {

    #region Descriptor
    /// <summary>File descriptor for ScenePlayBattleResultNotify.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ScenePlayBattleResultNotifyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFTY2VuZVBsYXlCYXR0bGVSZXN1bHROb3RpZnkucHJvdG8SDW1pSG9tby5Q",
            "cm90b3MaJVNjZW5lUGxheUJhdHRsZVNldHRsZVBsYXllckluZm8ucHJvdG8a",
            "JVNjZW5lUGxheUJhdHRsZVNldHRsZVJld2FyZEluZm8ucHJvdG8ihgIKG1Nj",
            "ZW5lUGxheUJhdHRsZVJlc3VsdE5vdGlmeRIRCgljb3N0X3RpbWUYBiABKA0S",
            "DgoGaXNfd2luGA8gASgIEg8KB3BsYXlfaWQYCCABKA0SEQoJcGxheV90eXBl",
            "GAQgASgNEk8KF3NldHRsZV9wbGF5ZXJfaW5mb19saXN0GA4gAygLMi4ubWlI",
            "b21vLlByb3Rvcy5TY2VuZVBsYXlCYXR0bGVTZXR0bGVQbGF5ZXJJbmZvEk8K",
            "F3NldHRsZV9yZXdhcmRfaW5mb19saXN0GAogAygLMi4ubWlIb21vLlByb3Rv",
            "cy5TY2VuZVBsYXlCYXR0bGVTZXR0bGVSZXdhcmRJbmZvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.ScenePlayBattleSettlePlayerInfoReflection.Descriptor, global::MiHomo.Protos.ScenePlayBattleSettleRewardInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.ScenePlayBattleResultNotify), global::MiHomo.Protos.ScenePlayBattleResultNotify.Parser, new[]{ "CostTime", "IsWin", "PlayId", "PlayType", "SettlePlayerInfoList", "SettleRewardInfoList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ScenePlayBattleResultNotify : pb::IMessage<ScenePlayBattleResultNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScenePlayBattleResultNotify> _parser = new pb::MessageParser<ScenePlayBattleResultNotify>(() => new ScenePlayBattleResultNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScenePlayBattleResultNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.ScenePlayBattleResultNotifyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScenePlayBattleResultNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScenePlayBattleResultNotify(ScenePlayBattleResultNotify other) : this() {
      costTime_ = other.costTime_;
      isWin_ = other.isWin_;
      playId_ = other.playId_;
      playType_ = other.playType_;
      settlePlayerInfoList_ = other.settlePlayerInfoList_.Clone();
      settleRewardInfoList_ = other.settleRewardInfoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScenePlayBattleResultNotify Clone() {
      return new ScenePlayBattleResultNotify(this);
    }

    /// <summary>Field number for the "cost_time" field.</summary>
    public const int CostTimeFieldNumber = 6;
    private uint costTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CostTime {
      get { return costTime_; }
      set {
        costTime_ = value;
      }
    }

    /// <summary>Field number for the "is_win" field.</summary>
    public const int IsWinFieldNumber = 15;
    private bool isWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsWin {
      get { return isWin_; }
      set {
        isWin_ = value;
      }
    }

    /// <summary>Field number for the "play_id" field.</summary>
    public const int PlayIdFieldNumber = 8;
    private uint playId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayId {
      get { return playId_; }
      set {
        playId_ = value;
      }
    }

    /// <summary>Field number for the "play_type" field.</summary>
    public const int PlayTypeFieldNumber = 4;
    private uint playType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayType {
      get { return playType_; }
      set {
        playType_ = value;
      }
    }

    /// <summary>Field number for the "settle_player_info_list" field.</summary>
    public const int SettlePlayerInfoListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.ScenePlayBattleSettlePlayerInfo> _repeated_settlePlayerInfoList_codec
        = pb::FieldCodec.ForMessage(114, global::MiHomo.Protos.ScenePlayBattleSettlePlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.ScenePlayBattleSettlePlayerInfo> settlePlayerInfoList_ = new pbc::RepeatedField<global::MiHomo.Protos.ScenePlayBattleSettlePlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.ScenePlayBattleSettlePlayerInfo> SettlePlayerInfoList {
      get { return settlePlayerInfoList_; }
    }

    /// <summary>Field number for the "settle_reward_info_list" field.</summary>
    public const int SettleRewardInfoListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.ScenePlayBattleSettleRewardInfo> _repeated_settleRewardInfoList_codec
        = pb::FieldCodec.ForMessage(82, global::MiHomo.Protos.ScenePlayBattleSettleRewardInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.ScenePlayBattleSettleRewardInfo> settleRewardInfoList_ = new pbc::RepeatedField<global::MiHomo.Protos.ScenePlayBattleSettleRewardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.ScenePlayBattleSettleRewardInfo> SettleRewardInfoList {
      get { return settleRewardInfoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScenePlayBattleResultNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScenePlayBattleResultNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostTime != other.CostTime) return false;
      if (IsWin != other.IsWin) return false;
      if (PlayId != other.PlayId) return false;
      if (PlayType != other.PlayType) return false;
      if(!settlePlayerInfoList_.Equals(other.settlePlayerInfoList_)) return false;
      if(!settleRewardInfoList_.Equals(other.settleRewardInfoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CostTime != 0) hash ^= CostTime.GetHashCode();
      if (IsWin != false) hash ^= IsWin.GetHashCode();
      if (PlayId != 0) hash ^= PlayId.GetHashCode();
      if (PlayType != 0) hash ^= PlayType.GetHashCode();
      hash ^= settlePlayerInfoList_.GetHashCode();
      hash ^= settleRewardInfoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PlayType);
      }
      if (CostTime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CostTime);
      }
      if (PlayId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PlayId);
      }
      settleRewardInfoList_.WriteTo(output, _repeated_settleRewardInfoList_codec);
      settlePlayerInfoList_.WriteTo(output, _repeated_settlePlayerInfoList_codec);
      if (IsWin != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PlayType);
      }
      if (CostTime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CostTime);
      }
      if (PlayId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PlayId);
      }
      settleRewardInfoList_.WriteTo(ref output, _repeated_settleRewardInfoList_codec);
      settlePlayerInfoList_.WriteTo(ref output, _repeated_settlePlayerInfoList_codec);
      if (IsWin != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CostTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CostTime);
      }
      if (IsWin != false) {
        size += 1 + 1;
      }
      if (PlayId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayId);
      }
      if (PlayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayType);
      }
      size += settlePlayerInfoList_.CalculateSize(_repeated_settlePlayerInfoList_codec);
      size += settleRewardInfoList_.CalculateSize(_repeated_settleRewardInfoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScenePlayBattleResultNotify other) {
      if (other == null) {
        return;
      }
      if (other.CostTime != 0) {
        CostTime = other.CostTime;
      }
      if (other.IsWin != false) {
        IsWin = other.IsWin;
      }
      if (other.PlayId != 0) {
        PlayId = other.PlayId;
      }
      if (other.PlayType != 0) {
        PlayType = other.PlayType;
      }
      settlePlayerInfoList_.Add(other.settlePlayerInfoList_);
      settleRewardInfoList_.Add(other.settleRewardInfoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            PlayType = input.ReadUInt32();
            break;
          }
          case 48: {
            CostTime = input.ReadUInt32();
            break;
          }
          case 64: {
            PlayId = input.ReadUInt32();
            break;
          }
          case 82: {
            settleRewardInfoList_.AddEntriesFrom(input, _repeated_settleRewardInfoList_codec);
            break;
          }
          case 114: {
            settlePlayerInfoList_.AddEntriesFrom(input, _repeated_settlePlayerInfoList_codec);
            break;
          }
          case 120: {
            IsWin = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 32: {
            PlayType = input.ReadUInt32();
            break;
          }
          case 48: {
            CostTime = input.ReadUInt32();
            break;
          }
          case 64: {
            PlayId = input.ReadUInt32();
            break;
          }
          case 82: {
            settleRewardInfoList_.AddEntriesFrom(ref input, _repeated_settleRewardInfoList_codec);
            break;
          }
          case 114: {
            settlePlayerInfoList_.AddEntriesFrom(ref input, _repeated_settlePlayerInfoList_codec);
            break;
          }
          case 120: {
            IsWin = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
