// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DungeonEntryInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from DungeonEntryInfo.proto</summary>
  public static partial class DungeonEntryInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for DungeonEntryInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DungeonEntryInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZEdW5nZW9uRW50cnlJbmZvLnByb3RvEg1taUhvbW8uUHJvdG9zGiFXZWVr",
            "bHlCb3NzUmVzaW5EaXNjb3VudEluZm8ucHJvdG8ipQIKEER1bmdlb25FbnRy",
            "eUluZm8SEgoKZHVuZ2Vvbl9pZBgIIAEoDRIQCghlbmRfdGltZRgOIAEoDRIR",
            "Cglpc19wYXNzZWQYDSABKAgSEgoKbGVmdF90aW1lcxgFIAEoDRIaChJtYXhf",
            "Ym9zc19jaGVzdF9udW0YCSABKA0SJAocbmV4dF9ib3NzX2NoZXN0X3JlZnJl",
            "c2hfdGltZRgDIAEoDRIZChFuZXh0X3JlZnJlc2hfdGltZRgKIAEoDRISCgpz",
            "dGFydF90aW1lGAsgASgNElMKH3dlZWtseV9ib3NzX3Jlc2luX2Rpc2NvdW50",
            "X2luZm8YBiABKAsyKi5taUhvbW8uUHJvdG9zLldlZWtseUJvc3NSZXNpbkRp",
            "c2NvdW50SW5mb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.WeeklyBossResinDiscountInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.DungeonEntryInfo), global::MiHomo.Protos.DungeonEntryInfo.Parser, new[]{ "DungeonId", "EndTime", "IsPassed", "LeftTimes", "MaxBossChestNum", "NextBossChestRefreshTime", "NextRefreshTime", "StartTime", "WeeklyBossResinDiscountInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DungeonEntryInfo : pb::IMessage<DungeonEntryInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DungeonEntryInfo> _parser = new pb::MessageParser<DungeonEntryInfo>(() => new DungeonEntryInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DungeonEntryInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.DungeonEntryInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DungeonEntryInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DungeonEntryInfo(DungeonEntryInfo other) : this() {
      dungeonId_ = other.dungeonId_;
      endTime_ = other.endTime_;
      isPassed_ = other.isPassed_;
      leftTimes_ = other.leftTimes_;
      maxBossChestNum_ = other.maxBossChestNum_;
      nextBossChestRefreshTime_ = other.nextBossChestRefreshTime_;
      nextRefreshTime_ = other.nextRefreshTime_;
      startTime_ = other.startTime_;
      weeklyBossResinDiscountInfo_ = other.weeklyBossResinDiscountInfo_ != null ? other.weeklyBossResinDiscountInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DungeonEntryInfo Clone() {
      return new DungeonEntryInfo(this);
    }

    /// <summary>Field number for the "dungeon_id" field.</summary>
    public const int DungeonIdFieldNumber = 8;
    private uint dungeonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DungeonId {
      get { return dungeonId_; }
      set {
        dungeonId_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 14;
    private uint endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "is_passed" field.</summary>
    public const int IsPassedFieldNumber = 13;
    private bool isPassed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPassed {
      get { return isPassed_; }
      set {
        isPassed_ = value;
      }
    }

    /// <summary>Field number for the "left_times" field.</summary>
    public const int LeftTimesFieldNumber = 5;
    private uint leftTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LeftTimes {
      get { return leftTimes_; }
      set {
        leftTimes_ = value;
      }
    }

    /// <summary>Field number for the "max_boss_chest_num" field.</summary>
    public const int MaxBossChestNumFieldNumber = 9;
    private uint maxBossChestNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxBossChestNum {
      get { return maxBossChestNum_; }
      set {
        maxBossChestNum_ = value;
      }
    }

    /// <summary>Field number for the "next_boss_chest_refresh_time" field.</summary>
    public const int NextBossChestRefreshTimeFieldNumber = 3;
    private uint nextBossChestRefreshTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextBossChestRefreshTime {
      get { return nextBossChestRefreshTime_; }
      set {
        nextBossChestRefreshTime_ = value;
      }
    }

    /// <summary>Field number for the "next_refresh_time" field.</summary>
    public const int NextRefreshTimeFieldNumber = 10;
    private uint nextRefreshTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextRefreshTime {
      get { return nextRefreshTime_; }
      set {
        nextRefreshTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 11;
    private uint startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "weekly_boss_resin_discount_info" field.</summary>
    public const int WeeklyBossResinDiscountInfoFieldNumber = 6;
    private global::MiHomo.Protos.WeeklyBossResinDiscountInfo weeklyBossResinDiscountInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.WeeklyBossResinDiscountInfo WeeklyBossResinDiscountInfo {
      get { return weeklyBossResinDiscountInfo_; }
      set {
        weeklyBossResinDiscountInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DungeonEntryInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DungeonEntryInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DungeonId != other.DungeonId) return false;
      if (EndTime != other.EndTime) return false;
      if (IsPassed != other.IsPassed) return false;
      if (LeftTimes != other.LeftTimes) return false;
      if (MaxBossChestNum != other.MaxBossChestNum) return false;
      if (NextBossChestRefreshTime != other.NextBossChestRefreshTime) return false;
      if (NextRefreshTime != other.NextRefreshTime) return false;
      if (StartTime != other.StartTime) return false;
      if (!object.Equals(WeeklyBossResinDiscountInfo, other.WeeklyBossResinDiscountInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DungeonId != 0) hash ^= DungeonId.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (IsPassed != false) hash ^= IsPassed.GetHashCode();
      if (LeftTimes != 0) hash ^= LeftTimes.GetHashCode();
      if (MaxBossChestNum != 0) hash ^= MaxBossChestNum.GetHashCode();
      if (NextBossChestRefreshTime != 0) hash ^= NextBossChestRefreshTime.GetHashCode();
      if (NextRefreshTime != 0) hash ^= NextRefreshTime.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (weeklyBossResinDiscountInfo_ != null) hash ^= WeeklyBossResinDiscountInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NextBossChestRefreshTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NextBossChestRefreshTime);
      }
      if (LeftTimes != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LeftTimes);
      }
      if (weeklyBossResinDiscountInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WeeklyBossResinDiscountInfo);
      }
      if (DungeonId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(DungeonId);
      }
      if (MaxBossChestNum != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MaxBossChestNum);
      }
      if (NextRefreshTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(NextRefreshTime);
      }
      if (StartTime != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(StartTime);
      }
      if (IsPassed != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsPassed);
      }
      if (EndTime != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NextBossChestRefreshTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NextBossChestRefreshTime);
      }
      if (LeftTimes != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LeftTimes);
      }
      if (weeklyBossResinDiscountInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WeeklyBossResinDiscountInfo);
      }
      if (DungeonId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(DungeonId);
      }
      if (MaxBossChestNum != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MaxBossChestNum);
      }
      if (NextRefreshTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(NextRefreshTime);
      }
      if (StartTime != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(StartTime);
      }
      if (IsPassed != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsPassed);
      }
      if (EndTime != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DungeonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DungeonId);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndTime);
      }
      if (IsPassed != false) {
        size += 1 + 1;
      }
      if (LeftTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeftTimes);
      }
      if (MaxBossChestNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxBossChestNum);
      }
      if (NextBossChestRefreshTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextBossChestRefreshTime);
      }
      if (NextRefreshTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextRefreshTime);
      }
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartTime);
      }
      if (weeklyBossResinDiscountInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeeklyBossResinDiscountInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DungeonEntryInfo other) {
      if (other == null) {
        return;
      }
      if (other.DungeonId != 0) {
        DungeonId = other.DungeonId;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      if (other.IsPassed != false) {
        IsPassed = other.IsPassed;
      }
      if (other.LeftTimes != 0) {
        LeftTimes = other.LeftTimes;
      }
      if (other.MaxBossChestNum != 0) {
        MaxBossChestNum = other.MaxBossChestNum;
      }
      if (other.NextBossChestRefreshTime != 0) {
        NextBossChestRefreshTime = other.NextBossChestRefreshTime;
      }
      if (other.NextRefreshTime != 0) {
        NextRefreshTime = other.NextRefreshTime;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.weeklyBossResinDiscountInfo_ != null) {
        if (weeklyBossResinDiscountInfo_ == null) {
          WeeklyBossResinDiscountInfo = new global::MiHomo.Protos.WeeklyBossResinDiscountInfo();
        }
        WeeklyBossResinDiscountInfo.MergeFrom(other.WeeklyBossResinDiscountInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            NextBossChestRefreshTime = input.ReadUInt32();
            break;
          }
          case 40: {
            LeftTimes = input.ReadUInt32();
            break;
          }
          case 50: {
            if (weeklyBossResinDiscountInfo_ == null) {
              WeeklyBossResinDiscountInfo = new global::MiHomo.Protos.WeeklyBossResinDiscountInfo();
            }
            input.ReadMessage(WeeklyBossResinDiscountInfo);
            break;
          }
          case 64: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 72: {
            MaxBossChestNum = input.ReadUInt32();
            break;
          }
          case 80: {
            NextRefreshTime = input.ReadUInt32();
            break;
          }
          case 88: {
            StartTime = input.ReadUInt32();
            break;
          }
          case 104: {
            IsPassed = input.ReadBool();
            break;
          }
          case 112: {
            EndTime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            NextBossChestRefreshTime = input.ReadUInt32();
            break;
          }
          case 40: {
            LeftTimes = input.ReadUInt32();
            break;
          }
          case 50: {
            if (weeklyBossResinDiscountInfo_ == null) {
              WeeklyBossResinDiscountInfo = new global::MiHomo.Protos.WeeklyBossResinDiscountInfo();
            }
            input.ReadMessage(WeeklyBossResinDiscountInfo);
            break;
          }
          case 64: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 72: {
            MaxBossChestNum = input.ReadUInt32();
            break;
          }
          case 80: {
            NextRefreshTime = input.ReadUInt32();
            break;
          }
          case 88: {
            StartTime = input.ReadUInt32();
            break;
          }
          case 104: {
            IsPassed = input.ReadBool();
            break;
          }
          case 112: {
            EndTime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
