// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MistTrialLevelData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from MistTrialLevelData.proto</summary>
  public static partial class MistTrialLevelDataReflection {

    #region Descriptor
    /// <summary>File descriptor for MistTrialLevelData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MistTrialLevelDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhNaXN0VHJpYWxMZXZlbERhdGEucHJvdG8SDW1pSG9tby5Qcm90b3MaGU1p",
            "c3RUcmlhbEJlc3RBdmF0YXIucHJvdG8i3gEKEk1pc3RUcmlhbExldmVsRGF0",
            "YRI8ChBiZXN0X2F2YXRhcl9saXN0GAMgAygLMiIubWlIb21vLlByb3Rvcy5N",
            "aXN0VHJpYWxCZXN0QXZhdGFyEjsKD2Jlc3RfaGl0X2F2YXRhchgLIAEoCzIi",
            "Lm1pSG9tby5Qcm90b3MuTWlzdFRyaWFsQmVzdEF2YXRhchIXCg9maXJzdF9w",
            "YXNzX3RpbWUYASABKA0SDwoHaXNfb3BlbhgJIAEoCBIQCghsZXZlbF9pZBgO",
            "IAEoDRIRCglvcGVuX3RpbWUYCiABKA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.MistTrialBestAvatarReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.MistTrialLevelData), global::MiHomo.Protos.MistTrialLevelData.Parser, new[]{ "BestAvatarList", "BestHitAvatar", "FirstPassTime", "IsOpen", "LevelId", "OpenTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MistTrialLevelData : pb::IMessage<MistTrialLevelData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MistTrialLevelData> _parser = new pb::MessageParser<MistTrialLevelData>(() => new MistTrialLevelData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MistTrialLevelData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.MistTrialLevelDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MistTrialLevelData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MistTrialLevelData(MistTrialLevelData other) : this() {
      bestAvatarList_ = other.bestAvatarList_.Clone();
      bestHitAvatar_ = other.bestHitAvatar_ != null ? other.bestHitAvatar_.Clone() : null;
      firstPassTime_ = other.firstPassTime_;
      isOpen_ = other.isOpen_;
      levelId_ = other.levelId_;
      openTime_ = other.openTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MistTrialLevelData Clone() {
      return new MistTrialLevelData(this);
    }

    /// <summary>Field number for the "best_avatar_list" field.</summary>
    public const int BestAvatarListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.MistTrialBestAvatar> _repeated_bestAvatarList_codec
        = pb::FieldCodec.ForMessage(26, global::MiHomo.Protos.MistTrialBestAvatar.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.MistTrialBestAvatar> bestAvatarList_ = new pbc::RepeatedField<global::MiHomo.Protos.MistTrialBestAvatar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.MistTrialBestAvatar> BestAvatarList {
      get { return bestAvatarList_; }
    }

    /// <summary>Field number for the "best_hit_avatar" field.</summary>
    public const int BestHitAvatarFieldNumber = 11;
    private global::MiHomo.Protos.MistTrialBestAvatar bestHitAvatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MistTrialBestAvatar BestHitAvatar {
      get { return bestHitAvatar_; }
      set {
        bestHitAvatar_ = value;
      }
    }

    /// <summary>Field number for the "first_pass_time" field.</summary>
    public const int FirstPassTimeFieldNumber = 1;
    private uint firstPassTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FirstPassTime {
      get { return firstPassTime_; }
      set {
        firstPassTime_ = value;
      }
    }

    /// <summary>Field number for the "is_open" field.</summary>
    public const int IsOpenFieldNumber = 9;
    private bool isOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    /// <summary>Field number for the "level_id" field.</summary>
    public const int LevelIdFieldNumber = 14;
    private uint levelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LevelId {
      get { return levelId_; }
      set {
        levelId_ = value;
      }
    }

    /// <summary>Field number for the "open_time" field.</summary>
    public const int OpenTimeFieldNumber = 10;
    private uint openTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OpenTime {
      get { return openTime_; }
      set {
        openTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MistTrialLevelData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MistTrialLevelData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bestAvatarList_.Equals(other.bestAvatarList_)) return false;
      if (!object.Equals(BestHitAvatar, other.BestHitAvatar)) return false;
      if (FirstPassTime != other.FirstPassTime) return false;
      if (IsOpen != other.IsOpen) return false;
      if (LevelId != other.LevelId) return false;
      if (OpenTime != other.OpenTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bestAvatarList_.GetHashCode();
      if (bestHitAvatar_ != null) hash ^= BestHitAvatar.GetHashCode();
      if (FirstPassTime != 0) hash ^= FirstPassTime.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (LevelId != 0) hash ^= LevelId.GetHashCode();
      if (OpenTime != 0) hash ^= OpenTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FirstPassTime != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FirstPassTime);
      }
      bestAvatarList_.WriteTo(output, _repeated_bestAvatarList_codec);
      if (IsOpen != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsOpen);
      }
      if (OpenTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(OpenTime);
      }
      if (bestHitAvatar_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(BestHitAvatar);
      }
      if (LevelId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(LevelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FirstPassTime != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FirstPassTime);
      }
      bestAvatarList_.WriteTo(ref output, _repeated_bestAvatarList_codec);
      if (IsOpen != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsOpen);
      }
      if (OpenTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(OpenTime);
      }
      if (bestHitAvatar_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(BestHitAvatar);
      }
      if (LevelId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(LevelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += bestAvatarList_.CalculateSize(_repeated_bestAvatarList_codec);
      if (bestHitAvatar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BestHitAvatar);
      }
      if (FirstPassTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstPassTime);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (LevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelId);
      }
      if (OpenTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OpenTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MistTrialLevelData other) {
      if (other == null) {
        return;
      }
      bestAvatarList_.Add(other.bestAvatarList_);
      if (other.bestHitAvatar_ != null) {
        if (bestHitAvatar_ == null) {
          BestHitAvatar = new global::MiHomo.Protos.MistTrialBestAvatar();
        }
        BestHitAvatar.MergeFrom(other.BestHitAvatar);
      }
      if (other.FirstPassTime != 0) {
        FirstPassTime = other.FirstPassTime;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      if (other.LevelId != 0) {
        LevelId = other.LevelId;
      }
      if (other.OpenTime != 0) {
        OpenTime = other.OpenTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FirstPassTime = input.ReadUInt32();
            break;
          }
          case 26: {
            bestAvatarList_.AddEntriesFrom(input, _repeated_bestAvatarList_codec);
            break;
          }
          case 72: {
            IsOpen = input.ReadBool();
            break;
          }
          case 80: {
            OpenTime = input.ReadUInt32();
            break;
          }
          case 90: {
            if (bestHitAvatar_ == null) {
              BestHitAvatar = new global::MiHomo.Protos.MistTrialBestAvatar();
            }
            input.ReadMessage(BestHitAvatar);
            break;
          }
          case 112: {
            LevelId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FirstPassTime = input.ReadUInt32();
            break;
          }
          case 26: {
            bestAvatarList_.AddEntriesFrom(ref input, _repeated_bestAvatarList_codec);
            break;
          }
          case 72: {
            IsOpen = input.ReadBool();
            break;
          }
          case 80: {
            OpenTime = input.ReadUInt32();
            break;
          }
          case 90: {
            if (bestHitAvatar_ == null) {
              BestHitAvatar = new global::MiHomo.Protos.MistTrialBestAvatar();
            }
            input.ReadMessage(BestHitAvatar);
            break;
          }
          case 112: {
            LevelId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
