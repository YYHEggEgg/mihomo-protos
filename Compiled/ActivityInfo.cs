// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ActivityInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from ActivityInfo.proto</summary>
  public static partial class ActivityInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ActivityInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ActivityInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJBY3Rpdml0eUluZm8ucHJvdG8SDW1pSG9tby5Qcm90b3MaGkFjdGl2aXR5",
            "UHVzaFRpcHNEYXRhLnByb3RvGhlBY3Rpdml0eVdhdGNoZXJJbmZvLnByb3Rv",
            "GiZBcmVuYUNoYWxsZW5nZUFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxodQXN0",
            "ZXJBY3Rpdml0eURldGFpbEluZm8ucHJvdG8aIUJhcnRlbmRlckFjdGl2aXR5",
            "RGV0YWlsSW5mby5wcm90bxogQmxlc3NpbmdBY3Rpdml0eURldGFpbEluZm8u",
            "cHJvdG8aIUJsaXR6UnVzaEFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxonQm91",
            "bmNlQ29uanVyaW5nQWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGhxCcmlja0Jy",
            "ZWFrZXJEZXRhaWxJbmZvLnByb3RvGh1CdW95YW50Q29tYmF0RGV0YWlsSW5m",
            "by5wcm90bxolQ2hhbm5lbGVyU2xhYkFjdGl2aXR5RGV0YWlsSW5mby5wcm90",
            "bxodQ2hhckFtdXNlbWVudERldGFpbEluZm8ucHJvdG8aHUNoZXNzQWN0aXZp",
            "dHlEZXRhaWxJbmZvLnByb3RvGhtDb2luQ29sbGVjdERldGFpbEluZm8ucHJv",
            "dG8aIENydWNpYmxlQWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGiNDcnlzdGFs",
            "TGlua0FjdGl2aXR5RGV0YWlsSW5mby5wcm90bxogRGVsaXZlcnlBY3Rpdml0",
            "eURldGFpbEluZm8ucHJvdG8aG0RpZ0FjdGl2aXR5RGV0YWlsSW5mby5wcm90",
            "bxojRHJhZ29uU3BpbmVBY3Rpdml0eURldGFpbEluZm8ucHJvdG8aGUR1ZWxI",
            "ZWFydERldGFpbEluZm8ucHJvdG8aGUVjaG9TaGVsbERldGFpbEluZm8ucHJv",
            "dG8aHkVmZmlneUFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxohRWZmaWd5Q2hh",
            "bGxlbmdlVjJEZXRhaWxJbmZvLnByb3RvGiVFbGVjdHJvaGVyY3VsZXNCYXR0",
            "bGVEZXRhaWxJbmZvLnByb3RvGiJFeHBlZGl0aW9uQWN0aXZpdHlEZXRhaWxJ",
            "bmZvLnByb3RvGh1GaW5kSGlsaWNodXJsRGV0YWlsSW5mby5wcm90bxohRmxl",
            "dXJGYWlyQWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGh5GbGlnaHRBY3Rpdml0",
            "eURldGFpbEluZm8ucHJvdG8aHUZ1bmd1c0ZpZ2h0ZXJEZXRhaWxJbmZvLnBy",
            "b3RvGh1HYWNoYUFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxocR2VhckFjdGl2",
            "aXR5RGV0YWlsSW5mby5wcm90bxofR3JhdmVuSW5ub2NlbmNlRGV0YWlsSW5m",
            "by5wcm90bxodSGFjaGlBY3Rpdml0eURldGFpbEluZm8ucHJvdG8aI0hpZGVB",
            "bmRTZWVrQWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGh1JbnN0YWJsZVNwcmF5",
            "RGV0YWlsSW5mby5wcm90bxofSXJvZG9yaUFjdGl2aXR5RGV0YWlsSW5mby5w",
            "cm90bxobSXNsYW5kUGFydHlEZXRhaWxJbmZvLnByb3RvGiNMYW50ZXJuUml0",
            "ZUFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxovTHVtaW5hbmNlU3RvbmVDaGFs",
            "bGVuZ2VBY3Rpdml0eURldGFpbEluZm8ucHJvdG8aGEx1bmFSaXRlRGV0YWls",
            "SW5mby5wcm90bxomTWljaGlhZU1hdHN1cmlBY3Rpdml0eURldGFpbEluZm8u",
            "cHJvdG8aIU1pc3RUcmlhbEFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxokTW9v",
            "bmZpblRyaWFsQWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGiVNdXFhZGFzUG90",
            "aW9uQWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGiFNdXNpY0dhbWVBY3Rpdml0",
            "eURldGFpbEluZm8ucHJvdG8aHVBob3RvQWN0aXZpdHlEZXRhaWxJbmZvLnBy",
            "b3RvGiNQbGFudEZsb3dlckFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxoeUG90",
            "aW9uQWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGiBSb2NrQm9hcmRFeHBsb3Jl",
            "RGV0YWlsSW5mby5wcm90bxoiUm9ndWVEaWFyeUFjdGl2aXR5RGV0YWlsSW5m",
            "by5wcm90bxooUm9ndWVsaWtlRHVuZ2VvbkFjdGl2aXR5RGV0YWlsSW5mby5w",
            "cm90bxogU2FsZXNtYW5BY3Rpdml0eURldGFpbEluZm8ucHJvdG8aH1NlYUxh",
            "bXBBY3Rpdml0eURldGFpbEluZm8ucHJvdG8aGVNlYUxhbXBBY3Rpdml0eUlu",
            "Zm8ucHJvdG8aGVNlYUxhbXBWM0RldGFpbEluZm8ucHJvdG8aHVNwaWNlQWN0",
            "aXZpdHlEZXRhaWxJbmZvLnByb3RvGhpTdW1tZXJUaW1lRGV0YWlsSW5mby5w",
            "cm90bxocU3VtbWVyVGltZVYyRGV0YWlsSW5mby5wcm90bxocU3Vtb0FjdGl2",
            "aXR5RGV0YWlsSW5mby5wcm90bxokVGFudWtpVHJhdmVsQWN0aXZpdHlEZXRh",
            "aWxJbmZvLnByb3RvGhlUZWFtQ2hhaW5EZXRhaWxJbmZvLnByb3RvGiNUcmVh",
            "c3VyZU1hcEFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxomVHJlYXN1cmVTZWVs",
            "aWVBY3Rpdml0eURldGFpbEluZm8ucHJvdG8aI1RyaWFsQXZhdGFyQWN0aXZp",
            "dHlEZXRhaWxJbmZvLnByb3RvGhtVZ2NBY3Rpdml0eURldGFpbEluZm8ucHJv",
            "dG8aH1ZpbnRhZ2VBY3Rpdml0eURldGFpbEluZm8ucHJvdG8aI1dhdGVyU3Bp",
            "cml0QWN0aXZpdHlEZXRhaWxJbmZvLnByb3RvGhlXaW5kRmllbGREZXRhaWxJ",
            "bmZvLnByb3RvGiJXaW50ZXJDYW1wQWN0aXZpdHlEZXRhaWxJbmZvLnByb3Rv",
            "IsMsCgxBY3Rpdml0eUluZm8SEwoLYWN0aXZpdHlfaWQYDCABKA0SSgocYWN0",
            "aXZpdHlfcHVzaF90aXBzX2RhdGFfbGlzdBjgBiADKAsyIy5taUhvbW8uUHJv",
            "dG9zLkFjdGl2aXR5UHVzaFRpcHNEYXRhEhUKDWFjdGl2aXR5X3R5cGUYBCAB",
            "KA0SEgoKYmVnaW5fdGltZRgIIAEoDRISCgljdXJfc2NvcmUY8g4gASgNEhAK",
            "CGVuZF90aW1lGAUgASgNEhgKEGV4cGlyZV9jb25kX2xpc3QYAyADKA0SHQoU",
            "Zmlyc3RfZGF5X3N0YXJ0X3RpbWUY0AQgASgNEhkKEWlzX2Jhbm5lcl9jbGVh",
            "cmVkGGYgASgIEiEKGGlzX2NvbW1vbl9jb250ZW50X2Nsb3NlZBirDyABKAgS",
            "EwoLaXNfZmluaXNoZWQYBiABKAgSEgoJaXNfaGlkZGVuGJcHIAEoCBIZChFp",
            "c19wbGF5X29wZW5fYW5pbRgNIAEoCBIWCg1pc19xdWlja19vcGVuGKkLIAEo",
            "CBITCgtpc19zdGFydGluZxgJIAEoCBIWCg5tZWV0X2NvbmRfbGlzdBgKIAMo",
            "DRITCgtzY2hlZHVsZV9pZBgPIAEoDRIUCgtzY29yZV9saW1pdBimDyABKA0S",
            "IgoZc2VsZWN0ZWRfYXZhdGFyX3Jld2FyZF9pZBiKCiABKA0SGgoRdGFrZW5f",
            "cmV3YXJkX2xpc3QYyQIgAygNEj0KEXdhdGNoZXJfaW5mb19saXN0GAIgAygL",
            "MiIubWlIb21vLlByb3Rvcy5BY3Rpdml0eVdhdGNoZXJJbmZvEkwKEWFjdGl2",
            "aXR5X2NvaW5fbWFwGKoFIAMoCzIwLm1pSG9tby5Qcm90b3MuQWN0aXZpdHlJ",
            "bmZvLkFjdGl2aXR5Q29pbk1hcEVudHJ5EksKEXdpc2hfZ2lmdF9udW1fbWFw",
            "GPcKIAMoCzIvLm1pSG9tby5Qcm90b3MuQWN0aXZpdHlJbmZvLldpc2hHaWZ0",
            "TnVtTWFwRW50cnkSUAoUYXJlbmFfY2hhbGxlbmdlX2luZm8Y2wYgASgLMi8u",
            "bWlIb21vLlByb3Rvcy5BcmVuYUNoYWxsZW5nZUFjdGl2aXR5RGV0YWlsSW5m",
            "b0gAEj0KCmFzdGVyX2luZm8YrQQgASgLMiYubWlIb21vLlByb3Rvcy5Bc3Rl",
            "ckFjdGl2aXR5RGV0YWlsSW5mb0gAEkUKDmJhcnRlbmRlcl9pbmZvGL0NIAEo",
            "CzIqLm1pSG9tby5Qcm90b3MuQmFydGVuZGVyQWN0aXZpdHlEZXRhaWxJbmZv",
            "SAASQwoNYmxlc3NpbmdfaW5mbxjNDiABKAsyKS5taUhvbW8uUHJvdG9zLkJs",
            "ZXNzaW5nQWN0aXZpdHlEZXRhaWxJbmZvSAASRgoPYmxpdHpfcnVzaF9pbmZv",
            "GJoGIAEoCzIqLm1pSG9tby5Qcm90b3MuQmxpdHpSdXNoQWN0aXZpdHlEZXRh",
            "aWxJbmZvSAASUgoVYm91bmNlX2Nvbmp1cmluZ19pbmZvGP8FIAEoCzIwLm1p",
            "SG9tby5Qcm90b3MuQm91bmNlQ29uanVyaW5nQWN0aXZpdHlEZXRhaWxJbmZv",
            "SAASRAoSYnJpY2tfYnJlYWtlcl9pbmZvGNkKIAEoCzIlLm1pSG9tby5Qcm90",
            "b3MuQnJpY2tCcmVha2VyRGV0YWlsSW5mb0gAEkYKE2J1b3lhbnRfY29tYmF0",
            "X2luZm8Ysg4gASgLMiYubWlIb21vLlByb3Rvcy5CdW95YW50Q29tYmF0RGV0",
            "YWlsSW5mb0gAEk8KFGNoYWxsbmVsZXJfc2xhYl9pbmZvGPcHIAEoCzIuLm1p",
            "SG9tby5Qcm90b3MuQ2hhbm5lbGVyU2xhYkFjdGl2aXR5RGV0YWlsSW5mb0gA",
            "EkYKE2NoYXJfYW11c2VtZW50X2luZm8Y2AsgASgLMiYubWlIb21vLlByb3Rv",
            "cy5DaGFyQW11c2VtZW50RGV0YWlsSW5mb0gAEj0KCmNoZXNzX2luZm8Ynwcg",
            "ASgLMiYubWlIb21vLlByb3Rvcy5DaGVzc0FjdGl2aXR5RGV0YWlsSW5mb0gA",
            "EkIKEWNvaW5fY29sbGVjdF9pbmZvGI8NIAEoCzIkLm1pSG9tby5Qcm90b3Mu",
            "Q29pbkNvbGxlY3REZXRhaWxJbmZvSAASQgoNY3J1Y2libGVfaW5mbxgOIAEo",
            "CzIpLm1pSG9tby5Qcm90b3MuQ3J1Y2libGVBY3Rpdml0eURldGFpbEluZm9I",
            "ABJKChFjcnlzdGFsX2xpbmtfaW5mbxjKCSABKAsyLC5taUhvbW8uUHJvdG9z",
            "LkNyeXN0YWxMaW5rQWN0aXZpdHlEZXRhaWxJbmZvSAASQwoNZGVsaXZlcnlf",
            "aW5mbxjECCABKAsyKS5taUhvbW8uUHJvdG9zLkRlbGl2ZXJ5QWN0aXZpdHlE",
            "ZXRhaWxJbmZvSAASOQoIZGlnX2luZm8YkwMgASgLMiQubWlIb21vLlByb3Rv",
            "cy5EaWdBY3Rpdml0eURldGFpbEluZm9IABJKChFkcmFnb25fc3BpbmVfaW5m",
            "bxi/DSABKAsyLC5taUhvbW8uUHJvdG9zLkRyYWdvblNwaW5lQWN0aXZpdHlE",
            "ZXRhaWxJbmZvSAASPgoPZHVlbF9oZWFydF9pbmZvGJUJIAEoCzIiLm1pSG9t",
            "by5Qcm90b3MuRHVlbEhlYXJ0RGV0YWlsSW5mb0gAEj4KD2VjaG9fc2hlbGxf",
            "aW5mbxjZCCABKAsyIi5taUhvbW8uUHJvdG9zLkVjaG9TaGVsbERldGFpbElu",
            "Zm9IABJMChVlZmZpZ3lfY2hhbGxlbmdlX2luZm8YgQggASgLMioubWlIb21v",
            "LlByb3Rvcy5FZmZpZ3lDaGFsbGVuZ2VWMkRldGFpbEluZm9IABI/CgtlZmZp",
            "Z3lfaW5mbxiHAyABKAsyJy5taUhvbW8uUHJvdG9zLkVmZmlneUFjdGl2aXR5",
            "RGV0YWlsSW5mb0gAElYKG2VsZWN0cm9oZXJjdWxlc19iYXR0bGVfaW5mbxje",
            "DCABKAsyLi5taUhvbW8uUHJvdG9zLkVsZWN0cm9oZXJjdWxlc0JhdHRsZURl",
            "dGFpbEluZm9IABJHCg9leHBlZGl0aW9uX2luZm8YygEgASgLMisubWlIb21v",
            "LlByb3Rvcy5FeHBlZGl0aW9uQWN0aXZpdHlEZXRhaWxJbmZvSAASRgoTZmlu",
            "ZF9oaWxpY2h1cmxfaW5mbxiDCyABKAsyJi5taUhvbW8uUHJvdG9zLkZpbmRI",
            "aWxpY2h1cmxEZXRhaWxJbmZvSAASRgoPZmxldXJfZmFpcl9pbmZvGNkGIAEo",
            "CzIqLm1pSG9tby5Qcm90b3MuRmxldXJGYWlyQWN0aXZpdHlEZXRhaWxJbmZv",
            "SAASPwoLZmxpZ2h0X2luZm8Y1QogASgLMicubWlIb21vLlByb3Rvcy5GbGln",
            "aHRBY3Rpdml0eURldGFpbEluZm9IABJGChNmdW5ndXNfZmlnaHRlcl9pbmZv",
            "GOoDIAEoCzImLm1pSG9tby5Qcm90b3MuRnVuZ3VzRmlnaHRlckRldGFpbElu",
            "Zm9IABI9CgpnYWNoYV9pbmZvGLkGIAEoCzImLm1pSG9tby5Qcm90b3MuR2Fj",
            "aGFBY3Rpdml0eURldGFpbEluZm9IABI7CglnZWFyX2luZm8Y0gUgASgLMiUu",
            "bWlIb21vLlByb3Rvcy5HZWFyQWN0aXZpdHlEZXRhaWxJbmZvSAASSgoVZ3Jh",
            "dmVuX2lubm9jZW5jZV9pbmZvGPcOIAEoCzIoLm1pSG9tby5Qcm90b3MuR3Jh",
            "dmVuSW5ub2NlbmNlRGV0YWlsSW5mb0gAEj0KCmhhY2hpX2luZm8Y6wMgASgL",
            "MiYubWlIb21vLlByb3Rvcy5IYWNoaUFjdGl2aXR5RGV0YWlsSW5mb0gAEksK",
            "EmhpZGVfYW5kX3NlZWtfaW5mbxirAyABKAsyLC5taUhvbW8uUHJvdG9zLkhp",
            "ZGVBbmRTZWVrQWN0aXZpdHlEZXRhaWxJbmZvSAASRgoTaW5zdGFibGVfc3By",
            "YXlfaW5mbxiTCCABKAsyJi5taUhvbW8uUHJvdG9zLkluc3RhYmxlU3ByYXlE",
            "ZXRhaWxJbmZvSAASQQoMaXJvZG9yaV9pbmZvGO4FIAEoCzIoLm1pSG9tby5Q",
            "cm90b3MuSXJvZG9yaUFjdGl2aXR5RGV0YWlsSW5mb0gAEkIKEWlzbGFuZF9w",
            "YXJ0eV9pbmZvGN0OIAEoCzIkLm1pSG9tby5Qcm90b3MuSXNsYW5kUGFydHlE",
            "ZXRhaWxJbmZvSAASUwoabGFudGVybl9yaXRlX2FjdGl2aXR5X2luZm8Y1A4g",
            "ASgLMiwubWlIb21vLlByb3Rvcy5MYW50ZXJuUml0ZUFjdGl2aXR5RGV0YWls",
            "SW5mb0gAEmMKHmx1bWluYW5jZV9zdG9uZV9jaGFsbGVuZ2VfaW5mbxicCiAB",
            "KAsyOC5taUhvbW8uUHJvdG9zLkx1bWluYW5jZVN0b25lQ2hhbGxlbmdlQWN0",
            "aXZpdHlEZXRhaWxJbmZvSAASPAoObHVuYV9yaXRlX2luZm8YrgYgASgLMiEu",
            "bWlIb21vLlByb3Rvcy5MdW5hUml0ZURldGFpbEluZm9IABJQChRtaWNoaWFl",
            "X21hdHN1cmlfaW5mbxjCASABKAsyLy5taUhvbW8uUHJvdG9zLk1pY2hpYWVN",
            "YXRzdXJpQWN0aXZpdHlEZXRhaWxJbmZvSAASTwoYbWlzdF90cmlhbF9hY3Rp",
            "dml0eV9pbmZvGJwBIAEoCzIqLm1pSG9tby5Qcm90b3MuTWlzdFRyaWFsQWN0",
            "aXZpdHlEZXRhaWxJbmZvSAASTAoSbW9vbmZpbl90cmlhbF9pbmZvGLQMIAEo",
            "CzItLm1pSG9tby5Qcm90b3MuTW9vbmZpblRyaWFsQWN0aXZpdHlEZXRhaWxJ",
            "bmZvSAASTgoTbXVxYWRhc19wb3Rpb25faW5mbxiFCSABKAsyLi5taUhvbW8u",
            "UHJvdG9zLk11cWFkYXNQb3Rpb25BY3Rpdml0eURldGFpbEluZm9IABJGCg9t",
            "dXNpY19nYW1lX2luZm8YzAMgASgLMioubWlIb21vLlByb3Rvcy5NdXNpY0dh",
            "bWVBY3Rpdml0eURldGFpbEluZm9IABI9CgpwaG90b19pbmZvGMgCIAEoCzIm",
            "Lm1pSG9tby5Qcm90b3MuUGhvdG9BY3Rpdml0eURldGFpbEluZm9IABJJChFw",
            "bGFudF9mbG93ZXJfaW5mbxg2IAEoCzIsLm1pSG9tby5Qcm90b3MuUGxhbnRG",
            "bG93ZXJBY3Rpdml0eURldGFpbEluZm9IABI/Cgtwb3Rpb25faW5mbxj5CSAB",
            "KAsyJy5taUhvbW8uUHJvdG9zLlBvdGlvbkFjdGl2aXR5RGV0YWlsSW5mb0gA",
            "Ek0KF3JvY2tfYm9hcmRfZXhwbG9yZV9pbmZvGLYIIAEoCzIpLm1pSG9tby5Q",
            "cm90b3MuUm9ja0JvYXJkRXhwbG9yZURldGFpbEluZm9IABJIChByb2d1ZV9k",
            "aWFyeV9pbmZvGKwGIAEoCzIrLm1pSG9tby5Qcm90b3MuUm9ndWVEaWFyeUFj",
            "dGl2aXR5RGV0YWlsSW5mb0gAElQKFnJvZ3VlbGlrZV9kdW5nb2VuX2luZm8Y",
            "2wEgASgLMjEubWlIb21vLlByb3Rvcy5Sb2d1ZWxpa2VEdW5nZW9uQWN0aXZp",
            "dHlEZXRhaWxJbmZvSAASQgoNc2FsZXNtYW5faW5mbxgLIAEoCzIpLm1pSG9t",
            "by5Qcm90b3MuU2FsZXNtYW5BY3Rpdml0eURldGFpbEluZm9IABJBCg1zYW1f",
            "bGFtcF9pbmZvGAcgASgLMigubWlIb21vLlByb3Rvcy5TZWFMYW1wQWN0aXZp",
            "dHlEZXRhaWxJbmZvSAASPAoNc2VhX2xhbXBfaW5mbxjuAyABKAsyIi5taUhv",
            "bW8uUHJvdG9zLlNlYUxhbXBBY3Rpdml0eUluZm9IABI/ChBzZWFfbGFtcF92",
            "M19pbmZvGPsBIAEoCzIiLm1pSG9tby5Qcm90b3MuU2VhTGFtcFYzRGV0YWls",
            "SW5mb0gAEj0KCnNwaWNlX2luZm8Y4w4gASgLMiYubWlIb21vLlByb3Rvcy5T",
            "cGljZUFjdGl2aXR5RGV0YWlsSW5mb0gAEkAKEHN1bW1lcl90aW1lX2luZm8Y",
            "3AogASgLMiMubWlIb21vLlByb3Rvcy5TdW1tZXJUaW1lRGV0YWlsSW5mb0gA",
            "EkUKE3N1bW1lcl90aW1lX3YyX2luZm8Y7gQgASgLMiUubWlIb21vLlByb3Rv",
            "cy5TdW1tZXJUaW1lVjJEZXRhaWxJbmZvSAASOwoJc3Vtb19pbmZvGO0JIAEo",
            "CzIlLm1pSG9tby5Qcm90b3MuU3Vtb0FjdGl2aXR5RGV0YWlsSW5mb0gAElUK",
            "G3RhbnVraV90cmF2ZWxfYWN0aXZpdHlfaW5mbxiEDiABKAsyLS5taUhvbW8u",
            "UHJvdG9zLlRhbnVraVRyYXZlbEFjdGl2aXR5RGV0YWlsSW5mb0gAEj4KD3Rl",
            "YW1fY2hhaW5faW5mbxiLDCABKAsyIi5taUhvbW8uUHJvdG9zLlRlYW1DaGFp",
            "bkRldGFpbEluZm9IABJKChF0cmVhc3VyZV9tYXBfaW5mbxjaCCABKAsyLC5t",
            "aUhvbW8uUHJvdG9zLlRyZWFzdXJlTWFwQWN0aXZpdHlEZXRhaWxJbmZvSAAS",
            "UAoUdHJlYXN1cmVfc2VlbGllX2luZm8YxgcgASgLMi8ubWlIb21vLlByb3Rv",
            "cy5UcmVhc3VyZVNlZWxpZUFjdGl2aXR5RGV0YWlsSW5mb0gAEkkKEXRyaWFs",
            "X2F2YXRhcl9pbmZvGAEgASgLMiwubWlIb21vLlByb3Rvcy5UcmlhbEF2YXRh",
            "ckFjdGl2aXR5RGV0YWlsSW5mb0gAEjkKCHVnY19pbmZvGL8FIAEoCzIkLm1p",
            "SG9tby5Qcm90b3MuVWdjQWN0aXZpdHlEZXRhaWxJbmZvSAASQQoMdmludGFn",
            "ZV9pbmZvGL0DIAEoCzIoLm1pSG9tby5Qcm90b3MuVmludGFnZUFjdGl2aXR5",
            "RGV0YWlsSW5mb0gAEkoKEXdhdGVyX3NwaXJpdF9pbmZvGIsNIAEoCzIsLm1p",
            "SG9tby5Qcm90b3MuV2F0ZXJTcGlyaXRBY3Rpdml0eURldGFpbEluZm9IABI+",
            "Cg93aW5kX2ZpZWxkX2luZm8Y4AIgASgLMiIubWlIb21vLlByb3Rvcy5XaW5k",
            "RmllbGREZXRhaWxJbmZvSAASSAoQd2ludGVyX2NhbXBfaW5mbxi7CCABKAsy",
            "Ky5taUhvbW8uUHJvdG9zLldpbnRlckNhbXBBY3Rpdml0eURldGFpbEluZm9I",
            "ABo2ChRBY3Rpdml0eUNvaW5NYXBFbnRyeRILCgNrZXkYASABKA0SDQoFdmFs",
            "dWUYAiABKA06AjgBGjUKE1dpc2hHaWZ0TnVtTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgNEg0KBXZhbHVlGAIgASgNOgI4AUIICgZkZXRhaWxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.ActivityPushTipsDataReflection.Descriptor, global::MiHomo.Protos.ActivityWatcherInfoReflection.Descriptor, global::MiHomo.Protos.ArenaChallengeActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.AsterActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.BartenderActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.BlessingActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.BlitzRushActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.BounceConjuringActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.BrickBreakerDetailInfoReflection.Descriptor, global::MiHomo.Protos.BuoyantCombatDetailInfoReflection.Descriptor, global::MiHomo.Protos.ChannelerSlabActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.CharAmusementDetailInfoReflection.Descriptor, global::MiHomo.Protos.ChessActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.CoinCollectDetailInfoReflection.Descriptor, global::MiHomo.Protos.CrucibleActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.CrystalLinkActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.DeliveryActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.DigActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.DragonSpineActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.DuelHeartDetailInfoReflection.Descriptor, global::MiHomo.Protos.EchoShellDetailInfoReflection.Descriptor, global::MiHomo.Protos.EffigyActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.EffigyChallengeV2DetailInfoReflection.Descriptor, global::MiHomo.Protos.ElectroherculesBattleDetailInfoReflection.Descriptor, global::MiHomo.Protos.ExpeditionActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.FindHilichurlDetailInfoReflection.Descriptor, global::MiHomo.Protos.FleurFairActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.FlightActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.FungusFighterDetailInfoReflection.Descriptor, global::MiHomo.Protos.GachaActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.GearActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.GravenInnocenceDetailInfoReflection.Descriptor, global::MiHomo.Protos.HachiActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.HideAndSeekActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.InstableSprayDetailInfoReflection.Descriptor, global::MiHomo.Protos.IrodoriActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.IslandPartyDetailInfoReflection.Descriptor, global::MiHomo.Protos.LanternRiteActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.LunaRiteDetailInfoReflection.Descriptor, global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.MistTrialActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.MoonfinTrialActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.MuqadasPotionActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.MusicGameActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.PhotoActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.PlantFlowerActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.PotionActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.RockBoardExploreDetailInfoReflection.Descriptor, global::MiHomo.Protos.RogueDiaryActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.SalesmanActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.SeaLampActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.SeaLampActivityInfoReflection.Descriptor, global::MiHomo.Protos.SeaLampV3DetailInfoReflection.Descriptor, global::MiHomo.Protos.SpiceActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.SummerTimeDetailInfoReflection.Descriptor, global::MiHomo.Protos.SummerTimeV2DetailInfoReflection.Descriptor, global::MiHomo.Protos.SumoActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.TanukiTravelActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.TeamChainDetailInfoReflection.Descriptor, global::MiHomo.Protos.TreasureMapActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.TreasureSeelieActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.TrialAvatarActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.UgcActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.VintageActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.WaterSpiritActivityDetailInfoReflection.Descriptor, global::MiHomo.Protos.WindFieldDetailInfoReflection.Descriptor, global::MiHomo.Protos.WinterCampActivityDetailInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.ActivityInfo), global::MiHomo.Protos.ActivityInfo.Parser, new[]{ "ActivityId", "ActivityPushTipsDataList", "ActivityType", "BeginTime", "CurScore", "EndTime", "ExpireCondList", "FirstDayStartTime", "IsBannerCleared", "IsCommonContentClosed", "IsFinished", "IsHidden", "IsPlayOpenAnim", "IsQuickOpen", "IsStarting", "MeetCondList", "ScheduleId", "ScoreLimit", "SelectedAvatarRewardId", "TakenRewardList", "WatcherInfoList", "ActivityCoinMap", "WishGiftNumMap", "ArenaChallengeInfo", "AsterInfo", "BartenderInfo", "BlessingInfo", "BlitzRushInfo", "BounceConjuringInfo", "BrickBreakerInfo", "BuoyantCombatInfo", "ChallnelerSlabInfo", "CharAmusementInfo", "ChessInfo", "CoinCollectInfo", "CrucibleInfo", "CrystalLinkInfo", "DeliveryInfo", "DigInfo", "DragonSpineInfo", "DuelHeartInfo", "EchoShellInfo", "EffigyChallengeInfo", "EffigyInfo", "ElectroherculesBattleInfo", "ExpeditionInfo", "FindHilichurlInfo", "FleurFairInfo", "FlightInfo", "FungusFighterInfo", "GachaInfo", "GearInfo", "GravenInnocenceInfo", "HachiInfo", "HideAndSeekInfo", "InstableSprayInfo", "IrodoriInfo", "IslandPartyInfo", "LanternRiteActivityInfo", "LuminanceStoneChallengeInfo", "LunaRiteInfo", "MichiaeMatsuriInfo", "MistTrialActivityInfo", "MoonfinTrialInfo", "MuqadasPotionInfo", "MusicGameInfo", "PhotoInfo", "PlantFlowerInfo", "PotionInfo", "RockBoardExploreInfo", "RogueDiaryInfo", "RoguelikeDungoenInfo", "SalesmanInfo", "SamLampInfo", "SeaLampInfo", "SeaLampV3Info", "SpiceInfo", "SummerTimeInfo", "SummerTimeV2Info", "SumoInfo", "TanukiTravelActivityInfo", "TeamChainInfo", "TreasureMapInfo", "TreasureSeelieInfo", "TrialAvatarInfo", "UgcInfo", "VintageInfo", "WaterSpiritInfo", "WindFieldInfo", "WinterCampInfo" }, new[]{ "Detail" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ActivityInfo : pb::IMessage<ActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityInfo> _parser = new pb::MessageParser<ActivityInfo>(() => new ActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.ActivityInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityInfo(ActivityInfo other) : this() {
      activityId_ = other.activityId_;
      activityPushTipsDataList_ = other.activityPushTipsDataList_.Clone();
      activityType_ = other.activityType_;
      beginTime_ = other.beginTime_;
      curScore_ = other.curScore_;
      endTime_ = other.endTime_;
      expireCondList_ = other.expireCondList_.Clone();
      firstDayStartTime_ = other.firstDayStartTime_;
      isBannerCleared_ = other.isBannerCleared_;
      isCommonContentClosed_ = other.isCommonContentClosed_;
      isFinished_ = other.isFinished_;
      isHidden_ = other.isHidden_;
      isPlayOpenAnim_ = other.isPlayOpenAnim_;
      isQuickOpen_ = other.isQuickOpen_;
      isStarting_ = other.isStarting_;
      meetCondList_ = other.meetCondList_.Clone();
      scheduleId_ = other.scheduleId_;
      scoreLimit_ = other.scoreLimit_;
      selectedAvatarRewardId_ = other.selectedAvatarRewardId_;
      takenRewardList_ = other.takenRewardList_.Clone();
      watcherInfoList_ = other.watcherInfoList_.Clone();
      activityCoinMap_ = other.activityCoinMap_.Clone();
      wishGiftNumMap_ = other.wishGiftNumMap_.Clone();
      switch (other.DetailCase) {
        case DetailOneofCase.ArenaChallengeInfo:
          ArenaChallengeInfo = other.ArenaChallengeInfo.Clone();
          break;
        case DetailOneofCase.AsterInfo:
          AsterInfo = other.AsterInfo.Clone();
          break;
        case DetailOneofCase.BartenderInfo:
          BartenderInfo = other.BartenderInfo.Clone();
          break;
        case DetailOneofCase.BlessingInfo:
          BlessingInfo = other.BlessingInfo.Clone();
          break;
        case DetailOneofCase.BlitzRushInfo:
          BlitzRushInfo = other.BlitzRushInfo.Clone();
          break;
        case DetailOneofCase.BounceConjuringInfo:
          BounceConjuringInfo = other.BounceConjuringInfo.Clone();
          break;
        case DetailOneofCase.BrickBreakerInfo:
          BrickBreakerInfo = other.BrickBreakerInfo.Clone();
          break;
        case DetailOneofCase.BuoyantCombatInfo:
          BuoyantCombatInfo = other.BuoyantCombatInfo.Clone();
          break;
        case DetailOneofCase.ChallnelerSlabInfo:
          ChallnelerSlabInfo = other.ChallnelerSlabInfo.Clone();
          break;
        case DetailOneofCase.CharAmusementInfo:
          CharAmusementInfo = other.CharAmusementInfo.Clone();
          break;
        case DetailOneofCase.ChessInfo:
          ChessInfo = other.ChessInfo.Clone();
          break;
        case DetailOneofCase.CoinCollectInfo:
          CoinCollectInfo = other.CoinCollectInfo.Clone();
          break;
        case DetailOneofCase.CrucibleInfo:
          CrucibleInfo = other.CrucibleInfo.Clone();
          break;
        case DetailOneofCase.CrystalLinkInfo:
          CrystalLinkInfo = other.CrystalLinkInfo.Clone();
          break;
        case DetailOneofCase.DeliveryInfo:
          DeliveryInfo = other.DeliveryInfo.Clone();
          break;
        case DetailOneofCase.DigInfo:
          DigInfo = other.DigInfo.Clone();
          break;
        case DetailOneofCase.DragonSpineInfo:
          DragonSpineInfo = other.DragonSpineInfo.Clone();
          break;
        case DetailOneofCase.DuelHeartInfo:
          DuelHeartInfo = other.DuelHeartInfo.Clone();
          break;
        case DetailOneofCase.EchoShellInfo:
          EchoShellInfo = other.EchoShellInfo.Clone();
          break;
        case DetailOneofCase.EffigyChallengeInfo:
          EffigyChallengeInfo = other.EffigyChallengeInfo.Clone();
          break;
        case DetailOneofCase.EffigyInfo:
          EffigyInfo = other.EffigyInfo.Clone();
          break;
        case DetailOneofCase.ElectroherculesBattleInfo:
          ElectroherculesBattleInfo = other.ElectroherculesBattleInfo.Clone();
          break;
        case DetailOneofCase.ExpeditionInfo:
          ExpeditionInfo = other.ExpeditionInfo.Clone();
          break;
        case DetailOneofCase.FindHilichurlInfo:
          FindHilichurlInfo = other.FindHilichurlInfo.Clone();
          break;
        case DetailOneofCase.FleurFairInfo:
          FleurFairInfo = other.FleurFairInfo.Clone();
          break;
        case DetailOneofCase.FlightInfo:
          FlightInfo = other.FlightInfo.Clone();
          break;
        case DetailOneofCase.FungusFighterInfo:
          FungusFighterInfo = other.FungusFighterInfo.Clone();
          break;
        case DetailOneofCase.GachaInfo:
          GachaInfo = other.GachaInfo.Clone();
          break;
        case DetailOneofCase.GearInfo:
          GearInfo = other.GearInfo.Clone();
          break;
        case DetailOneofCase.GravenInnocenceInfo:
          GravenInnocenceInfo = other.GravenInnocenceInfo.Clone();
          break;
        case DetailOneofCase.HachiInfo:
          HachiInfo = other.HachiInfo.Clone();
          break;
        case DetailOneofCase.HideAndSeekInfo:
          HideAndSeekInfo = other.HideAndSeekInfo.Clone();
          break;
        case DetailOneofCase.InstableSprayInfo:
          InstableSprayInfo = other.InstableSprayInfo.Clone();
          break;
        case DetailOneofCase.IrodoriInfo:
          IrodoriInfo = other.IrodoriInfo.Clone();
          break;
        case DetailOneofCase.IslandPartyInfo:
          IslandPartyInfo = other.IslandPartyInfo.Clone();
          break;
        case DetailOneofCase.LanternRiteActivityInfo:
          LanternRiteActivityInfo = other.LanternRiteActivityInfo.Clone();
          break;
        case DetailOneofCase.LuminanceStoneChallengeInfo:
          LuminanceStoneChallengeInfo = other.LuminanceStoneChallengeInfo.Clone();
          break;
        case DetailOneofCase.LunaRiteInfo:
          LunaRiteInfo = other.LunaRiteInfo.Clone();
          break;
        case DetailOneofCase.MichiaeMatsuriInfo:
          MichiaeMatsuriInfo = other.MichiaeMatsuriInfo.Clone();
          break;
        case DetailOneofCase.MistTrialActivityInfo:
          MistTrialActivityInfo = other.MistTrialActivityInfo.Clone();
          break;
        case DetailOneofCase.MoonfinTrialInfo:
          MoonfinTrialInfo = other.MoonfinTrialInfo.Clone();
          break;
        case DetailOneofCase.MuqadasPotionInfo:
          MuqadasPotionInfo = other.MuqadasPotionInfo.Clone();
          break;
        case DetailOneofCase.MusicGameInfo:
          MusicGameInfo = other.MusicGameInfo.Clone();
          break;
        case DetailOneofCase.PhotoInfo:
          PhotoInfo = other.PhotoInfo.Clone();
          break;
        case DetailOneofCase.PlantFlowerInfo:
          PlantFlowerInfo = other.PlantFlowerInfo.Clone();
          break;
        case DetailOneofCase.PotionInfo:
          PotionInfo = other.PotionInfo.Clone();
          break;
        case DetailOneofCase.RockBoardExploreInfo:
          RockBoardExploreInfo = other.RockBoardExploreInfo.Clone();
          break;
        case DetailOneofCase.RogueDiaryInfo:
          RogueDiaryInfo = other.RogueDiaryInfo.Clone();
          break;
        case DetailOneofCase.RoguelikeDungoenInfo:
          RoguelikeDungoenInfo = other.RoguelikeDungoenInfo.Clone();
          break;
        case DetailOneofCase.SalesmanInfo:
          SalesmanInfo = other.SalesmanInfo.Clone();
          break;
        case DetailOneofCase.SamLampInfo:
          SamLampInfo = other.SamLampInfo.Clone();
          break;
        case DetailOneofCase.SeaLampInfo:
          SeaLampInfo = other.SeaLampInfo.Clone();
          break;
        case DetailOneofCase.SeaLampV3Info:
          SeaLampV3Info = other.SeaLampV3Info.Clone();
          break;
        case DetailOneofCase.SpiceInfo:
          SpiceInfo = other.SpiceInfo.Clone();
          break;
        case DetailOneofCase.SummerTimeInfo:
          SummerTimeInfo = other.SummerTimeInfo.Clone();
          break;
        case DetailOneofCase.SummerTimeV2Info:
          SummerTimeV2Info = other.SummerTimeV2Info.Clone();
          break;
        case DetailOneofCase.SumoInfo:
          SumoInfo = other.SumoInfo.Clone();
          break;
        case DetailOneofCase.TanukiTravelActivityInfo:
          TanukiTravelActivityInfo = other.TanukiTravelActivityInfo.Clone();
          break;
        case DetailOneofCase.TeamChainInfo:
          TeamChainInfo = other.TeamChainInfo.Clone();
          break;
        case DetailOneofCase.TreasureMapInfo:
          TreasureMapInfo = other.TreasureMapInfo.Clone();
          break;
        case DetailOneofCase.TreasureSeelieInfo:
          TreasureSeelieInfo = other.TreasureSeelieInfo.Clone();
          break;
        case DetailOneofCase.TrialAvatarInfo:
          TrialAvatarInfo = other.TrialAvatarInfo.Clone();
          break;
        case DetailOneofCase.UgcInfo:
          UgcInfo = other.UgcInfo.Clone();
          break;
        case DetailOneofCase.VintageInfo:
          VintageInfo = other.VintageInfo.Clone();
          break;
        case DetailOneofCase.WaterSpiritInfo:
          WaterSpiritInfo = other.WaterSpiritInfo.Clone();
          break;
        case DetailOneofCase.WindFieldInfo:
          WindFieldInfo = other.WindFieldInfo.Clone();
          break;
        case DetailOneofCase.WinterCampInfo:
          WinterCampInfo = other.WinterCampInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityInfo Clone() {
      return new ActivityInfo(this);
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 12;
    private uint activityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "activity_push_tips_data_list" field.</summary>
    public const int ActivityPushTipsDataListFieldNumber = 864;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.ActivityPushTipsData> _repeated_activityPushTipsDataList_codec
        = pb::FieldCodec.ForMessage(6914, global::MiHomo.Protos.ActivityPushTipsData.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.ActivityPushTipsData> activityPushTipsDataList_ = new pbc::RepeatedField<global::MiHomo.Protos.ActivityPushTipsData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.ActivityPushTipsData> ActivityPushTipsDataList {
      get { return activityPushTipsDataList_; }
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 4;
    private uint activityType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActivityType {
      get { return activityType_; }
      set {
        activityType_ = value;
      }
    }

    /// <summary>Field number for the "begin_time" field.</summary>
    public const int BeginTimeFieldNumber = 8;
    private uint beginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BeginTime {
      get { return beginTime_; }
      set {
        beginTime_ = value;
      }
    }

    /// <summary>Field number for the "cur_score" field.</summary>
    public const int CurScoreFieldNumber = 1906;
    private uint curScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurScore {
      get { return curScore_; }
      set {
        curScore_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private uint endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "expire_cond_list" field.</summary>
    public const int ExpireCondListFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_expireCondList_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> expireCondList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ExpireCondList {
      get { return expireCondList_; }
    }

    /// <summary>Field number for the "first_day_start_time" field.</summary>
    public const int FirstDayStartTimeFieldNumber = 592;
    private uint firstDayStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FirstDayStartTime {
      get { return firstDayStartTime_; }
      set {
        firstDayStartTime_ = value;
      }
    }

    /// <summary>Field number for the "is_banner_cleared" field.</summary>
    public const int IsBannerClearedFieldNumber = 102;
    private bool isBannerCleared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBannerCleared {
      get { return isBannerCleared_; }
      set {
        isBannerCleared_ = value;
      }
    }

    /// <summary>Field number for the "is_common_content_closed" field.</summary>
    public const int IsCommonContentClosedFieldNumber = 1963;
    private bool isCommonContentClosed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCommonContentClosed {
      get { return isCommonContentClosed_; }
      set {
        isCommonContentClosed_ = value;
      }
    }

    /// <summary>Field number for the "is_finished" field.</summary>
    public const int IsFinishedFieldNumber = 6;
    private bool isFinished_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinished {
      get { return isFinished_; }
      set {
        isFinished_ = value;
      }
    }

    /// <summary>Field number for the "is_hidden" field.</summary>
    public const int IsHiddenFieldNumber = 919;
    private bool isHidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHidden {
      get { return isHidden_; }
      set {
        isHidden_ = value;
      }
    }

    /// <summary>Field number for the "is_play_open_anim" field.</summary>
    public const int IsPlayOpenAnimFieldNumber = 13;
    private bool isPlayOpenAnim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlayOpenAnim {
      get { return isPlayOpenAnim_; }
      set {
        isPlayOpenAnim_ = value;
      }
    }

    /// <summary>Field number for the "is_quick_open" field.</summary>
    public const int IsQuickOpenFieldNumber = 1449;
    private bool isQuickOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsQuickOpen {
      get { return isQuickOpen_; }
      set {
        isQuickOpen_ = value;
      }
    }

    /// <summary>Field number for the "is_starting" field.</summary>
    public const int IsStartingFieldNumber = 9;
    private bool isStarting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStarting {
      get { return isStarting_; }
      set {
        isStarting_ = value;
      }
    }

    /// <summary>Field number for the "meet_cond_list" field.</summary>
    public const int MeetCondListFieldNumber = 10;
    private static readonly pb::FieldCodec<uint> _repeated_meetCondList_codec
        = pb::FieldCodec.ForUInt32(82);
    private readonly pbc::RepeatedField<uint> meetCondList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> MeetCondList {
      get { return meetCondList_; }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 15;
    private uint scheduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = value;
      }
    }

    /// <summary>Field number for the "score_limit" field.</summary>
    public const int ScoreLimitFieldNumber = 1958;
    private uint scoreLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScoreLimit {
      get { return scoreLimit_; }
      set {
        scoreLimit_ = value;
      }
    }

    /// <summary>Field number for the "selected_avatar_reward_id" field.</summary>
    public const int SelectedAvatarRewardIdFieldNumber = 1290;
    private uint selectedAvatarRewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SelectedAvatarRewardId {
      get { return selectedAvatarRewardId_; }
      set {
        selectedAvatarRewardId_ = value;
      }
    }

    /// <summary>Field number for the "taken_reward_list" field.</summary>
    public const int TakenRewardListFieldNumber = 329;
    private static readonly pb::FieldCodec<uint> _repeated_takenRewardList_codec
        = pb::FieldCodec.ForUInt32(2634);
    private readonly pbc::RepeatedField<uint> takenRewardList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TakenRewardList {
      get { return takenRewardList_; }
    }

    /// <summary>Field number for the "watcher_info_list" field.</summary>
    public const int WatcherInfoListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.ActivityWatcherInfo> _repeated_watcherInfoList_codec
        = pb::FieldCodec.ForMessage(18, global::MiHomo.Protos.ActivityWatcherInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.ActivityWatcherInfo> watcherInfoList_ = new pbc::RepeatedField<global::MiHomo.Protos.ActivityWatcherInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.ActivityWatcherInfo> WatcherInfoList {
      get { return watcherInfoList_; }
    }

    /// <summary>Field number for the "activity_coin_map" field.</summary>
    public const int ActivityCoinMapFieldNumber = 682;
    private static readonly pbc::MapField<uint, uint>.Codec _map_activityCoinMap_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 5458);
    private readonly pbc::MapField<uint, uint> activityCoinMap_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> ActivityCoinMap {
      get { return activityCoinMap_; }
    }

    /// <summary>Field number for the "wish_gift_num_map" field.</summary>
    public const int WishGiftNumMapFieldNumber = 1399;
    private static readonly pbc::MapField<uint, uint>.Codec _map_wishGiftNumMap_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 11194);
    private readonly pbc::MapField<uint, uint> wishGiftNumMap_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> WishGiftNumMap {
      get { return wishGiftNumMap_; }
    }

    /// <summary>Field number for the "arena_challenge_info" field.</summary>
    public const int ArenaChallengeInfoFieldNumber = 859;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.ArenaChallengeActivityDetailInfo ArenaChallengeInfo {
      get { return detailCase_ == DetailOneofCase.ArenaChallengeInfo ? (global::MiHomo.Protos.ArenaChallengeActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ArenaChallengeInfo;
      }
    }

    /// <summary>Field number for the "aster_info" field.</summary>
    public const int AsterInfoFieldNumber = 557;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.AsterActivityDetailInfo AsterInfo {
      get { return detailCase_ == DetailOneofCase.AsterInfo ? (global::MiHomo.Protos.AsterActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.AsterInfo;
      }
    }

    /// <summary>Field number for the "bartender_info" field.</summary>
    public const int BartenderInfoFieldNumber = 1725;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.BartenderActivityDetailInfo BartenderInfo {
      get { return detailCase_ == DetailOneofCase.BartenderInfo ? (global::MiHomo.Protos.BartenderActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BartenderInfo;
      }
    }

    /// <summary>Field number for the "blessing_info" field.</summary>
    public const int BlessingInfoFieldNumber = 1869;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.BlessingActivityDetailInfo BlessingInfo {
      get { return detailCase_ == DetailOneofCase.BlessingInfo ? (global::MiHomo.Protos.BlessingActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BlessingInfo;
      }
    }

    /// <summary>Field number for the "blitz_rush_info" field.</summary>
    public const int BlitzRushInfoFieldNumber = 794;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.BlitzRushActivityDetailInfo BlitzRushInfo {
      get { return detailCase_ == DetailOneofCase.BlitzRushInfo ? (global::MiHomo.Protos.BlitzRushActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BlitzRushInfo;
      }
    }

    /// <summary>Field number for the "bounce_conjuring_info" field.</summary>
    public const int BounceConjuringInfoFieldNumber = 767;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.BounceConjuringActivityDetailInfo BounceConjuringInfo {
      get { return detailCase_ == DetailOneofCase.BounceConjuringInfo ? (global::MiHomo.Protos.BounceConjuringActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BounceConjuringInfo;
      }
    }

    /// <summary>Field number for the "brick_breaker_info" field.</summary>
    public const int BrickBreakerInfoFieldNumber = 1369;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.BrickBreakerDetailInfo BrickBreakerInfo {
      get { return detailCase_ == DetailOneofCase.BrickBreakerInfo ? (global::MiHomo.Protos.BrickBreakerDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BrickBreakerInfo;
      }
    }

    /// <summary>Field number for the "buoyant_combat_info" field.</summary>
    public const int BuoyantCombatInfoFieldNumber = 1842;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.BuoyantCombatDetailInfo BuoyantCombatInfo {
      get { return detailCase_ == DetailOneofCase.BuoyantCombatInfo ? (global::MiHomo.Protos.BuoyantCombatDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BuoyantCombatInfo;
      }
    }

    /// <summary>Field number for the "challneler_slab_info" field.</summary>
    public const int ChallnelerSlabInfoFieldNumber = 1015;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.ChannelerSlabActivityDetailInfo ChallnelerSlabInfo {
      get { return detailCase_ == DetailOneofCase.ChallnelerSlabInfo ? (global::MiHomo.Protos.ChannelerSlabActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ChallnelerSlabInfo;
      }
    }

    /// <summary>Field number for the "char_amusement_info" field.</summary>
    public const int CharAmusementInfoFieldNumber = 1496;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.CharAmusementDetailInfo CharAmusementInfo {
      get { return detailCase_ == DetailOneofCase.CharAmusementInfo ? (global::MiHomo.Protos.CharAmusementDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CharAmusementInfo;
      }
    }

    /// <summary>Field number for the "chess_info" field.</summary>
    public const int ChessInfoFieldNumber = 927;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.ChessActivityDetailInfo ChessInfo {
      get { return detailCase_ == DetailOneofCase.ChessInfo ? (global::MiHomo.Protos.ChessActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ChessInfo;
      }
    }

    /// <summary>Field number for the "coin_collect_info" field.</summary>
    public const int CoinCollectInfoFieldNumber = 1679;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.CoinCollectDetailInfo CoinCollectInfo {
      get { return detailCase_ == DetailOneofCase.CoinCollectInfo ? (global::MiHomo.Protos.CoinCollectDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CoinCollectInfo;
      }
    }

    /// <summary>Field number for the "crucible_info" field.</summary>
    public const int CrucibleInfoFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.CrucibleActivityDetailInfo CrucibleInfo {
      get { return detailCase_ == DetailOneofCase.CrucibleInfo ? (global::MiHomo.Protos.CrucibleActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CrucibleInfo;
      }
    }

    /// <summary>Field number for the "crystal_link_info" field.</summary>
    public const int CrystalLinkInfoFieldNumber = 1226;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.CrystalLinkActivityDetailInfo CrystalLinkInfo {
      get { return detailCase_ == DetailOneofCase.CrystalLinkInfo ? (global::MiHomo.Protos.CrystalLinkActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CrystalLinkInfo;
      }
    }

    /// <summary>Field number for the "delivery_info" field.</summary>
    public const int DeliveryInfoFieldNumber = 1092;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.DeliveryActivityDetailInfo DeliveryInfo {
      get { return detailCase_ == DetailOneofCase.DeliveryInfo ? (global::MiHomo.Protos.DeliveryActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.DeliveryInfo;
      }
    }

    /// <summary>Field number for the "dig_info" field.</summary>
    public const int DigInfoFieldNumber = 403;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.DigActivityDetailInfo DigInfo {
      get { return detailCase_ == DetailOneofCase.DigInfo ? (global::MiHomo.Protos.DigActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.DigInfo;
      }
    }

    /// <summary>Field number for the "dragon_spine_info" field.</summary>
    public const int DragonSpineInfoFieldNumber = 1727;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.DragonSpineActivityDetailInfo DragonSpineInfo {
      get { return detailCase_ == DetailOneofCase.DragonSpineInfo ? (global::MiHomo.Protos.DragonSpineActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.DragonSpineInfo;
      }
    }

    /// <summary>Field number for the "duel_heart_info" field.</summary>
    public const int DuelHeartInfoFieldNumber = 1173;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.DuelHeartDetailInfo DuelHeartInfo {
      get { return detailCase_ == DetailOneofCase.DuelHeartInfo ? (global::MiHomo.Protos.DuelHeartDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.DuelHeartInfo;
      }
    }

    /// <summary>Field number for the "echo_shell_info" field.</summary>
    public const int EchoShellInfoFieldNumber = 1113;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.EchoShellDetailInfo EchoShellInfo {
      get { return detailCase_ == DetailOneofCase.EchoShellInfo ? (global::MiHomo.Protos.EchoShellDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.EchoShellInfo;
      }
    }

    /// <summary>Field number for the "effigy_challenge_info" field.</summary>
    public const int EffigyChallengeInfoFieldNumber = 1025;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.EffigyChallengeV2DetailInfo EffigyChallengeInfo {
      get { return detailCase_ == DetailOneofCase.EffigyChallengeInfo ? (global::MiHomo.Protos.EffigyChallengeV2DetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.EffigyChallengeInfo;
      }
    }

    /// <summary>Field number for the "effigy_info" field.</summary>
    public const int EffigyInfoFieldNumber = 391;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.EffigyActivityDetailInfo EffigyInfo {
      get { return detailCase_ == DetailOneofCase.EffigyInfo ? (global::MiHomo.Protos.EffigyActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.EffigyInfo;
      }
    }

    /// <summary>Field number for the "electrohercules_battle_info" field.</summary>
    public const int ElectroherculesBattleInfoFieldNumber = 1630;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.ElectroherculesBattleDetailInfo ElectroherculesBattleInfo {
      get { return detailCase_ == DetailOneofCase.ElectroherculesBattleInfo ? (global::MiHomo.Protos.ElectroherculesBattleDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ElectroherculesBattleInfo;
      }
    }

    /// <summary>Field number for the "expedition_info" field.</summary>
    public const int ExpeditionInfoFieldNumber = 202;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.ExpeditionActivityDetailInfo ExpeditionInfo {
      get { return detailCase_ == DetailOneofCase.ExpeditionInfo ? (global::MiHomo.Protos.ExpeditionActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ExpeditionInfo;
      }
    }

    /// <summary>Field number for the "find_hilichurl_info" field.</summary>
    public const int FindHilichurlInfoFieldNumber = 1411;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.FindHilichurlDetailInfo FindHilichurlInfo {
      get { return detailCase_ == DetailOneofCase.FindHilichurlInfo ? (global::MiHomo.Protos.FindHilichurlDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FindHilichurlInfo;
      }
    }

    /// <summary>Field number for the "fleur_fair_info" field.</summary>
    public const int FleurFairInfoFieldNumber = 857;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.FleurFairActivityDetailInfo FleurFairInfo {
      get { return detailCase_ == DetailOneofCase.FleurFairInfo ? (global::MiHomo.Protos.FleurFairActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FleurFairInfo;
      }
    }

    /// <summary>Field number for the "flight_info" field.</summary>
    public const int FlightInfoFieldNumber = 1365;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.FlightActivityDetailInfo FlightInfo {
      get { return detailCase_ == DetailOneofCase.FlightInfo ? (global::MiHomo.Protos.FlightActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FlightInfo;
      }
    }

    /// <summary>Field number for the "fungus_fighter_info" field.</summary>
    public const int FungusFighterInfoFieldNumber = 490;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.FungusFighterDetailInfo FungusFighterInfo {
      get { return detailCase_ == DetailOneofCase.FungusFighterInfo ? (global::MiHomo.Protos.FungusFighterDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FungusFighterInfo;
      }
    }

    /// <summary>Field number for the "gacha_info" field.</summary>
    public const int GachaInfoFieldNumber = 825;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GachaActivityDetailInfo GachaInfo {
      get { return detailCase_ == DetailOneofCase.GachaInfo ? (global::MiHomo.Protos.GachaActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.GachaInfo;
      }
    }

    /// <summary>Field number for the "gear_info" field.</summary>
    public const int GearInfoFieldNumber = 722;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GearActivityDetailInfo GearInfo {
      get { return detailCase_ == DetailOneofCase.GearInfo ? (global::MiHomo.Protos.GearActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.GearInfo;
      }
    }

    /// <summary>Field number for the "graven_innocence_info" field.</summary>
    public const int GravenInnocenceInfoFieldNumber = 1911;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.GravenInnocenceDetailInfo GravenInnocenceInfo {
      get { return detailCase_ == DetailOneofCase.GravenInnocenceInfo ? (global::MiHomo.Protos.GravenInnocenceDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.GravenInnocenceInfo;
      }
    }

    /// <summary>Field number for the "hachi_info" field.</summary>
    public const int HachiInfoFieldNumber = 491;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.HachiActivityDetailInfo HachiInfo {
      get { return detailCase_ == DetailOneofCase.HachiInfo ? (global::MiHomo.Protos.HachiActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.HachiInfo;
      }
    }

    /// <summary>Field number for the "hide_and_seek_info" field.</summary>
    public const int HideAndSeekInfoFieldNumber = 427;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.HideAndSeekActivityDetailInfo HideAndSeekInfo {
      get { return detailCase_ == DetailOneofCase.HideAndSeekInfo ? (global::MiHomo.Protos.HideAndSeekActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.HideAndSeekInfo;
      }
    }

    /// <summary>Field number for the "instable_spray_info" field.</summary>
    public const int InstableSprayInfoFieldNumber = 1043;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.InstableSprayDetailInfo InstableSprayInfo {
      get { return detailCase_ == DetailOneofCase.InstableSprayInfo ? (global::MiHomo.Protos.InstableSprayDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.InstableSprayInfo;
      }
    }

    /// <summary>Field number for the "irodori_info" field.</summary>
    public const int IrodoriInfoFieldNumber = 750;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.IrodoriActivityDetailInfo IrodoriInfo {
      get { return detailCase_ == DetailOneofCase.IrodoriInfo ? (global::MiHomo.Protos.IrodoriActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.IrodoriInfo;
      }
    }

    /// <summary>Field number for the "island_party_info" field.</summary>
    public const int IslandPartyInfoFieldNumber = 1885;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.IslandPartyDetailInfo IslandPartyInfo {
      get { return detailCase_ == DetailOneofCase.IslandPartyInfo ? (global::MiHomo.Protos.IslandPartyDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.IslandPartyInfo;
      }
    }

    /// <summary>Field number for the "lantern_rite_activity_info" field.</summary>
    public const int LanternRiteActivityInfoFieldNumber = 1876;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.LanternRiteActivityDetailInfo LanternRiteActivityInfo {
      get { return detailCase_ == DetailOneofCase.LanternRiteActivityInfo ? (global::MiHomo.Protos.LanternRiteActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.LanternRiteActivityInfo;
      }
    }

    /// <summary>Field number for the "luminance_stone_challenge_info" field.</summary>
    public const int LuminanceStoneChallengeInfoFieldNumber = 1308;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfo LuminanceStoneChallengeInfo {
      get { return detailCase_ == DetailOneofCase.LuminanceStoneChallengeInfo ? (global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.LuminanceStoneChallengeInfo;
      }
    }

    /// <summary>Field number for the "luna_rite_info" field.</summary>
    public const int LunaRiteInfoFieldNumber = 814;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.LunaRiteDetailInfo LunaRiteInfo {
      get { return detailCase_ == DetailOneofCase.LunaRiteInfo ? (global::MiHomo.Protos.LunaRiteDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.LunaRiteInfo;
      }
    }

    /// <summary>Field number for the "michiae_matsuri_info" field.</summary>
    public const int MichiaeMatsuriInfoFieldNumber = 194;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfo MichiaeMatsuriInfo {
      get { return detailCase_ == DetailOneofCase.MichiaeMatsuriInfo ? (global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MichiaeMatsuriInfo;
      }
    }

    /// <summary>Field number for the "mist_trial_activity_info" field.</summary>
    public const int MistTrialActivityInfoFieldNumber = 156;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MistTrialActivityDetailInfo MistTrialActivityInfo {
      get { return detailCase_ == DetailOneofCase.MistTrialActivityInfo ? (global::MiHomo.Protos.MistTrialActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MistTrialActivityInfo;
      }
    }

    /// <summary>Field number for the "moonfin_trial_info" field.</summary>
    public const int MoonfinTrialInfoFieldNumber = 1588;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MoonfinTrialActivityDetailInfo MoonfinTrialInfo {
      get { return detailCase_ == DetailOneofCase.MoonfinTrialInfo ? (global::MiHomo.Protos.MoonfinTrialActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MoonfinTrialInfo;
      }
    }

    /// <summary>Field number for the "muqadas_potion_info" field.</summary>
    public const int MuqadasPotionInfoFieldNumber = 1157;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MuqadasPotionActivityDetailInfo MuqadasPotionInfo {
      get { return detailCase_ == DetailOneofCase.MuqadasPotionInfo ? (global::MiHomo.Protos.MuqadasPotionActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MuqadasPotionInfo;
      }
    }

    /// <summary>Field number for the "music_game_info" field.</summary>
    public const int MusicGameInfoFieldNumber = 460;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MusicGameActivityDetailInfo MusicGameInfo {
      get { return detailCase_ == DetailOneofCase.MusicGameInfo ? (global::MiHomo.Protos.MusicGameActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MusicGameInfo;
      }
    }

    /// <summary>Field number for the "photo_info" field.</summary>
    public const int PhotoInfoFieldNumber = 328;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.PhotoActivityDetailInfo PhotoInfo {
      get { return detailCase_ == DetailOneofCase.PhotoInfo ? (global::MiHomo.Protos.PhotoActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.PhotoInfo;
      }
    }

    /// <summary>Field number for the "plant_flower_info" field.</summary>
    public const int PlantFlowerInfoFieldNumber = 54;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.PlantFlowerActivityDetailInfo PlantFlowerInfo {
      get { return detailCase_ == DetailOneofCase.PlantFlowerInfo ? (global::MiHomo.Protos.PlantFlowerActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.PlantFlowerInfo;
      }
    }

    /// <summary>Field number for the "potion_info" field.</summary>
    public const int PotionInfoFieldNumber = 1273;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.PotionActivityDetailInfo PotionInfo {
      get { return detailCase_ == DetailOneofCase.PotionInfo ? (global::MiHomo.Protos.PotionActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.PotionInfo;
      }
    }

    /// <summary>Field number for the "rock_board_explore_info" field.</summary>
    public const int RockBoardExploreInfoFieldNumber = 1078;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.RockBoardExploreDetailInfo RockBoardExploreInfo {
      get { return detailCase_ == DetailOneofCase.RockBoardExploreInfo ? (global::MiHomo.Protos.RockBoardExploreDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.RockBoardExploreInfo;
      }
    }

    /// <summary>Field number for the "rogue_diary_info" field.</summary>
    public const int RogueDiaryInfoFieldNumber = 812;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.RogueDiaryActivityDetailInfo RogueDiaryInfo {
      get { return detailCase_ == DetailOneofCase.RogueDiaryInfo ? (global::MiHomo.Protos.RogueDiaryActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.RogueDiaryInfo;
      }
    }

    /// <summary>Field number for the "roguelike_dungoen_info" field.</summary>
    public const int RoguelikeDungoenInfoFieldNumber = 219;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfo RoguelikeDungoenInfo {
      get { return detailCase_ == DetailOneofCase.RoguelikeDungoenInfo ? (global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.RoguelikeDungoenInfo;
      }
    }

    /// <summary>Field number for the "salesman_info" field.</summary>
    public const int SalesmanInfoFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SalesmanActivityDetailInfo SalesmanInfo {
      get { return detailCase_ == DetailOneofCase.SalesmanInfo ? (global::MiHomo.Protos.SalesmanActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SalesmanInfo;
      }
    }

    /// <summary>Field number for the "sam_lamp_info" field.</summary>
    public const int SamLampInfoFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SeaLampActivityDetailInfo SamLampInfo {
      get { return detailCase_ == DetailOneofCase.SamLampInfo ? (global::MiHomo.Protos.SeaLampActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SamLampInfo;
      }
    }

    /// <summary>Field number for the "sea_lamp_info" field.</summary>
    public const int SeaLampInfoFieldNumber = 494;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SeaLampActivityInfo SeaLampInfo {
      get { return detailCase_ == DetailOneofCase.SeaLampInfo ? (global::MiHomo.Protos.SeaLampActivityInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SeaLampInfo;
      }
    }

    /// <summary>Field number for the "sea_lamp_v3_info" field.</summary>
    public const int SeaLampV3InfoFieldNumber = 251;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SeaLampV3DetailInfo SeaLampV3Info {
      get { return detailCase_ == DetailOneofCase.SeaLampV3Info ? (global::MiHomo.Protos.SeaLampV3DetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SeaLampV3Info;
      }
    }

    /// <summary>Field number for the "spice_info" field.</summary>
    public const int SpiceInfoFieldNumber = 1891;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SpiceActivityDetailInfo SpiceInfo {
      get { return detailCase_ == DetailOneofCase.SpiceInfo ? (global::MiHomo.Protos.SpiceActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SpiceInfo;
      }
    }

    /// <summary>Field number for the "summer_time_info" field.</summary>
    public const int SummerTimeInfoFieldNumber = 1372;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SummerTimeDetailInfo SummerTimeInfo {
      get { return detailCase_ == DetailOneofCase.SummerTimeInfo ? (global::MiHomo.Protos.SummerTimeDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SummerTimeInfo;
      }
    }

    /// <summary>Field number for the "summer_time_v2_info" field.</summary>
    public const int SummerTimeV2InfoFieldNumber = 622;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SummerTimeV2DetailInfo SummerTimeV2Info {
      get { return detailCase_ == DetailOneofCase.SummerTimeV2Info ? (global::MiHomo.Protos.SummerTimeV2DetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SummerTimeV2Info;
      }
    }

    /// <summary>Field number for the "sumo_info" field.</summary>
    public const int SumoInfoFieldNumber = 1261;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SumoActivityDetailInfo SumoInfo {
      get { return detailCase_ == DetailOneofCase.SumoInfo ? (global::MiHomo.Protos.SumoActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.SumoInfo;
      }
    }

    /// <summary>Field number for the "tanuki_travel_activity_info" field.</summary>
    public const int TanukiTravelActivityInfoFieldNumber = 1796;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.TanukiTravelActivityDetailInfo TanukiTravelActivityInfo {
      get { return detailCase_ == DetailOneofCase.TanukiTravelActivityInfo ? (global::MiHomo.Protos.TanukiTravelActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.TanukiTravelActivityInfo;
      }
    }

    /// <summary>Field number for the "team_chain_info" field.</summary>
    public const int TeamChainInfoFieldNumber = 1547;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.TeamChainDetailInfo TeamChainInfo {
      get { return detailCase_ == DetailOneofCase.TeamChainInfo ? (global::MiHomo.Protos.TeamChainDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.TeamChainInfo;
      }
    }

    /// <summary>Field number for the "treasure_map_info" field.</summary>
    public const int TreasureMapInfoFieldNumber = 1114;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.TreasureMapActivityDetailInfo TreasureMapInfo {
      get { return detailCase_ == DetailOneofCase.TreasureMapInfo ? (global::MiHomo.Protos.TreasureMapActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.TreasureMapInfo;
      }
    }

    /// <summary>Field number for the "treasure_seelie_info" field.</summary>
    public const int TreasureSeelieInfoFieldNumber = 966;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.TreasureSeelieActivityDetailInfo TreasureSeelieInfo {
      get { return detailCase_ == DetailOneofCase.TreasureSeelieInfo ? (global::MiHomo.Protos.TreasureSeelieActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.TreasureSeelieInfo;
      }
    }

    /// <summary>Field number for the "trial_avatar_info" field.</summary>
    public const int TrialAvatarInfoFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.TrialAvatarActivityDetailInfo TrialAvatarInfo {
      get { return detailCase_ == DetailOneofCase.TrialAvatarInfo ? (global::MiHomo.Protos.TrialAvatarActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.TrialAvatarInfo;
      }
    }

    /// <summary>Field number for the "ugc_info" field.</summary>
    public const int UgcInfoFieldNumber = 703;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.UgcActivityDetailInfo UgcInfo {
      get { return detailCase_ == DetailOneofCase.UgcInfo ? (global::MiHomo.Protos.UgcActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.UgcInfo;
      }
    }

    /// <summary>Field number for the "vintage_info" field.</summary>
    public const int VintageInfoFieldNumber = 445;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.VintageActivityDetailInfo VintageInfo {
      get { return detailCase_ == DetailOneofCase.VintageInfo ? (global::MiHomo.Protos.VintageActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.VintageInfo;
      }
    }

    /// <summary>Field number for the "water_spirit_info" field.</summary>
    public const int WaterSpiritInfoFieldNumber = 1675;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.WaterSpiritActivityDetailInfo WaterSpiritInfo {
      get { return detailCase_ == DetailOneofCase.WaterSpiritInfo ? (global::MiHomo.Protos.WaterSpiritActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.WaterSpiritInfo;
      }
    }

    /// <summary>Field number for the "wind_field_info" field.</summary>
    public const int WindFieldInfoFieldNumber = 352;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.WindFieldDetailInfo WindFieldInfo {
      get { return detailCase_ == DetailOneofCase.WindFieldInfo ? (global::MiHomo.Protos.WindFieldDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.WindFieldInfo;
      }
    }

    /// <summary>Field number for the "winter_camp_info" field.</summary>
    public const int WinterCampInfoFieldNumber = 1083;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.WinterCampActivityDetailInfo WinterCampInfo {
      get { return detailCase_ == DetailOneofCase.WinterCampInfo ? (global::MiHomo.Protos.WinterCampActivityDetailInfo) detail_ : null; }
      set {
        detail_ = value;
        detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.WinterCampInfo;
      }
    }

    private object detail_;
    /// <summary>Enum of possible cases for the "detail" oneof.</summary>
    public enum DetailOneofCase {
      None = 0,
      ArenaChallengeInfo = 859,
      AsterInfo = 557,
      BartenderInfo = 1725,
      BlessingInfo = 1869,
      BlitzRushInfo = 794,
      BounceConjuringInfo = 767,
      BrickBreakerInfo = 1369,
      BuoyantCombatInfo = 1842,
      ChallnelerSlabInfo = 1015,
      CharAmusementInfo = 1496,
      ChessInfo = 927,
      CoinCollectInfo = 1679,
      CrucibleInfo = 14,
      CrystalLinkInfo = 1226,
      DeliveryInfo = 1092,
      DigInfo = 403,
      DragonSpineInfo = 1727,
      DuelHeartInfo = 1173,
      EchoShellInfo = 1113,
      EffigyChallengeInfo = 1025,
      EffigyInfo = 391,
      ElectroherculesBattleInfo = 1630,
      ExpeditionInfo = 202,
      FindHilichurlInfo = 1411,
      FleurFairInfo = 857,
      FlightInfo = 1365,
      FungusFighterInfo = 490,
      GachaInfo = 825,
      GearInfo = 722,
      GravenInnocenceInfo = 1911,
      HachiInfo = 491,
      HideAndSeekInfo = 427,
      InstableSprayInfo = 1043,
      IrodoriInfo = 750,
      IslandPartyInfo = 1885,
      LanternRiteActivityInfo = 1876,
      LuminanceStoneChallengeInfo = 1308,
      LunaRiteInfo = 814,
      MichiaeMatsuriInfo = 194,
      MistTrialActivityInfo = 156,
      MoonfinTrialInfo = 1588,
      MuqadasPotionInfo = 1157,
      MusicGameInfo = 460,
      PhotoInfo = 328,
      PlantFlowerInfo = 54,
      PotionInfo = 1273,
      RockBoardExploreInfo = 1078,
      RogueDiaryInfo = 812,
      RoguelikeDungoenInfo = 219,
      SalesmanInfo = 11,
      SamLampInfo = 7,
      SeaLampInfo = 494,
      SeaLampV3Info = 251,
      SpiceInfo = 1891,
      SummerTimeInfo = 1372,
      SummerTimeV2Info = 622,
      SumoInfo = 1261,
      TanukiTravelActivityInfo = 1796,
      TeamChainInfo = 1547,
      TreasureMapInfo = 1114,
      TreasureSeelieInfo = 966,
      TrialAvatarInfo = 1,
      UgcInfo = 703,
      VintageInfo = 445,
      WaterSpiritInfo = 1675,
      WindFieldInfo = 352,
      WinterCampInfo = 1083,
    }
    private DetailOneofCase detailCase_ = DetailOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetailOneofCase DetailCase {
      get { return detailCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDetail() {
      detailCase_ = DetailOneofCase.None;
      detail_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if(!activityPushTipsDataList_.Equals(other.activityPushTipsDataList_)) return false;
      if (ActivityType != other.ActivityType) return false;
      if (BeginTime != other.BeginTime) return false;
      if (CurScore != other.CurScore) return false;
      if (EndTime != other.EndTime) return false;
      if(!expireCondList_.Equals(other.expireCondList_)) return false;
      if (FirstDayStartTime != other.FirstDayStartTime) return false;
      if (IsBannerCleared != other.IsBannerCleared) return false;
      if (IsCommonContentClosed != other.IsCommonContentClosed) return false;
      if (IsFinished != other.IsFinished) return false;
      if (IsHidden != other.IsHidden) return false;
      if (IsPlayOpenAnim != other.IsPlayOpenAnim) return false;
      if (IsQuickOpen != other.IsQuickOpen) return false;
      if (IsStarting != other.IsStarting) return false;
      if(!meetCondList_.Equals(other.meetCondList_)) return false;
      if (ScheduleId != other.ScheduleId) return false;
      if (ScoreLimit != other.ScoreLimit) return false;
      if (SelectedAvatarRewardId != other.SelectedAvatarRewardId) return false;
      if(!takenRewardList_.Equals(other.takenRewardList_)) return false;
      if(!watcherInfoList_.Equals(other.watcherInfoList_)) return false;
      if (!ActivityCoinMap.Equals(other.ActivityCoinMap)) return false;
      if (!WishGiftNumMap.Equals(other.WishGiftNumMap)) return false;
      if (!object.Equals(ArenaChallengeInfo, other.ArenaChallengeInfo)) return false;
      if (!object.Equals(AsterInfo, other.AsterInfo)) return false;
      if (!object.Equals(BartenderInfo, other.BartenderInfo)) return false;
      if (!object.Equals(BlessingInfo, other.BlessingInfo)) return false;
      if (!object.Equals(BlitzRushInfo, other.BlitzRushInfo)) return false;
      if (!object.Equals(BounceConjuringInfo, other.BounceConjuringInfo)) return false;
      if (!object.Equals(BrickBreakerInfo, other.BrickBreakerInfo)) return false;
      if (!object.Equals(BuoyantCombatInfo, other.BuoyantCombatInfo)) return false;
      if (!object.Equals(ChallnelerSlabInfo, other.ChallnelerSlabInfo)) return false;
      if (!object.Equals(CharAmusementInfo, other.CharAmusementInfo)) return false;
      if (!object.Equals(ChessInfo, other.ChessInfo)) return false;
      if (!object.Equals(CoinCollectInfo, other.CoinCollectInfo)) return false;
      if (!object.Equals(CrucibleInfo, other.CrucibleInfo)) return false;
      if (!object.Equals(CrystalLinkInfo, other.CrystalLinkInfo)) return false;
      if (!object.Equals(DeliveryInfo, other.DeliveryInfo)) return false;
      if (!object.Equals(DigInfo, other.DigInfo)) return false;
      if (!object.Equals(DragonSpineInfo, other.DragonSpineInfo)) return false;
      if (!object.Equals(DuelHeartInfo, other.DuelHeartInfo)) return false;
      if (!object.Equals(EchoShellInfo, other.EchoShellInfo)) return false;
      if (!object.Equals(EffigyChallengeInfo, other.EffigyChallengeInfo)) return false;
      if (!object.Equals(EffigyInfo, other.EffigyInfo)) return false;
      if (!object.Equals(ElectroherculesBattleInfo, other.ElectroherculesBattleInfo)) return false;
      if (!object.Equals(ExpeditionInfo, other.ExpeditionInfo)) return false;
      if (!object.Equals(FindHilichurlInfo, other.FindHilichurlInfo)) return false;
      if (!object.Equals(FleurFairInfo, other.FleurFairInfo)) return false;
      if (!object.Equals(FlightInfo, other.FlightInfo)) return false;
      if (!object.Equals(FungusFighterInfo, other.FungusFighterInfo)) return false;
      if (!object.Equals(GachaInfo, other.GachaInfo)) return false;
      if (!object.Equals(GearInfo, other.GearInfo)) return false;
      if (!object.Equals(GravenInnocenceInfo, other.GravenInnocenceInfo)) return false;
      if (!object.Equals(HachiInfo, other.HachiInfo)) return false;
      if (!object.Equals(HideAndSeekInfo, other.HideAndSeekInfo)) return false;
      if (!object.Equals(InstableSprayInfo, other.InstableSprayInfo)) return false;
      if (!object.Equals(IrodoriInfo, other.IrodoriInfo)) return false;
      if (!object.Equals(IslandPartyInfo, other.IslandPartyInfo)) return false;
      if (!object.Equals(LanternRiteActivityInfo, other.LanternRiteActivityInfo)) return false;
      if (!object.Equals(LuminanceStoneChallengeInfo, other.LuminanceStoneChallengeInfo)) return false;
      if (!object.Equals(LunaRiteInfo, other.LunaRiteInfo)) return false;
      if (!object.Equals(MichiaeMatsuriInfo, other.MichiaeMatsuriInfo)) return false;
      if (!object.Equals(MistTrialActivityInfo, other.MistTrialActivityInfo)) return false;
      if (!object.Equals(MoonfinTrialInfo, other.MoonfinTrialInfo)) return false;
      if (!object.Equals(MuqadasPotionInfo, other.MuqadasPotionInfo)) return false;
      if (!object.Equals(MusicGameInfo, other.MusicGameInfo)) return false;
      if (!object.Equals(PhotoInfo, other.PhotoInfo)) return false;
      if (!object.Equals(PlantFlowerInfo, other.PlantFlowerInfo)) return false;
      if (!object.Equals(PotionInfo, other.PotionInfo)) return false;
      if (!object.Equals(RockBoardExploreInfo, other.RockBoardExploreInfo)) return false;
      if (!object.Equals(RogueDiaryInfo, other.RogueDiaryInfo)) return false;
      if (!object.Equals(RoguelikeDungoenInfo, other.RoguelikeDungoenInfo)) return false;
      if (!object.Equals(SalesmanInfo, other.SalesmanInfo)) return false;
      if (!object.Equals(SamLampInfo, other.SamLampInfo)) return false;
      if (!object.Equals(SeaLampInfo, other.SeaLampInfo)) return false;
      if (!object.Equals(SeaLampV3Info, other.SeaLampV3Info)) return false;
      if (!object.Equals(SpiceInfo, other.SpiceInfo)) return false;
      if (!object.Equals(SummerTimeInfo, other.SummerTimeInfo)) return false;
      if (!object.Equals(SummerTimeV2Info, other.SummerTimeV2Info)) return false;
      if (!object.Equals(SumoInfo, other.SumoInfo)) return false;
      if (!object.Equals(TanukiTravelActivityInfo, other.TanukiTravelActivityInfo)) return false;
      if (!object.Equals(TeamChainInfo, other.TeamChainInfo)) return false;
      if (!object.Equals(TreasureMapInfo, other.TreasureMapInfo)) return false;
      if (!object.Equals(TreasureSeelieInfo, other.TreasureSeelieInfo)) return false;
      if (!object.Equals(TrialAvatarInfo, other.TrialAvatarInfo)) return false;
      if (!object.Equals(UgcInfo, other.UgcInfo)) return false;
      if (!object.Equals(VintageInfo, other.VintageInfo)) return false;
      if (!object.Equals(WaterSpiritInfo, other.WaterSpiritInfo)) return false;
      if (!object.Equals(WindFieldInfo, other.WindFieldInfo)) return false;
      if (!object.Equals(WinterCampInfo, other.WinterCampInfo)) return false;
      if (DetailCase != other.DetailCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      hash ^= activityPushTipsDataList_.GetHashCode();
      if (ActivityType != 0) hash ^= ActivityType.GetHashCode();
      if (BeginTime != 0) hash ^= BeginTime.GetHashCode();
      if (CurScore != 0) hash ^= CurScore.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      hash ^= expireCondList_.GetHashCode();
      if (FirstDayStartTime != 0) hash ^= FirstDayStartTime.GetHashCode();
      if (IsBannerCleared != false) hash ^= IsBannerCleared.GetHashCode();
      if (IsCommonContentClosed != false) hash ^= IsCommonContentClosed.GetHashCode();
      if (IsFinished != false) hash ^= IsFinished.GetHashCode();
      if (IsHidden != false) hash ^= IsHidden.GetHashCode();
      if (IsPlayOpenAnim != false) hash ^= IsPlayOpenAnim.GetHashCode();
      if (IsQuickOpen != false) hash ^= IsQuickOpen.GetHashCode();
      if (IsStarting != false) hash ^= IsStarting.GetHashCode();
      hash ^= meetCondList_.GetHashCode();
      if (ScheduleId != 0) hash ^= ScheduleId.GetHashCode();
      if (ScoreLimit != 0) hash ^= ScoreLimit.GetHashCode();
      if (SelectedAvatarRewardId != 0) hash ^= SelectedAvatarRewardId.GetHashCode();
      hash ^= takenRewardList_.GetHashCode();
      hash ^= watcherInfoList_.GetHashCode();
      hash ^= ActivityCoinMap.GetHashCode();
      hash ^= WishGiftNumMap.GetHashCode();
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) hash ^= ArenaChallengeInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.AsterInfo) hash ^= AsterInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BartenderInfo) hash ^= BartenderInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BlessingInfo) hash ^= BlessingInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) hash ^= BlitzRushInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) hash ^= BounceConjuringInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BrickBreakerInfo) hash ^= BrickBreakerInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) hash ^= BuoyantCombatInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) hash ^= ChallnelerSlabInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) hash ^= CharAmusementInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ChessInfo) hash ^= ChessInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.CoinCollectInfo) hash ^= CoinCollectInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.CrucibleInfo) hash ^= CrucibleInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.CrystalLinkInfo) hash ^= CrystalLinkInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.DeliveryInfo) hash ^= DeliveryInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.DigInfo) hash ^= DigInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) hash ^= DragonSpineInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.DuelHeartInfo) hash ^= DuelHeartInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.EchoShellInfo) hash ^= EchoShellInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.EffigyChallengeInfo) hash ^= EffigyChallengeInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.EffigyInfo) hash ^= EffigyInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ElectroherculesBattleInfo) hash ^= ElectroherculesBattleInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) hash ^= ExpeditionInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) hash ^= FindHilichurlInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FleurFairInfo) hash ^= FleurFairInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FlightInfo) hash ^= FlightInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.FungusFighterInfo) hash ^= FungusFighterInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.GachaInfo) hash ^= GachaInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.GearInfo) hash ^= GearInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.GravenInnocenceInfo) hash ^= GravenInnocenceInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.HachiInfo) hash ^= HachiInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) hash ^= HideAndSeekInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.InstableSprayInfo) hash ^= InstableSprayInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.IrodoriInfo) hash ^= IrodoriInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.IslandPartyInfo) hash ^= IslandPartyInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.LanternRiteActivityInfo) hash ^= LanternRiteActivityInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.LuminanceStoneChallengeInfo) hash ^= LuminanceStoneChallengeInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) hash ^= LunaRiteInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MichiaeMatsuriInfo) hash ^= MichiaeMatsuriInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) hash ^= MistTrialActivityInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) hash ^= MoonfinTrialInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MuqadasPotionInfo) hash ^= MuqadasPotionInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.MusicGameInfo) hash ^= MusicGameInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.PhotoInfo) hash ^= PhotoInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) hash ^= PlantFlowerInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.PotionInfo) hash ^= PotionInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.RockBoardExploreInfo) hash ^= RockBoardExploreInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.RogueDiaryInfo) hash ^= RogueDiaryInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) hash ^= RoguelikeDungoenInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SalesmanInfo) hash ^= SalesmanInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SamLampInfo) hash ^= SamLampInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SeaLampInfo) hash ^= SeaLampInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SeaLampV3Info) hash ^= SeaLampV3Info.GetHashCode();
      if (detailCase_ == DetailOneofCase.SpiceInfo) hash ^= SpiceInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) hash ^= SummerTimeInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.SummerTimeV2Info) hash ^= SummerTimeV2Info.GetHashCode();
      if (detailCase_ == DetailOneofCase.SumoInfo) hash ^= SumoInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.TanukiTravelActivityInfo) hash ^= TanukiTravelActivityInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.TeamChainInfo) hash ^= TeamChainInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) hash ^= TreasureMapInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.TreasureSeelieInfo) hash ^= TreasureSeelieInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) hash ^= TrialAvatarInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.UgcInfo) hash ^= UgcInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.VintageInfo) hash ^= VintageInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) hash ^= WaterSpiritInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.WindFieldInfo) hash ^= WindFieldInfo.GetHashCode();
      if (detailCase_ == DetailOneofCase.WinterCampInfo) hash ^= WinterCampInfo.GetHashCode();
      hash ^= (int) detailCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(TrialAvatarInfo);
      }
      watcherInfoList_.WriteTo(output, _repeated_watcherInfoList_codec);
      expireCondList_.WriteTo(output, _repeated_expireCondList_codec);
      if (ActivityType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ActivityType);
      }
      if (EndTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EndTime);
      }
      if (IsFinished != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsFinished);
      }
      if (detailCase_ == DetailOneofCase.SamLampInfo) {
        output.WriteRawTag(58);
        output.WriteMessage(SamLampInfo);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(BeginTime);
      }
      if (IsStarting != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsStarting);
      }
      meetCondList_.WriteTo(output, _repeated_meetCondList_codec);
      if (detailCase_ == DetailOneofCase.SalesmanInfo) {
        output.WriteRawTag(90);
        output.WriteMessage(SalesmanInfo);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(ActivityId);
      }
      if (IsPlayOpenAnim != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsPlayOpenAnim);
      }
      if (detailCase_ == DetailOneofCase.CrucibleInfo) {
        output.WriteRawTag(114);
        output.WriteMessage(CrucibleInfo);
      }
      if (ScheduleId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ScheduleId);
      }
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(PlantFlowerInfo);
      }
      if (IsBannerCleared != false) {
        output.WriteRawTag(176, 6);
        output.WriteBool(IsBannerCleared);
      }
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
        output.WriteRawTag(226, 9);
        output.WriteMessage(MistTrialActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.MichiaeMatsuriInfo) {
        output.WriteRawTag(146, 12);
        output.WriteMessage(MichiaeMatsuriInfo);
      }
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
        output.WriteRawTag(210, 12);
        output.WriteMessage(ExpeditionInfo);
      }
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
        output.WriteRawTag(218, 13);
        output.WriteMessage(RoguelikeDungoenInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampV3Info) {
        output.WriteRawTag(218, 15);
        output.WriteMessage(SeaLampV3Info);
      }
      if (detailCase_ == DetailOneofCase.PhotoInfo) {
        output.WriteRawTag(194, 20);
        output.WriteMessage(PhotoInfo);
      }
      takenRewardList_.WriteTo(output, _repeated_takenRewardList_codec);
      if (detailCase_ == DetailOneofCase.WindFieldInfo) {
        output.WriteRawTag(130, 22);
        output.WriteMessage(WindFieldInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyInfo) {
        output.WriteRawTag(186, 24);
        output.WriteMessage(EffigyInfo);
      }
      if (detailCase_ == DetailOneofCase.DigInfo) {
        output.WriteRawTag(154, 25);
        output.WriteMessage(DigInfo);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        output.WriteRawTag(218, 26);
        output.WriteMessage(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.VintageInfo) {
        output.WriteRawTag(234, 27);
        output.WriteMessage(VintageInfo);
      }
      if (detailCase_ == DetailOneofCase.MusicGameInfo) {
        output.WriteRawTag(226, 28);
        output.WriteMessage(MusicGameInfo);
      }
      if (detailCase_ == DetailOneofCase.FungusFighterInfo) {
        output.WriteRawTag(210, 30);
        output.WriteMessage(FungusFighterInfo);
      }
      if (detailCase_ == DetailOneofCase.HachiInfo) {
        output.WriteRawTag(218, 30);
        output.WriteMessage(HachiInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampInfo) {
        output.WriteRawTag(242, 30);
        output.WriteMessage(SeaLampInfo);
      }
      if (detailCase_ == DetailOneofCase.AsterInfo) {
        output.WriteRawTag(234, 34);
        output.WriteMessage(AsterInfo);
      }
      if (FirstDayStartTime != 0) {
        output.WriteRawTag(128, 37);
        output.WriteUInt32(FirstDayStartTime);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeV2Info) {
        output.WriteRawTag(242, 38);
        output.WriteMessage(SummerTimeV2Info);
      }
      activityCoinMap_.WriteTo(output, _map_activityCoinMap_codec);
      if (detailCase_ == DetailOneofCase.UgcInfo) {
        output.WriteRawTag(250, 43);
        output.WriteMessage(UgcInfo);
      }
      if (detailCase_ == DetailOneofCase.GearInfo) {
        output.WriteRawTag(146, 45);
        output.WriteMessage(GearInfo);
      }
      if (detailCase_ == DetailOneofCase.IrodoriInfo) {
        output.WriteRawTag(242, 46);
        output.WriteMessage(IrodoriInfo);
      }
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
        output.WriteRawTag(250, 47);
        output.WriteMessage(BounceConjuringInfo);
      }
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
        output.WriteRawTag(210, 49);
        output.WriteMessage(BlitzRushInfo);
      }
      if (detailCase_ == DetailOneofCase.RogueDiaryInfo) {
        output.WriteRawTag(226, 50);
        output.WriteMessage(RogueDiaryInfo);
      }
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
        output.WriteRawTag(242, 50);
        output.WriteMessage(LunaRiteInfo);
      }
      if (detailCase_ == DetailOneofCase.GachaInfo) {
        output.WriteRawTag(202, 51);
        output.WriteMessage(GachaInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        output.WriteRawTag(202, 53);
        output.WriteMessage(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
        output.WriteRawTag(218, 53);
        output.WriteMessage(ArenaChallengeInfo);
      }
      activityPushTipsDataList_.WriteTo(output, _repeated_activityPushTipsDataList_codec);
      if (IsHidden != false) {
        output.WriteRawTag(184, 57);
        output.WriteBool(IsHidden);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        output.WriteRawTag(250, 57);
        output.WriteMessage(ChessInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureSeelieInfo) {
        output.WriteRawTag(178, 60);
        output.WriteMessage(TreasureSeelieInfo);
      }
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
        output.WriteRawTag(186, 63);
        output.WriteMessage(ChallnelerSlabInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyChallengeInfo) {
        output.WriteRawTag(138, 64);
        output.WriteMessage(EffigyChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.InstableSprayInfo) {
        output.WriteRawTag(154, 65);
        output.WriteMessage(InstableSprayInfo);
      }
      if (detailCase_ == DetailOneofCase.RockBoardExploreInfo) {
        output.WriteRawTag(178, 67);
        output.WriteMessage(RockBoardExploreInfo);
      }
      if (detailCase_ == DetailOneofCase.WinterCampInfo) {
        output.WriteRawTag(218, 67);
        output.WriteMessage(WinterCampInfo);
      }
      if (detailCase_ == DetailOneofCase.DeliveryInfo) {
        output.WriteRawTag(162, 68);
        output.WriteMessage(DeliveryInfo);
      }
      if (detailCase_ == DetailOneofCase.EchoShellInfo) {
        output.WriteRawTag(202, 69);
        output.WriteMessage(EchoShellInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
        output.WriteRawTag(210, 69);
        output.WriteMessage(TreasureMapInfo);
      }
      if (detailCase_ == DetailOneofCase.MuqadasPotionInfo) {
        output.WriteRawTag(170, 72);
        output.WriteMessage(MuqadasPotionInfo);
      }
      if (detailCase_ == DetailOneofCase.DuelHeartInfo) {
        output.WriteRawTag(170, 73);
        output.WriteMessage(DuelHeartInfo);
      }
      if (detailCase_ == DetailOneofCase.CrystalLinkInfo) {
        output.WriteRawTag(210, 76);
        output.WriteMessage(CrystalLinkInfo);
      }
      if (detailCase_ == DetailOneofCase.SumoInfo) {
        output.WriteRawTag(234, 78);
        output.WriteMessage(SumoInfo);
      }
      if (detailCase_ == DetailOneofCase.PotionInfo) {
        output.WriteRawTag(202, 79);
        output.WriteMessage(PotionInfo);
      }
      if (SelectedAvatarRewardId != 0) {
        output.WriteRawTag(208, 80);
        output.WriteUInt32(SelectedAvatarRewardId);
      }
      if (detailCase_ == DetailOneofCase.LuminanceStoneChallengeInfo) {
        output.WriteRawTag(226, 81);
        output.WriteMessage(LuminanceStoneChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.FlightInfo) {
        output.WriteRawTag(170, 85);
        output.WriteMessage(FlightInfo);
      }
      if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
        output.WriteRawTag(202, 85);
        output.WriteMessage(BrickBreakerInfo);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
        output.WriteRawTag(226, 85);
        output.WriteMessage(SummerTimeInfo);
      }
      wishGiftNumMap_.WriteTo(output, _map_wishGiftNumMap_codec);
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
        output.WriteRawTag(154, 88);
        output.WriteMessage(FindHilichurlInfo);
      }
      if (IsQuickOpen != false) {
        output.WriteRawTag(200, 90);
        output.WriteBool(IsQuickOpen);
      }
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
        output.WriteRawTag(194, 93);
        output.WriteMessage(CharAmusementInfo);
      }
      if (detailCase_ == DetailOneofCase.TeamChainInfo) {
        output.WriteRawTag(218, 96);
        output.WriteMessage(TeamChainInfo);
      }
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
        output.WriteRawTag(162, 99);
        output.WriteMessage(MoonfinTrialInfo);
      }
      if (detailCase_ == DetailOneofCase.ElectroherculesBattleInfo) {
        output.WriteRawTag(242, 101);
        output.WriteMessage(ElectroherculesBattleInfo);
      }
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
        output.WriteRawTag(218, 104);
        output.WriteMessage(WaterSpiritInfo);
      }
      if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
        output.WriteRawTag(250, 104);
        output.WriteMessage(CoinCollectInfo);
      }
      if (detailCase_ == DetailOneofCase.BartenderInfo) {
        output.WriteRawTag(234, 107);
        output.WriteMessage(BartenderInfo);
      }
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
        output.WriteRawTag(250, 107);
        output.WriteMessage(DragonSpineInfo);
      }
      if (detailCase_ == DetailOneofCase.TanukiTravelActivityInfo) {
        output.WriteRawTag(162, 112);
        output.WriteMessage(TanukiTravelActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
        output.WriteRawTag(146, 115);
        output.WriteMessage(BuoyantCombatInfo);
      }
      if (detailCase_ == DetailOneofCase.BlessingInfo) {
        output.WriteRawTag(234, 116);
        output.WriteMessage(BlessingInfo);
      }
      if (detailCase_ == DetailOneofCase.LanternRiteActivityInfo) {
        output.WriteRawTag(162, 117);
        output.WriteMessage(LanternRiteActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.IslandPartyInfo) {
        output.WriteRawTag(234, 117);
        output.WriteMessage(IslandPartyInfo);
      }
      if (detailCase_ == DetailOneofCase.SpiceInfo) {
        output.WriteRawTag(154, 118);
        output.WriteMessage(SpiceInfo);
      }
      if (CurScore != 0) {
        output.WriteRawTag(144, 119);
        output.WriteUInt32(CurScore);
      }
      if (detailCase_ == DetailOneofCase.GravenInnocenceInfo) {
        output.WriteRawTag(186, 119);
        output.WriteMessage(GravenInnocenceInfo);
      }
      if (ScoreLimit != 0) {
        output.WriteRawTag(176, 122);
        output.WriteUInt32(ScoreLimit);
      }
      if (IsCommonContentClosed != false) {
        output.WriteRawTag(216, 122);
        output.WriteBool(IsCommonContentClosed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(TrialAvatarInfo);
      }
      watcherInfoList_.WriteTo(ref output, _repeated_watcherInfoList_codec);
      expireCondList_.WriteTo(ref output, _repeated_expireCondList_codec);
      if (ActivityType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ActivityType);
      }
      if (EndTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EndTime);
      }
      if (IsFinished != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsFinished);
      }
      if (detailCase_ == DetailOneofCase.SamLampInfo) {
        output.WriteRawTag(58);
        output.WriteMessage(SamLampInfo);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(BeginTime);
      }
      if (IsStarting != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsStarting);
      }
      meetCondList_.WriteTo(ref output, _repeated_meetCondList_codec);
      if (detailCase_ == DetailOneofCase.SalesmanInfo) {
        output.WriteRawTag(90);
        output.WriteMessage(SalesmanInfo);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(ActivityId);
      }
      if (IsPlayOpenAnim != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsPlayOpenAnim);
      }
      if (detailCase_ == DetailOneofCase.CrucibleInfo) {
        output.WriteRawTag(114);
        output.WriteMessage(CrucibleInfo);
      }
      if (ScheduleId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ScheduleId);
      }
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(PlantFlowerInfo);
      }
      if (IsBannerCleared != false) {
        output.WriteRawTag(176, 6);
        output.WriteBool(IsBannerCleared);
      }
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
        output.WriteRawTag(226, 9);
        output.WriteMessage(MistTrialActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.MichiaeMatsuriInfo) {
        output.WriteRawTag(146, 12);
        output.WriteMessage(MichiaeMatsuriInfo);
      }
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
        output.WriteRawTag(210, 12);
        output.WriteMessage(ExpeditionInfo);
      }
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
        output.WriteRawTag(218, 13);
        output.WriteMessage(RoguelikeDungoenInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampV3Info) {
        output.WriteRawTag(218, 15);
        output.WriteMessage(SeaLampV3Info);
      }
      if (detailCase_ == DetailOneofCase.PhotoInfo) {
        output.WriteRawTag(194, 20);
        output.WriteMessage(PhotoInfo);
      }
      takenRewardList_.WriteTo(ref output, _repeated_takenRewardList_codec);
      if (detailCase_ == DetailOneofCase.WindFieldInfo) {
        output.WriteRawTag(130, 22);
        output.WriteMessage(WindFieldInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyInfo) {
        output.WriteRawTag(186, 24);
        output.WriteMessage(EffigyInfo);
      }
      if (detailCase_ == DetailOneofCase.DigInfo) {
        output.WriteRawTag(154, 25);
        output.WriteMessage(DigInfo);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        output.WriteRawTag(218, 26);
        output.WriteMessage(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.VintageInfo) {
        output.WriteRawTag(234, 27);
        output.WriteMessage(VintageInfo);
      }
      if (detailCase_ == DetailOneofCase.MusicGameInfo) {
        output.WriteRawTag(226, 28);
        output.WriteMessage(MusicGameInfo);
      }
      if (detailCase_ == DetailOneofCase.FungusFighterInfo) {
        output.WriteRawTag(210, 30);
        output.WriteMessage(FungusFighterInfo);
      }
      if (detailCase_ == DetailOneofCase.HachiInfo) {
        output.WriteRawTag(218, 30);
        output.WriteMessage(HachiInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampInfo) {
        output.WriteRawTag(242, 30);
        output.WriteMessage(SeaLampInfo);
      }
      if (detailCase_ == DetailOneofCase.AsterInfo) {
        output.WriteRawTag(234, 34);
        output.WriteMessage(AsterInfo);
      }
      if (FirstDayStartTime != 0) {
        output.WriteRawTag(128, 37);
        output.WriteUInt32(FirstDayStartTime);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeV2Info) {
        output.WriteRawTag(242, 38);
        output.WriteMessage(SummerTimeV2Info);
      }
      activityCoinMap_.WriteTo(ref output, _map_activityCoinMap_codec);
      if (detailCase_ == DetailOneofCase.UgcInfo) {
        output.WriteRawTag(250, 43);
        output.WriteMessage(UgcInfo);
      }
      if (detailCase_ == DetailOneofCase.GearInfo) {
        output.WriteRawTag(146, 45);
        output.WriteMessage(GearInfo);
      }
      if (detailCase_ == DetailOneofCase.IrodoriInfo) {
        output.WriteRawTag(242, 46);
        output.WriteMessage(IrodoriInfo);
      }
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
        output.WriteRawTag(250, 47);
        output.WriteMessage(BounceConjuringInfo);
      }
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
        output.WriteRawTag(210, 49);
        output.WriteMessage(BlitzRushInfo);
      }
      if (detailCase_ == DetailOneofCase.RogueDiaryInfo) {
        output.WriteRawTag(226, 50);
        output.WriteMessage(RogueDiaryInfo);
      }
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
        output.WriteRawTag(242, 50);
        output.WriteMessage(LunaRiteInfo);
      }
      if (detailCase_ == DetailOneofCase.GachaInfo) {
        output.WriteRawTag(202, 51);
        output.WriteMessage(GachaInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        output.WriteRawTag(202, 53);
        output.WriteMessage(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
        output.WriteRawTag(218, 53);
        output.WriteMessage(ArenaChallengeInfo);
      }
      activityPushTipsDataList_.WriteTo(ref output, _repeated_activityPushTipsDataList_codec);
      if (IsHidden != false) {
        output.WriteRawTag(184, 57);
        output.WriteBool(IsHidden);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        output.WriteRawTag(250, 57);
        output.WriteMessage(ChessInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureSeelieInfo) {
        output.WriteRawTag(178, 60);
        output.WriteMessage(TreasureSeelieInfo);
      }
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
        output.WriteRawTag(186, 63);
        output.WriteMessage(ChallnelerSlabInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyChallengeInfo) {
        output.WriteRawTag(138, 64);
        output.WriteMessage(EffigyChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.InstableSprayInfo) {
        output.WriteRawTag(154, 65);
        output.WriteMessage(InstableSprayInfo);
      }
      if (detailCase_ == DetailOneofCase.RockBoardExploreInfo) {
        output.WriteRawTag(178, 67);
        output.WriteMessage(RockBoardExploreInfo);
      }
      if (detailCase_ == DetailOneofCase.WinterCampInfo) {
        output.WriteRawTag(218, 67);
        output.WriteMessage(WinterCampInfo);
      }
      if (detailCase_ == DetailOneofCase.DeliveryInfo) {
        output.WriteRawTag(162, 68);
        output.WriteMessage(DeliveryInfo);
      }
      if (detailCase_ == DetailOneofCase.EchoShellInfo) {
        output.WriteRawTag(202, 69);
        output.WriteMessage(EchoShellInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
        output.WriteRawTag(210, 69);
        output.WriteMessage(TreasureMapInfo);
      }
      if (detailCase_ == DetailOneofCase.MuqadasPotionInfo) {
        output.WriteRawTag(170, 72);
        output.WriteMessage(MuqadasPotionInfo);
      }
      if (detailCase_ == DetailOneofCase.DuelHeartInfo) {
        output.WriteRawTag(170, 73);
        output.WriteMessage(DuelHeartInfo);
      }
      if (detailCase_ == DetailOneofCase.CrystalLinkInfo) {
        output.WriteRawTag(210, 76);
        output.WriteMessage(CrystalLinkInfo);
      }
      if (detailCase_ == DetailOneofCase.SumoInfo) {
        output.WriteRawTag(234, 78);
        output.WriteMessage(SumoInfo);
      }
      if (detailCase_ == DetailOneofCase.PotionInfo) {
        output.WriteRawTag(202, 79);
        output.WriteMessage(PotionInfo);
      }
      if (SelectedAvatarRewardId != 0) {
        output.WriteRawTag(208, 80);
        output.WriteUInt32(SelectedAvatarRewardId);
      }
      if (detailCase_ == DetailOneofCase.LuminanceStoneChallengeInfo) {
        output.WriteRawTag(226, 81);
        output.WriteMessage(LuminanceStoneChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.FlightInfo) {
        output.WriteRawTag(170, 85);
        output.WriteMessage(FlightInfo);
      }
      if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
        output.WriteRawTag(202, 85);
        output.WriteMessage(BrickBreakerInfo);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
        output.WriteRawTag(226, 85);
        output.WriteMessage(SummerTimeInfo);
      }
      wishGiftNumMap_.WriteTo(ref output, _map_wishGiftNumMap_codec);
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
        output.WriteRawTag(154, 88);
        output.WriteMessage(FindHilichurlInfo);
      }
      if (IsQuickOpen != false) {
        output.WriteRawTag(200, 90);
        output.WriteBool(IsQuickOpen);
      }
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
        output.WriteRawTag(194, 93);
        output.WriteMessage(CharAmusementInfo);
      }
      if (detailCase_ == DetailOneofCase.TeamChainInfo) {
        output.WriteRawTag(218, 96);
        output.WriteMessage(TeamChainInfo);
      }
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
        output.WriteRawTag(162, 99);
        output.WriteMessage(MoonfinTrialInfo);
      }
      if (detailCase_ == DetailOneofCase.ElectroherculesBattleInfo) {
        output.WriteRawTag(242, 101);
        output.WriteMessage(ElectroherculesBattleInfo);
      }
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
        output.WriteRawTag(218, 104);
        output.WriteMessage(WaterSpiritInfo);
      }
      if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
        output.WriteRawTag(250, 104);
        output.WriteMessage(CoinCollectInfo);
      }
      if (detailCase_ == DetailOneofCase.BartenderInfo) {
        output.WriteRawTag(234, 107);
        output.WriteMessage(BartenderInfo);
      }
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
        output.WriteRawTag(250, 107);
        output.WriteMessage(DragonSpineInfo);
      }
      if (detailCase_ == DetailOneofCase.TanukiTravelActivityInfo) {
        output.WriteRawTag(162, 112);
        output.WriteMessage(TanukiTravelActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
        output.WriteRawTag(146, 115);
        output.WriteMessage(BuoyantCombatInfo);
      }
      if (detailCase_ == DetailOneofCase.BlessingInfo) {
        output.WriteRawTag(234, 116);
        output.WriteMessage(BlessingInfo);
      }
      if (detailCase_ == DetailOneofCase.LanternRiteActivityInfo) {
        output.WriteRawTag(162, 117);
        output.WriteMessage(LanternRiteActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.IslandPartyInfo) {
        output.WriteRawTag(234, 117);
        output.WriteMessage(IslandPartyInfo);
      }
      if (detailCase_ == DetailOneofCase.SpiceInfo) {
        output.WriteRawTag(154, 118);
        output.WriteMessage(SpiceInfo);
      }
      if (CurScore != 0) {
        output.WriteRawTag(144, 119);
        output.WriteUInt32(CurScore);
      }
      if (detailCase_ == DetailOneofCase.GravenInnocenceInfo) {
        output.WriteRawTag(186, 119);
        output.WriteMessage(GravenInnocenceInfo);
      }
      if (ScoreLimit != 0) {
        output.WriteRawTag(176, 122);
        output.WriteUInt32(ScoreLimit);
      }
      if (IsCommonContentClosed != false) {
        output.WriteRawTag(216, 122);
        output.WriteBool(IsCommonContentClosed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActivityId);
      }
      size += activityPushTipsDataList_.CalculateSize(_repeated_activityPushTipsDataList_codec);
      if (ActivityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActivityType);
      }
      if (BeginTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BeginTime);
      }
      if (CurScore != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CurScore);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndTime);
      }
      size += expireCondList_.CalculateSize(_repeated_expireCondList_codec);
      if (FirstDayStartTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FirstDayStartTime);
      }
      if (IsBannerCleared != false) {
        size += 2 + 1;
      }
      if (IsCommonContentClosed != false) {
        size += 2 + 1;
      }
      if (IsFinished != false) {
        size += 1 + 1;
      }
      if (IsHidden != false) {
        size += 2 + 1;
      }
      if (IsPlayOpenAnim != false) {
        size += 1 + 1;
      }
      if (IsQuickOpen != false) {
        size += 2 + 1;
      }
      if (IsStarting != false) {
        size += 1 + 1;
      }
      size += meetCondList_.CalculateSize(_repeated_meetCondList_codec);
      if (ScheduleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScheduleId);
      }
      if (ScoreLimit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScoreLimit);
      }
      if (SelectedAvatarRewardId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SelectedAvatarRewardId);
      }
      size += takenRewardList_.CalculateSize(_repeated_takenRewardList_codec);
      size += watcherInfoList_.CalculateSize(_repeated_watcherInfoList_codec);
      size += activityCoinMap_.CalculateSize(_map_activityCoinMap_codec);
      size += wishGiftNumMap_.CalculateSize(_map_wishGiftNumMap_codec);
      if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ArenaChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.AsterInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AsterInfo);
      }
      if (detailCase_ == DetailOneofCase.BartenderInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BartenderInfo);
      }
      if (detailCase_ == DetailOneofCase.BlessingInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlessingInfo);
      }
      if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlitzRushInfo);
      }
      if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BounceConjuringInfo);
      }
      if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BrickBreakerInfo);
      }
      if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BuoyantCombatInfo);
      }
      if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChallnelerSlabInfo);
      }
      if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CharAmusementInfo);
      }
      if (detailCase_ == DetailOneofCase.ChessInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChessInfo);
      }
      if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CoinCollectInfo);
      }
      if (detailCase_ == DetailOneofCase.CrucibleInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CrucibleInfo);
      }
      if (detailCase_ == DetailOneofCase.CrystalLinkInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CrystalLinkInfo);
      }
      if (detailCase_ == DetailOneofCase.DeliveryInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeliveryInfo);
      }
      if (detailCase_ == DetailOneofCase.DigInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DigInfo);
      }
      if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DragonSpineInfo);
      }
      if (detailCase_ == DetailOneofCase.DuelHeartInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DuelHeartInfo);
      }
      if (detailCase_ == DetailOneofCase.EchoShellInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EchoShellInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyChallengeInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EffigyChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.EffigyInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EffigyInfo);
      }
      if (detailCase_ == DetailOneofCase.ElectroherculesBattleInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ElectroherculesBattleInfo);
      }
      if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpeditionInfo);
      }
      if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FindHilichurlInfo);
      }
      if (detailCase_ == DetailOneofCase.FleurFairInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FleurFairInfo);
      }
      if (detailCase_ == DetailOneofCase.FlightInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FlightInfo);
      }
      if (detailCase_ == DetailOneofCase.FungusFighterInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FungusFighterInfo);
      }
      if (detailCase_ == DetailOneofCase.GachaInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GachaInfo);
      }
      if (detailCase_ == DetailOneofCase.GearInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GearInfo);
      }
      if (detailCase_ == DetailOneofCase.GravenInnocenceInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GravenInnocenceInfo);
      }
      if (detailCase_ == DetailOneofCase.HachiInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HachiInfo);
      }
      if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HideAndSeekInfo);
      }
      if (detailCase_ == DetailOneofCase.InstableSprayInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(InstableSprayInfo);
      }
      if (detailCase_ == DetailOneofCase.IrodoriInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IrodoriInfo);
      }
      if (detailCase_ == DetailOneofCase.IslandPartyInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IslandPartyInfo);
      }
      if (detailCase_ == DetailOneofCase.LanternRiteActivityInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LanternRiteActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.LuminanceStoneChallengeInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LuminanceStoneChallengeInfo);
      }
      if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LunaRiteInfo);
      }
      if (detailCase_ == DetailOneofCase.MichiaeMatsuriInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MichiaeMatsuriInfo);
      }
      if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MistTrialActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MoonfinTrialInfo);
      }
      if (detailCase_ == DetailOneofCase.MuqadasPotionInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MuqadasPotionInfo);
      }
      if (detailCase_ == DetailOneofCase.MusicGameInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MusicGameInfo);
      }
      if (detailCase_ == DetailOneofCase.PhotoInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PhotoInfo);
      }
      if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlantFlowerInfo);
      }
      if (detailCase_ == DetailOneofCase.PotionInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PotionInfo);
      }
      if (detailCase_ == DetailOneofCase.RockBoardExploreInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RockBoardExploreInfo);
      }
      if (detailCase_ == DetailOneofCase.RogueDiaryInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RogueDiaryInfo);
      }
      if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoguelikeDungoenInfo);
      }
      if (detailCase_ == DetailOneofCase.SalesmanInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SalesmanInfo);
      }
      if (detailCase_ == DetailOneofCase.SamLampInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SamLampInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SeaLampInfo);
      }
      if (detailCase_ == DetailOneofCase.SeaLampV3Info) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SeaLampV3Info);
      }
      if (detailCase_ == DetailOneofCase.SpiceInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SpiceInfo);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SummerTimeInfo);
      }
      if (detailCase_ == DetailOneofCase.SummerTimeV2Info) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SummerTimeV2Info);
      }
      if (detailCase_ == DetailOneofCase.SumoInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SumoInfo);
      }
      if (detailCase_ == DetailOneofCase.TanukiTravelActivityInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TanukiTravelActivityInfo);
      }
      if (detailCase_ == DetailOneofCase.TeamChainInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TeamChainInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TreasureMapInfo);
      }
      if (detailCase_ == DetailOneofCase.TreasureSeelieInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TreasureSeelieInfo);
      }
      if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrialAvatarInfo);
      }
      if (detailCase_ == DetailOneofCase.UgcInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UgcInfo);
      }
      if (detailCase_ == DetailOneofCase.VintageInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VintageInfo);
      }
      if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaterSpiritInfo);
      }
      if (detailCase_ == DetailOneofCase.WindFieldInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WindFieldInfo);
      }
      if (detailCase_ == DetailOneofCase.WinterCampInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WinterCampInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      activityPushTipsDataList_.Add(other.activityPushTipsDataList_);
      if (other.ActivityType != 0) {
        ActivityType = other.ActivityType;
      }
      if (other.BeginTime != 0) {
        BeginTime = other.BeginTime;
      }
      if (other.CurScore != 0) {
        CurScore = other.CurScore;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      expireCondList_.Add(other.expireCondList_);
      if (other.FirstDayStartTime != 0) {
        FirstDayStartTime = other.FirstDayStartTime;
      }
      if (other.IsBannerCleared != false) {
        IsBannerCleared = other.IsBannerCleared;
      }
      if (other.IsCommonContentClosed != false) {
        IsCommonContentClosed = other.IsCommonContentClosed;
      }
      if (other.IsFinished != false) {
        IsFinished = other.IsFinished;
      }
      if (other.IsHidden != false) {
        IsHidden = other.IsHidden;
      }
      if (other.IsPlayOpenAnim != false) {
        IsPlayOpenAnim = other.IsPlayOpenAnim;
      }
      if (other.IsQuickOpen != false) {
        IsQuickOpen = other.IsQuickOpen;
      }
      if (other.IsStarting != false) {
        IsStarting = other.IsStarting;
      }
      meetCondList_.Add(other.meetCondList_);
      if (other.ScheduleId != 0) {
        ScheduleId = other.ScheduleId;
      }
      if (other.ScoreLimit != 0) {
        ScoreLimit = other.ScoreLimit;
      }
      if (other.SelectedAvatarRewardId != 0) {
        SelectedAvatarRewardId = other.SelectedAvatarRewardId;
      }
      takenRewardList_.Add(other.takenRewardList_);
      watcherInfoList_.Add(other.watcherInfoList_);
      activityCoinMap_.Add(other.activityCoinMap_);
      wishGiftNumMap_.Add(other.wishGiftNumMap_);
      switch (other.DetailCase) {
        case DetailOneofCase.ArenaChallengeInfo:
          if (ArenaChallengeInfo == null) {
            ArenaChallengeInfo = new global::MiHomo.Protos.ArenaChallengeActivityDetailInfo();
          }
          ArenaChallengeInfo.MergeFrom(other.ArenaChallengeInfo);
          break;
        case DetailOneofCase.AsterInfo:
          if (AsterInfo == null) {
            AsterInfo = new global::MiHomo.Protos.AsterActivityDetailInfo();
          }
          AsterInfo.MergeFrom(other.AsterInfo);
          break;
        case DetailOneofCase.BartenderInfo:
          if (BartenderInfo == null) {
            BartenderInfo = new global::MiHomo.Protos.BartenderActivityDetailInfo();
          }
          BartenderInfo.MergeFrom(other.BartenderInfo);
          break;
        case DetailOneofCase.BlessingInfo:
          if (BlessingInfo == null) {
            BlessingInfo = new global::MiHomo.Protos.BlessingActivityDetailInfo();
          }
          BlessingInfo.MergeFrom(other.BlessingInfo);
          break;
        case DetailOneofCase.BlitzRushInfo:
          if (BlitzRushInfo == null) {
            BlitzRushInfo = new global::MiHomo.Protos.BlitzRushActivityDetailInfo();
          }
          BlitzRushInfo.MergeFrom(other.BlitzRushInfo);
          break;
        case DetailOneofCase.BounceConjuringInfo:
          if (BounceConjuringInfo == null) {
            BounceConjuringInfo = new global::MiHomo.Protos.BounceConjuringActivityDetailInfo();
          }
          BounceConjuringInfo.MergeFrom(other.BounceConjuringInfo);
          break;
        case DetailOneofCase.BrickBreakerInfo:
          if (BrickBreakerInfo == null) {
            BrickBreakerInfo = new global::MiHomo.Protos.BrickBreakerDetailInfo();
          }
          BrickBreakerInfo.MergeFrom(other.BrickBreakerInfo);
          break;
        case DetailOneofCase.BuoyantCombatInfo:
          if (BuoyantCombatInfo == null) {
            BuoyantCombatInfo = new global::MiHomo.Protos.BuoyantCombatDetailInfo();
          }
          BuoyantCombatInfo.MergeFrom(other.BuoyantCombatInfo);
          break;
        case DetailOneofCase.ChallnelerSlabInfo:
          if (ChallnelerSlabInfo == null) {
            ChallnelerSlabInfo = new global::MiHomo.Protos.ChannelerSlabActivityDetailInfo();
          }
          ChallnelerSlabInfo.MergeFrom(other.ChallnelerSlabInfo);
          break;
        case DetailOneofCase.CharAmusementInfo:
          if (CharAmusementInfo == null) {
            CharAmusementInfo = new global::MiHomo.Protos.CharAmusementDetailInfo();
          }
          CharAmusementInfo.MergeFrom(other.CharAmusementInfo);
          break;
        case DetailOneofCase.ChessInfo:
          if (ChessInfo == null) {
            ChessInfo = new global::MiHomo.Protos.ChessActivityDetailInfo();
          }
          ChessInfo.MergeFrom(other.ChessInfo);
          break;
        case DetailOneofCase.CoinCollectInfo:
          if (CoinCollectInfo == null) {
            CoinCollectInfo = new global::MiHomo.Protos.CoinCollectDetailInfo();
          }
          CoinCollectInfo.MergeFrom(other.CoinCollectInfo);
          break;
        case DetailOneofCase.CrucibleInfo:
          if (CrucibleInfo == null) {
            CrucibleInfo = new global::MiHomo.Protos.CrucibleActivityDetailInfo();
          }
          CrucibleInfo.MergeFrom(other.CrucibleInfo);
          break;
        case DetailOneofCase.CrystalLinkInfo:
          if (CrystalLinkInfo == null) {
            CrystalLinkInfo = new global::MiHomo.Protos.CrystalLinkActivityDetailInfo();
          }
          CrystalLinkInfo.MergeFrom(other.CrystalLinkInfo);
          break;
        case DetailOneofCase.DeliveryInfo:
          if (DeliveryInfo == null) {
            DeliveryInfo = new global::MiHomo.Protos.DeliveryActivityDetailInfo();
          }
          DeliveryInfo.MergeFrom(other.DeliveryInfo);
          break;
        case DetailOneofCase.DigInfo:
          if (DigInfo == null) {
            DigInfo = new global::MiHomo.Protos.DigActivityDetailInfo();
          }
          DigInfo.MergeFrom(other.DigInfo);
          break;
        case DetailOneofCase.DragonSpineInfo:
          if (DragonSpineInfo == null) {
            DragonSpineInfo = new global::MiHomo.Protos.DragonSpineActivityDetailInfo();
          }
          DragonSpineInfo.MergeFrom(other.DragonSpineInfo);
          break;
        case DetailOneofCase.DuelHeartInfo:
          if (DuelHeartInfo == null) {
            DuelHeartInfo = new global::MiHomo.Protos.DuelHeartDetailInfo();
          }
          DuelHeartInfo.MergeFrom(other.DuelHeartInfo);
          break;
        case DetailOneofCase.EchoShellInfo:
          if (EchoShellInfo == null) {
            EchoShellInfo = new global::MiHomo.Protos.EchoShellDetailInfo();
          }
          EchoShellInfo.MergeFrom(other.EchoShellInfo);
          break;
        case DetailOneofCase.EffigyChallengeInfo:
          if (EffigyChallengeInfo == null) {
            EffigyChallengeInfo = new global::MiHomo.Protos.EffigyChallengeV2DetailInfo();
          }
          EffigyChallengeInfo.MergeFrom(other.EffigyChallengeInfo);
          break;
        case DetailOneofCase.EffigyInfo:
          if (EffigyInfo == null) {
            EffigyInfo = new global::MiHomo.Protos.EffigyActivityDetailInfo();
          }
          EffigyInfo.MergeFrom(other.EffigyInfo);
          break;
        case DetailOneofCase.ElectroherculesBattleInfo:
          if (ElectroherculesBattleInfo == null) {
            ElectroherculesBattleInfo = new global::MiHomo.Protos.ElectroherculesBattleDetailInfo();
          }
          ElectroherculesBattleInfo.MergeFrom(other.ElectroherculesBattleInfo);
          break;
        case DetailOneofCase.ExpeditionInfo:
          if (ExpeditionInfo == null) {
            ExpeditionInfo = new global::MiHomo.Protos.ExpeditionActivityDetailInfo();
          }
          ExpeditionInfo.MergeFrom(other.ExpeditionInfo);
          break;
        case DetailOneofCase.FindHilichurlInfo:
          if (FindHilichurlInfo == null) {
            FindHilichurlInfo = new global::MiHomo.Protos.FindHilichurlDetailInfo();
          }
          FindHilichurlInfo.MergeFrom(other.FindHilichurlInfo);
          break;
        case DetailOneofCase.FleurFairInfo:
          if (FleurFairInfo == null) {
            FleurFairInfo = new global::MiHomo.Protos.FleurFairActivityDetailInfo();
          }
          FleurFairInfo.MergeFrom(other.FleurFairInfo);
          break;
        case DetailOneofCase.FlightInfo:
          if (FlightInfo == null) {
            FlightInfo = new global::MiHomo.Protos.FlightActivityDetailInfo();
          }
          FlightInfo.MergeFrom(other.FlightInfo);
          break;
        case DetailOneofCase.FungusFighterInfo:
          if (FungusFighterInfo == null) {
            FungusFighterInfo = new global::MiHomo.Protos.FungusFighterDetailInfo();
          }
          FungusFighterInfo.MergeFrom(other.FungusFighterInfo);
          break;
        case DetailOneofCase.GachaInfo:
          if (GachaInfo == null) {
            GachaInfo = new global::MiHomo.Protos.GachaActivityDetailInfo();
          }
          GachaInfo.MergeFrom(other.GachaInfo);
          break;
        case DetailOneofCase.GearInfo:
          if (GearInfo == null) {
            GearInfo = new global::MiHomo.Protos.GearActivityDetailInfo();
          }
          GearInfo.MergeFrom(other.GearInfo);
          break;
        case DetailOneofCase.GravenInnocenceInfo:
          if (GravenInnocenceInfo == null) {
            GravenInnocenceInfo = new global::MiHomo.Protos.GravenInnocenceDetailInfo();
          }
          GravenInnocenceInfo.MergeFrom(other.GravenInnocenceInfo);
          break;
        case DetailOneofCase.HachiInfo:
          if (HachiInfo == null) {
            HachiInfo = new global::MiHomo.Protos.HachiActivityDetailInfo();
          }
          HachiInfo.MergeFrom(other.HachiInfo);
          break;
        case DetailOneofCase.HideAndSeekInfo:
          if (HideAndSeekInfo == null) {
            HideAndSeekInfo = new global::MiHomo.Protos.HideAndSeekActivityDetailInfo();
          }
          HideAndSeekInfo.MergeFrom(other.HideAndSeekInfo);
          break;
        case DetailOneofCase.InstableSprayInfo:
          if (InstableSprayInfo == null) {
            InstableSprayInfo = new global::MiHomo.Protos.InstableSprayDetailInfo();
          }
          InstableSprayInfo.MergeFrom(other.InstableSprayInfo);
          break;
        case DetailOneofCase.IrodoriInfo:
          if (IrodoriInfo == null) {
            IrodoriInfo = new global::MiHomo.Protos.IrodoriActivityDetailInfo();
          }
          IrodoriInfo.MergeFrom(other.IrodoriInfo);
          break;
        case DetailOneofCase.IslandPartyInfo:
          if (IslandPartyInfo == null) {
            IslandPartyInfo = new global::MiHomo.Protos.IslandPartyDetailInfo();
          }
          IslandPartyInfo.MergeFrom(other.IslandPartyInfo);
          break;
        case DetailOneofCase.LanternRiteActivityInfo:
          if (LanternRiteActivityInfo == null) {
            LanternRiteActivityInfo = new global::MiHomo.Protos.LanternRiteActivityDetailInfo();
          }
          LanternRiteActivityInfo.MergeFrom(other.LanternRiteActivityInfo);
          break;
        case DetailOneofCase.LuminanceStoneChallengeInfo:
          if (LuminanceStoneChallengeInfo == null) {
            LuminanceStoneChallengeInfo = new global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfo();
          }
          LuminanceStoneChallengeInfo.MergeFrom(other.LuminanceStoneChallengeInfo);
          break;
        case DetailOneofCase.LunaRiteInfo:
          if (LunaRiteInfo == null) {
            LunaRiteInfo = new global::MiHomo.Protos.LunaRiteDetailInfo();
          }
          LunaRiteInfo.MergeFrom(other.LunaRiteInfo);
          break;
        case DetailOneofCase.MichiaeMatsuriInfo:
          if (MichiaeMatsuriInfo == null) {
            MichiaeMatsuriInfo = new global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfo();
          }
          MichiaeMatsuriInfo.MergeFrom(other.MichiaeMatsuriInfo);
          break;
        case DetailOneofCase.MistTrialActivityInfo:
          if (MistTrialActivityInfo == null) {
            MistTrialActivityInfo = new global::MiHomo.Protos.MistTrialActivityDetailInfo();
          }
          MistTrialActivityInfo.MergeFrom(other.MistTrialActivityInfo);
          break;
        case DetailOneofCase.MoonfinTrialInfo:
          if (MoonfinTrialInfo == null) {
            MoonfinTrialInfo = new global::MiHomo.Protos.MoonfinTrialActivityDetailInfo();
          }
          MoonfinTrialInfo.MergeFrom(other.MoonfinTrialInfo);
          break;
        case DetailOneofCase.MuqadasPotionInfo:
          if (MuqadasPotionInfo == null) {
            MuqadasPotionInfo = new global::MiHomo.Protos.MuqadasPotionActivityDetailInfo();
          }
          MuqadasPotionInfo.MergeFrom(other.MuqadasPotionInfo);
          break;
        case DetailOneofCase.MusicGameInfo:
          if (MusicGameInfo == null) {
            MusicGameInfo = new global::MiHomo.Protos.MusicGameActivityDetailInfo();
          }
          MusicGameInfo.MergeFrom(other.MusicGameInfo);
          break;
        case DetailOneofCase.PhotoInfo:
          if (PhotoInfo == null) {
            PhotoInfo = new global::MiHomo.Protos.PhotoActivityDetailInfo();
          }
          PhotoInfo.MergeFrom(other.PhotoInfo);
          break;
        case DetailOneofCase.PlantFlowerInfo:
          if (PlantFlowerInfo == null) {
            PlantFlowerInfo = new global::MiHomo.Protos.PlantFlowerActivityDetailInfo();
          }
          PlantFlowerInfo.MergeFrom(other.PlantFlowerInfo);
          break;
        case DetailOneofCase.PotionInfo:
          if (PotionInfo == null) {
            PotionInfo = new global::MiHomo.Protos.PotionActivityDetailInfo();
          }
          PotionInfo.MergeFrom(other.PotionInfo);
          break;
        case DetailOneofCase.RockBoardExploreInfo:
          if (RockBoardExploreInfo == null) {
            RockBoardExploreInfo = new global::MiHomo.Protos.RockBoardExploreDetailInfo();
          }
          RockBoardExploreInfo.MergeFrom(other.RockBoardExploreInfo);
          break;
        case DetailOneofCase.RogueDiaryInfo:
          if (RogueDiaryInfo == null) {
            RogueDiaryInfo = new global::MiHomo.Protos.RogueDiaryActivityDetailInfo();
          }
          RogueDiaryInfo.MergeFrom(other.RogueDiaryInfo);
          break;
        case DetailOneofCase.RoguelikeDungoenInfo:
          if (RoguelikeDungoenInfo == null) {
            RoguelikeDungoenInfo = new global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfo();
          }
          RoguelikeDungoenInfo.MergeFrom(other.RoguelikeDungoenInfo);
          break;
        case DetailOneofCase.SalesmanInfo:
          if (SalesmanInfo == null) {
            SalesmanInfo = new global::MiHomo.Protos.SalesmanActivityDetailInfo();
          }
          SalesmanInfo.MergeFrom(other.SalesmanInfo);
          break;
        case DetailOneofCase.SamLampInfo:
          if (SamLampInfo == null) {
            SamLampInfo = new global::MiHomo.Protos.SeaLampActivityDetailInfo();
          }
          SamLampInfo.MergeFrom(other.SamLampInfo);
          break;
        case DetailOneofCase.SeaLampInfo:
          if (SeaLampInfo == null) {
            SeaLampInfo = new global::MiHomo.Protos.SeaLampActivityInfo();
          }
          SeaLampInfo.MergeFrom(other.SeaLampInfo);
          break;
        case DetailOneofCase.SeaLampV3Info:
          if (SeaLampV3Info == null) {
            SeaLampV3Info = new global::MiHomo.Protos.SeaLampV3DetailInfo();
          }
          SeaLampV3Info.MergeFrom(other.SeaLampV3Info);
          break;
        case DetailOneofCase.SpiceInfo:
          if (SpiceInfo == null) {
            SpiceInfo = new global::MiHomo.Protos.SpiceActivityDetailInfo();
          }
          SpiceInfo.MergeFrom(other.SpiceInfo);
          break;
        case DetailOneofCase.SummerTimeInfo:
          if (SummerTimeInfo == null) {
            SummerTimeInfo = new global::MiHomo.Protos.SummerTimeDetailInfo();
          }
          SummerTimeInfo.MergeFrom(other.SummerTimeInfo);
          break;
        case DetailOneofCase.SummerTimeV2Info:
          if (SummerTimeV2Info == null) {
            SummerTimeV2Info = new global::MiHomo.Protos.SummerTimeV2DetailInfo();
          }
          SummerTimeV2Info.MergeFrom(other.SummerTimeV2Info);
          break;
        case DetailOneofCase.SumoInfo:
          if (SumoInfo == null) {
            SumoInfo = new global::MiHomo.Protos.SumoActivityDetailInfo();
          }
          SumoInfo.MergeFrom(other.SumoInfo);
          break;
        case DetailOneofCase.TanukiTravelActivityInfo:
          if (TanukiTravelActivityInfo == null) {
            TanukiTravelActivityInfo = new global::MiHomo.Protos.TanukiTravelActivityDetailInfo();
          }
          TanukiTravelActivityInfo.MergeFrom(other.TanukiTravelActivityInfo);
          break;
        case DetailOneofCase.TeamChainInfo:
          if (TeamChainInfo == null) {
            TeamChainInfo = new global::MiHomo.Protos.TeamChainDetailInfo();
          }
          TeamChainInfo.MergeFrom(other.TeamChainInfo);
          break;
        case DetailOneofCase.TreasureMapInfo:
          if (TreasureMapInfo == null) {
            TreasureMapInfo = new global::MiHomo.Protos.TreasureMapActivityDetailInfo();
          }
          TreasureMapInfo.MergeFrom(other.TreasureMapInfo);
          break;
        case DetailOneofCase.TreasureSeelieInfo:
          if (TreasureSeelieInfo == null) {
            TreasureSeelieInfo = new global::MiHomo.Protos.TreasureSeelieActivityDetailInfo();
          }
          TreasureSeelieInfo.MergeFrom(other.TreasureSeelieInfo);
          break;
        case DetailOneofCase.TrialAvatarInfo:
          if (TrialAvatarInfo == null) {
            TrialAvatarInfo = new global::MiHomo.Protos.TrialAvatarActivityDetailInfo();
          }
          TrialAvatarInfo.MergeFrom(other.TrialAvatarInfo);
          break;
        case DetailOneofCase.UgcInfo:
          if (UgcInfo == null) {
            UgcInfo = new global::MiHomo.Protos.UgcActivityDetailInfo();
          }
          UgcInfo.MergeFrom(other.UgcInfo);
          break;
        case DetailOneofCase.VintageInfo:
          if (VintageInfo == null) {
            VintageInfo = new global::MiHomo.Protos.VintageActivityDetailInfo();
          }
          VintageInfo.MergeFrom(other.VintageInfo);
          break;
        case DetailOneofCase.WaterSpiritInfo:
          if (WaterSpiritInfo == null) {
            WaterSpiritInfo = new global::MiHomo.Protos.WaterSpiritActivityDetailInfo();
          }
          WaterSpiritInfo.MergeFrom(other.WaterSpiritInfo);
          break;
        case DetailOneofCase.WindFieldInfo:
          if (WindFieldInfo == null) {
            WindFieldInfo = new global::MiHomo.Protos.WindFieldDetailInfo();
          }
          WindFieldInfo.MergeFrom(other.WindFieldInfo);
          break;
        case DetailOneofCase.WinterCampInfo:
          if (WinterCampInfo == null) {
            WinterCampInfo = new global::MiHomo.Protos.WinterCampActivityDetailInfo();
          }
          WinterCampInfo.MergeFrom(other.WinterCampInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::MiHomo.Protos.TrialAvatarActivityDetailInfo subBuilder = new global::MiHomo.Protos.TrialAvatarActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
              subBuilder.MergeFrom(TrialAvatarInfo);
            }
            input.ReadMessage(subBuilder);
            TrialAvatarInfo = subBuilder;
            break;
          }
          case 18: {
            watcherInfoList_.AddEntriesFrom(input, _repeated_watcherInfoList_codec);
            break;
          }
          case 26:
          case 24: {
            expireCondList_.AddEntriesFrom(input, _repeated_expireCondList_codec);
            break;
          }
          case 32: {
            ActivityType = input.ReadUInt32();
            break;
          }
          case 40: {
            EndTime = input.ReadUInt32();
            break;
          }
          case 48: {
            IsFinished = input.ReadBool();
            break;
          }
          case 58: {
            global::MiHomo.Protos.SeaLampActivityDetailInfo subBuilder = new global::MiHomo.Protos.SeaLampActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SamLampInfo) {
              subBuilder.MergeFrom(SamLampInfo);
            }
            input.ReadMessage(subBuilder);
            SamLampInfo = subBuilder;
            break;
          }
          case 64: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 72: {
            IsStarting = input.ReadBool();
            break;
          }
          case 82:
          case 80: {
            meetCondList_.AddEntriesFrom(input, _repeated_meetCondList_codec);
            break;
          }
          case 90: {
            global::MiHomo.Protos.SalesmanActivityDetailInfo subBuilder = new global::MiHomo.Protos.SalesmanActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SalesmanInfo) {
              subBuilder.MergeFrom(SalesmanInfo);
            }
            input.ReadMessage(subBuilder);
            SalesmanInfo = subBuilder;
            break;
          }
          case 96: {
            ActivityId = input.ReadUInt32();
            break;
          }
          case 104: {
            IsPlayOpenAnim = input.ReadBool();
            break;
          }
          case 114: {
            global::MiHomo.Protos.CrucibleActivityDetailInfo subBuilder = new global::MiHomo.Protos.CrucibleActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.CrucibleInfo) {
              subBuilder.MergeFrom(CrucibleInfo);
            }
            input.ReadMessage(subBuilder);
            CrucibleInfo = subBuilder;
            break;
          }
          case 120: {
            ScheduleId = input.ReadUInt32();
            break;
          }
          case 434: {
            global::MiHomo.Protos.PlantFlowerActivityDetailInfo subBuilder = new global::MiHomo.Protos.PlantFlowerActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
              subBuilder.MergeFrom(PlantFlowerInfo);
            }
            input.ReadMessage(subBuilder);
            PlantFlowerInfo = subBuilder;
            break;
          }
          case 816: {
            IsBannerCleared = input.ReadBool();
            break;
          }
          case 1250: {
            global::MiHomo.Protos.MistTrialActivityDetailInfo subBuilder = new global::MiHomo.Protos.MistTrialActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
              subBuilder.MergeFrom(MistTrialActivityInfo);
            }
            input.ReadMessage(subBuilder);
            MistTrialActivityInfo = subBuilder;
            break;
          }
          case 1554: {
            global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfo subBuilder = new global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MichiaeMatsuriInfo) {
              subBuilder.MergeFrom(MichiaeMatsuriInfo);
            }
            input.ReadMessage(subBuilder);
            MichiaeMatsuriInfo = subBuilder;
            break;
          }
          case 1618: {
            global::MiHomo.Protos.ExpeditionActivityDetailInfo subBuilder = new global::MiHomo.Protos.ExpeditionActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
              subBuilder.MergeFrom(ExpeditionInfo);
            }
            input.ReadMessage(subBuilder);
            ExpeditionInfo = subBuilder;
            break;
          }
          case 1754: {
            global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfo subBuilder = new global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
              subBuilder.MergeFrom(RoguelikeDungoenInfo);
            }
            input.ReadMessage(subBuilder);
            RoguelikeDungoenInfo = subBuilder;
            break;
          }
          case 2010: {
            global::MiHomo.Protos.SeaLampV3DetailInfo subBuilder = new global::MiHomo.Protos.SeaLampV3DetailInfo();
            if (detailCase_ == DetailOneofCase.SeaLampV3Info) {
              subBuilder.MergeFrom(SeaLampV3Info);
            }
            input.ReadMessage(subBuilder);
            SeaLampV3Info = subBuilder;
            break;
          }
          case 2626: {
            global::MiHomo.Protos.PhotoActivityDetailInfo subBuilder = new global::MiHomo.Protos.PhotoActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.PhotoInfo) {
              subBuilder.MergeFrom(PhotoInfo);
            }
            input.ReadMessage(subBuilder);
            PhotoInfo = subBuilder;
            break;
          }
          case 2634:
          case 2632: {
            takenRewardList_.AddEntriesFrom(input, _repeated_takenRewardList_codec);
            break;
          }
          case 2818: {
            global::MiHomo.Protos.WindFieldDetailInfo subBuilder = new global::MiHomo.Protos.WindFieldDetailInfo();
            if (detailCase_ == DetailOneofCase.WindFieldInfo) {
              subBuilder.MergeFrom(WindFieldInfo);
            }
            input.ReadMessage(subBuilder);
            WindFieldInfo = subBuilder;
            break;
          }
          case 3130: {
            global::MiHomo.Protos.EffigyActivityDetailInfo subBuilder = new global::MiHomo.Protos.EffigyActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.EffigyInfo) {
              subBuilder.MergeFrom(EffigyInfo);
            }
            input.ReadMessage(subBuilder);
            EffigyInfo = subBuilder;
            break;
          }
          case 3226: {
            global::MiHomo.Protos.DigActivityDetailInfo subBuilder = new global::MiHomo.Protos.DigActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.DigInfo) {
              subBuilder.MergeFrom(DigInfo);
            }
            input.ReadMessage(subBuilder);
            DigInfo = subBuilder;
            break;
          }
          case 3418: {
            global::MiHomo.Protos.HideAndSeekActivityDetailInfo subBuilder = new global::MiHomo.Protos.HideAndSeekActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
              subBuilder.MergeFrom(HideAndSeekInfo);
            }
            input.ReadMessage(subBuilder);
            HideAndSeekInfo = subBuilder;
            break;
          }
          case 3562: {
            global::MiHomo.Protos.VintageActivityDetailInfo subBuilder = new global::MiHomo.Protos.VintageActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.VintageInfo) {
              subBuilder.MergeFrom(VintageInfo);
            }
            input.ReadMessage(subBuilder);
            VintageInfo = subBuilder;
            break;
          }
          case 3682: {
            global::MiHomo.Protos.MusicGameActivityDetailInfo subBuilder = new global::MiHomo.Protos.MusicGameActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MusicGameInfo) {
              subBuilder.MergeFrom(MusicGameInfo);
            }
            input.ReadMessage(subBuilder);
            MusicGameInfo = subBuilder;
            break;
          }
          case 3922: {
            global::MiHomo.Protos.FungusFighterDetailInfo subBuilder = new global::MiHomo.Protos.FungusFighterDetailInfo();
            if (detailCase_ == DetailOneofCase.FungusFighterInfo) {
              subBuilder.MergeFrom(FungusFighterInfo);
            }
            input.ReadMessage(subBuilder);
            FungusFighterInfo = subBuilder;
            break;
          }
          case 3930: {
            global::MiHomo.Protos.HachiActivityDetailInfo subBuilder = new global::MiHomo.Protos.HachiActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.HachiInfo) {
              subBuilder.MergeFrom(HachiInfo);
            }
            input.ReadMessage(subBuilder);
            HachiInfo = subBuilder;
            break;
          }
          case 3954: {
            global::MiHomo.Protos.SeaLampActivityInfo subBuilder = new global::MiHomo.Protos.SeaLampActivityInfo();
            if (detailCase_ == DetailOneofCase.SeaLampInfo) {
              subBuilder.MergeFrom(SeaLampInfo);
            }
            input.ReadMessage(subBuilder);
            SeaLampInfo = subBuilder;
            break;
          }
          case 4458: {
            global::MiHomo.Protos.AsterActivityDetailInfo subBuilder = new global::MiHomo.Protos.AsterActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.AsterInfo) {
              subBuilder.MergeFrom(AsterInfo);
            }
            input.ReadMessage(subBuilder);
            AsterInfo = subBuilder;
            break;
          }
          case 4736: {
            FirstDayStartTime = input.ReadUInt32();
            break;
          }
          case 4978: {
            global::MiHomo.Protos.SummerTimeV2DetailInfo subBuilder = new global::MiHomo.Protos.SummerTimeV2DetailInfo();
            if (detailCase_ == DetailOneofCase.SummerTimeV2Info) {
              subBuilder.MergeFrom(SummerTimeV2Info);
            }
            input.ReadMessage(subBuilder);
            SummerTimeV2Info = subBuilder;
            break;
          }
          case 5458: {
            activityCoinMap_.AddEntriesFrom(input, _map_activityCoinMap_codec);
            break;
          }
          case 5626: {
            global::MiHomo.Protos.UgcActivityDetailInfo subBuilder = new global::MiHomo.Protos.UgcActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.UgcInfo) {
              subBuilder.MergeFrom(UgcInfo);
            }
            input.ReadMessage(subBuilder);
            UgcInfo = subBuilder;
            break;
          }
          case 5778: {
            global::MiHomo.Protos.GearActivityDetailInfo subBuilder = new global::MiHomo.Protos.GearActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.GearInfo) {
              subBuilder.MergeFrom(GearInfo);
            }
            input.ReadMessage(subBuilder);
            GearInfo = subBuilder;
            break;
          }
          case 6002: {
            global::MiHomo.Protos.IrodoriActivityDetailInfo subBuilder = new global::MiHomo.Protos.IrodoriActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.IrodoriInfo) {
              subBuilder.MergeFrom(IrodoriInfo);
            }
            input.ReadMessage(subBuilder);
            IrodoriInfo = subBuilder;
            break;
          }
          case 6138: {
            global::MiHomo.Protos.BounceConjuringActivityDetailInfo subBuilder = new global::MiHomo.Protos.BounceConjuringActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
              subBuilder.MergeFrom(BounceConjuringInfo);
            }
            input.ReadMessage(subBuilder);
            BounceConjuringInfo = subBuilder;
            break;
          }
          case 6354: {
            global::MiHomo.Protos.BlitzRushActivityDetailInfo subBuilder = new global::MiHomo.Protos.BlitzRushActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
              subBuilder.MergeFrom(BlitzRushInfo);
            }
            input.ReadMessage(subBuilder);
            BlitzRushInfo = subBuilder;
            break;
          }
          case 6498: {
            global::MiHomo.Protos.RogueDiaryActivityDetailInfo subBuilder = new global::MiHomo.Protos.RogueDiaryActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.RogueDiaryInfo) {
              subBuilder.MergeFrom(RogueDiaryInfo);
            }
            input.ReadMessage(subBuilder);
            RogueDiaryInfo = subBuilder;
            break;
          }
          case 6514: {
            global::MiHomo.Protos.LunaRiteDetailInfo subBuilder = new global::MiHomo.Protos.LunaRiteDetailInfo();
            if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
              subBuilder.MergeFrom(LunaRiteInfo);
            }
            input.ReadMessage(subBuilder);
            LunaRiteInfo = subBuilder;
            break;
          }
          case 6602: {
            global::MiHomo.Protos.GachaActivityDetailInfo subBuilder = new global::MiHomo.Protos.GachaActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.GachaInfo) {
              subBuilder.MergeFrom(GachaInfo);
            }
            input.ReadMessage(subBuilder);
            GachaInfo = subBuilder;
            break;
          }
          case 6858: {
            global::MiHomo.Protos.FleurFairActivityDetailInfo subBuilder = new global::MiHomo.Protos.FleurFairActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.FleurFairInfo) {
              subBuilder.MergeFrom(FleurFairInfo);
            }
            input.ReadMessage(subBuilder);
            FleurFairInfo = subBuilder;
            break;
          }
          case 6874: {
            global::MiHomo.Protos.ArenaChallengeActivityDetailInfo subBuilder = new global::MiHomo.Protos.ArenaChallengeActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
              subBuilder.MergeFrom(ArenaChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            ArenaChallengeInfo = subBuilder;
            break;
          }
          case 6914: {
            activityPushTipsDataList_.AddEntriesFrom(input, _repeated_activityPushTipsDataList_codec);
            break;
          }
          case 7352: {
            IsHidden = input.ReadBool();
            break;
          }
          case 7418: {
            global::MiHomo.Protos.ChessActivityDetailInfo subBuilder = new global::MiHomo.Protos.ChessActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ChessInfo) {
              subBuilder.MergeFrom(ChessInfo);
            }
            input.ReadMessage(subBuilder);
            ChessInfo = subBuilder;
            break;
          }
          case 7730: {
            global::MiHomo.Protos.TreasureSeelieActivityDetailInfo subBuilder = new global::MiHomo.Protos.TreasureSeelieActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TreasureSeelieInfo) {
              subBuilder.MergeFrom(TreasureSeelieInfo);
            }
            input.ReadMessage(subBuilder);
            TreasureSeelieInfo = subBuilder;
            break;
          }
          case 8122: {
            global::MiHomo.Protos.ChannelerSlabActivityDetailInfo subBuilder = new global::MiHomo.Protos.ChannelerSlabActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
              subBuilder.MergeFrom(ChallnelerSlabInfo);
            }
            input.ReadMessage(subBuilder);
            ChallnelerSlabInfo = subBuilder;
            break;
          }
          case 8202: {
            global::MiHomo.Protos.EffigyChallengeV2DetailInfo subBuilder = new global::MiHomo.Protos.EffigyChallengeV2DetailInfo();
            if (detailCase_ == DetailOneofCase.EffigyChallengeInfo) {
              subBuilder.MergeFrom(EffigyChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            EffigyChallengeInfo = subBuilder;
            break;
          }
          case 8346: {
            global::MiHomo.Protos.InstableSprayDetailInfo subBuilder = new global::MiHomo.Protos.InstableSprayDetailInfo();
            if (detailCase_ == DetailOneofCase.InstableSprayInfo) {
              subBuilder.MergeFrom(InstableSprayInfo);
            }
            input.ReadMessage(subBuilder);
            InstableSprayInfo = subBuilder;
            break;
          }
          case 8626: {
            global::MiHomo.Protos.RockBoardExploreDetailInfo subBuilder = new global::MiHomo.Protos.RockBoardExploreDetailInfo();
            if (detailCase_ == DetailOneofCase.RockBoardExploreInfo) {
              subBuilder.MergeFrom(RockBoardExploreInfo);
            }
            input.ReadMessage(subBuilder);
            RockBoardExploreInfo = subBuilder;
            break;
          }
          case 8666: {
            global::MiHomo.Protos.WinterCampActivityDetailInfo subBuilder = new global::MiHomo.Protos.WinterCampActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.WinterCampInfo) {
              subBuilder.MergeFrom(WinterCampInfo);
            }
            input.ReadMessage(subBuilder);
            WinterCampInfo = subBuilder;
            break;
          }
          case 8738: {
            global::MiHomo.Protos.DeliveryActivityDetailInfo subBuilder = new global::MiHomo.Protos.DeliveryActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.DeliveryInfo) {
              subBuilder.MergeFrom(DeliveryInfo);
            }
            input.ReadMessage(subBuilder);
            DeliveryInfo = subBuilder;
            break;
          }
          case 8906: {
            global::MiHomo.Protos.EchoShellDetailInfo subBuilder = new global::MiHomo.Protos.EchoShellDetailInfo();
            if (detailCase_ == DetailOneofCase.EchoShellInfo) {
              subBuilder.MergeFrom(EchoShellInfo);
            }
            input.ReadMessage(subBuilder);
            EchoShellInfo = subBuilder;
            break;
          }
          case 8914: {
            global::MiHomo.Protos.TreasureMapActivityDetailInfo subBuilder = new global::MiHomo.Protos.TreasureMapActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
              subBuilder.MergeFrom(TreasureMapInfo);
            }
            input.ReadMessage(subBuilder);
            TreasureMapInfo = subBuilder;
            break;
          }
          case 9258: {
            global::MiHomo.Protos.MuqadasPotionActivityDetailInfo subBuilder = new global::MiHomo.Protos.MuqadasPotionActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MuqadasPotionInfo) {
              subBuilder.MergeFrom(MuqadasPotionInfo);
            }
            input.ReadMessage(subBuilder);
            MuqadasPotionInfo = subBuilder;
            break;
          }
          case 9386: {
            global::MiHomo.Protos.DuelHeartDetailInfo subBuilder = new global::MiHomo.Protos.DuelHeartDetailInfo();
            if (detailCase_ == DetailOneofCase.DuelHeartInfo) {
              subBuilder.MergeFrom(DuelHeartInfo);
            }
            input.ReadMessage(subBuilder);
            DuelHeartInfo = subBuilder;
            break;
          }
          case 9810: {
            global::MiHomo.Protos.CrystalLinkActivityDetailInfo subBuilder = new global::MiHomo.Protos.CrystalLinkActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.CrystalLinkInfo) {
              subBuilder.MergeFrom(CrystalLinkInfo);
            }
            input.ReadMessage(subBuilder);
            CrystalLinkInfo = subBuilder;
            break;
          }
          case 10090: {
            global::MiHomo.Protos.SumoActivityDetailInfo subBuilder = new global::MiHomo.Protos.SumoActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SumoInfo) {
              subBuilder.MergeFrom(SumoInfo);
            }
            input.ReadMessage(subBuilder);
            SumoInfo = subBuilder;
            break;
          }
          case 10186: {
            global::MiHomo.Protos.PotionActivityDetailInfo subBuilder = new global::MiHomo.Protos.PotionActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.PotionInfo) {
              subBuilder.MergeFrom(PotionInfo);
            }
            input.ReadMessage(subBuilder);
            PotionInfo = subBuilder;
            break;
          }
          case 10320: {
            SelectedAvatarRewardId = input.ReadUInt32();
            break;
          }
          case 10466: {
            global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfo subBuilder = new global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.LuminanceStoneChallengeInfo) {
              subBuilder.MergeFrom(LuminanceStoneChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            LuminanceStoneChallengeInfo = subBuilder;
            break;
          }
          case 10922: {
            global::MiHomo.Protos.FlightActivityDetailInfo subBuilder = new global::MiHomo.Protos.FlightActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.FlightInfo) {
              subBuilder.MergeFrom(FlightInfo);
            }
            input.ReadMessage(subBuilder);
            FlightInfo = subBuilder;
            break;
          }
          case 10954: {
            global::MiHomo.Protos.BrickBreakerDetailInfo subBuilder = new global::MiHomo.Protos.BrickBreakerDetailInfo();
            if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
              subBuilder.MergeFrom(BrickBreakerInfo);
            }
            input.ReadMessage(subBuilder);
            BrickBreakerInfo = subBuilder;
            break;
          }
          case 10978: {
            global::MiHomo.Protos.SummerTimeDetailInfo subBuilder = new global::MiHomo.Protos.SummerTimeDetailInfo();
            if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
              subBuilder.MergeFrom(SummerTimeInfo);
            }
            input.ReadMessage(subBuilder);
            SummerTimeInfo = subBuilder;
            break;
          }
          case 11194: {
            wishGiftNumMap_.AddEntriesFrom(input, _map_wishGiftNumMap_codec);
            break;
          }
          case 11290: {
            global::MiHomo.Protos.FindHilichurlDetailInfo subBuilder = new global::MiHomo.Protos.FindHilichurlDetailInfo();
            if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
              subBuilder.MergeFrom(FindHilichurlInfo);
            }
            input.ReadMessage(subBuilder);
            FindHilichurlInfo = subBuilder;
            break;
          }
          case 11592: {
            IsQuickOpen = input.ReadBool();
            break;
          }
          case 11970: {
            global::MiHomo.Protos.CharAmusementDetailInfo subBuilder = new global::MiHomo.Protos.CharAmusementDetailInfo();
            if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
              subBuilder.MergeFrom(CharAmusementInfo);
            }
            input.ReadMessage(subBuilder);
            CharAmusementInfo = subBuilder;
            break;
          }
          case 12378: {
            global::MiHomo.Protos.TeamChainDetailInfo subBuilder = new global::MiHomo.Protos.TeamChainDetailInfo();
            if (detailCase_ == DetailOneofCase.TeamChainInfo) {
              subBuilder.MergeFrom(TeamChainInfo);
            }
            input.ReadMessage(subBuilder);
            TeamChainInfo = subBuilder;
            break;
          }
          case 12706: {
            global::MiHomo.Protos.MoonfinTrialActivityDetailInfo subBuilder = new global::MiHomo.Protos.MoonfinTrialActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
              subBuilder.MergeFrom(MoonfinTrialInfo);
            }
            input.ReadMessage(subBuilder);
            MoonfinTrialInfo = subBuilder;
            break;
          }
          case 13042: {
            global::MiHomo.Protos.ElectroherculesBattleDetailInfo subBuilder = new global::MiHomo.Protos.ElectroherculesBattleDetailInfo();
            if (detailCase_ == DetailOneofCase.ElectroherculesBattleInfo) {
              subBuilder.MergeFrom(ElectroherculesBattleInfo);
            }
            input.ReadMessage(subBuilder);
            ElectroherculesBattleInfo = subBuilder;
            break;
          }
          case 13402: {
            global::MiHomo.Protos.WaterSpiritActivityDetailInfo subBuilder = new global::MiHomo.Protos.WaterSpiritActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
              subBuilder.MergeFrom(WaterSpiritInfo);
            }
            input.ReadMessage(subBuilder);
            WaterSpiritInfo = subBuilder;
            break;
          }
          case 13434: {
            global::MiHomo.Protos.CoinCollectDetailInfo subBuilder = new global::MiHomo.Protos.CoinCollectDetailInfo();
            if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
              subBuilder.MergeFrom(CoinCollectInfo);
            }
            input.ReadMessage(subBuilder);
            CoinCollectInfo = subBuilder;
            break;
          }
          case 13802: {
            global::MiHomo.Protos.BartenderActivityDetailInfo subBuilder = new global::MiHomo.Protos.BartenderActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BartenderInfo) {
              subBuilder.MergeFrom(BartenderInfo);
            }
            input.ReadMessage(subBuilder);
            BartenderInfo = subBuilder;
            break;
          }
          case 13818: {
            global::MiHomo.Protos.DragonSpineActivityDetailInfo subBuilder = new global::MiHomo.Protos.DragonSpineActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
              subBuilder.MergeFrom(DragonSpineInfo);
            }
            input.ReadMessage(subBuilder);
            DragonSpineInfo = subBuilder;
            break;
          }
          case 14370: {
            global::MiHomo.Protos.TanukiTravelActivityDetailInfo subBuilder = new global::MiHomo.Protos.TanukiTravelActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TanukiTravelActivityInfo) {
              subBuilder.MergeFrom(TanukiTravelActivityInfo);
            }
            input.ReadMessage(subBuilder);
            TanukiTravelActivityInfo = subBuilder;
            break;
          }
          case 14738: {
            global::MiHomo.Protos.BuoyantCombatDetailInfo subBuilder = new global::MiHomo.Protos.BuoyantCombatDetailInfo();
            if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
              subBuilder.MergeFrom(BuoyantCombatInfo);
            }
            input.ReadMessage(subBuilder);
            BuoyantCombatInfo = subBuilder;
            break;
          }
          case 14954: {
            global::MiHomo.Protos.BlessingActivityDetailInfo subBuilder = new global::MiHomo.Protos.BlessingActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BlessingInfo) {
              subBuilder.MergeFrom(BlessingInfo);
            }
            input.ReadMessage(subBuilder);
            BlessingInfo = subBuilder;
            break;
          }
          case 15010: {
            global::MiHomo.Protos.LanternRiteActivityDetailInfo subBuilder = new global::MiHomo.Protos.LanternRiteActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.LanternRiteActivityInfo) {
              subBuilder.MergeFrom(LanternRiteActivityInfo);
            }
            input.ReadMessage(subBuilder);
            LanternRiteActivityInfo = subBuilder;
            break;
          }
          case 15082: {
            global::MiHomo.Protos.IslandPartyDetailInfo subBuilder = new global::MiHomo.Protos.IslandPartyDetailInfo();
            if (detailCase_ == DetailOneofCase.IslandPartyInfo) {
              subBuilder.MergeFrom(IslandPartyInfo);
            }
            input.ReadMessage(subBuilder);
            IslandPartyInfo = subBuilder;
            break;
          }
          case 15130: {
            global::MiHomo.Protos.SpiceActivityDetailInfo subBuilder = new global::MiHomo.Protos.SpiceActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SpiceInfo) {
              subBuilder.MergeFrom(SpiceInfo);
            }
            input.ReadMessage(subBuilder);
            SpiceInfo = subBuilder;
            break;
          }
          case 15248: {
            CurScore = input.ReadUInt32();
            break;
          }
          case 15290: {
            global::MiHomo.Protos.GravenInnocenceDetailInfo subBuilder = new global::MiHomo.Protos.GravenInnocenceDetailInfo();
            if (detailCase_ == DetailOneofCase.GravenInnocenceInfo) {
              subBuilder.MergeFrom(GravenInnocenceInfo);
            }
            input.ReadMessage(subBuilder);
            GravenInnocenceInfo = subBuilder;
            break;
          }
          case 15664: {
            ScoreLimit = input.ReadUInt32();
            break;
          }
          case 15704: {
            IsCommonContentClosed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::MiHomo.Protos.TrialAvatarActivityDetailInfo subBuilder = new global::MiHomo.Protos.TrialAvatarActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TrialAvatarInfo) {
              subBuilder.MergeFrom(TrialAvatarInfo);
            }
            input.ReadMessage(subBuilder);
            TrialAvatarInfo = subBuilder;
            break;
          }
          case 18: {
            watcherInfoList_.AddEntriesFrom(ref input, _repeated_watcherInfoList_codec);
            break;
          }
          case 26:
          case 24: {
            expireCondList_.AddEntriesFrom(ref input, _repeated_expireCondList_codec);
            break;
          }
          case 32: {
            ActivityType = input.ReadUInt32();
            break;
          }
          case 40: {
            EndTime = input.ReadUInt32();
            break;
          }
          case 48: {
            IsFinished = input.ReadBool();
            break;
          }
          case 58: {
            global::MiHomo.Protos.SeaLampActivityDetailInfo subBuilder = new global::MiHomo.Protos.SeaLampActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SamLampInfo) {
              subBuilder.MergeFrom(SamLampInfo);
            }
            input.ReadMessage(subBuilder);
            SamLampInfo = subBuilder;
            break;
          }
          case 64: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 72: {
            IsStarting = input.ReadBool();
            break;
          }
          case 82:
          case 80: {
            meetCondList_.AddEntriesFrom(ref input, _repeated_meetCondList_codec);
            break;
          }
          case 90: {
            global::MiHomo.Protos.SalesmanActivityDetailInfo subBuilder = new global::MiHomo.Protos.SalesmanActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SalesmanInfo) {
              subBuilder.MergeFrom(SalesmanInfo);
            }
            input.ReadMessage(subBuilder);
            SalesmanInfo = subBuilder;
            break;
          }
          case 96: {
            ActivityId = input.ReadUInt32();
            break;
          }
          case 104: {
            IsPlayOpenAnim = input.ReadBool();
            break;
          }
          case 114: {
            global::MiHomo.Protos.CrucibleActivityDetailInfo subBuilder = new global::MiHomo.Protos.CrucibleActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.CrucibleInfo) {
              subBuilder.MergeFrom(CrucibleInfo);
            }
            input.ReadMessage(subBuilder);
            CrucibleInfo = subBuilder;
            break;
          }
          case 120: {
            ScheduleId = input.ReadUInt32();
            break;
          }
          case 434: {
            global::MiHomo.Protos.PlantFlowerActivityDetailInfo subBuilder = new global::MiHomo.Protos.PlantFlowerActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.PlantFlowerInfo) {
              subBuilder.MergeFrom(PlantFlowerInfo);
            }
            input.ReadMessage(subBuilder);
            PlantFlowerInfo = subBuilder;
            break;
          }
          case 816: {
            IsBannerCleared = input.ReadBool();
            break;
          }
          case 1250: {
            global::MiHomo.Protos.MistTrialActivityDetailInfo subBuilder = new global::MiHomo.Protos.MistTrialActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MistTrialActivityInfo) {
              subBuilder.MergeFrom(MistTrialActivityInfo);
            }
            input.ReadMessage(subBuilder);
            MistTrialActivityInfo = subBuilder;
            break;
          }
          case 1554: {
            global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfo subBuilder = new global::MiHomo.Protos.MichiaeMatsuriActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MichiaeMatsuriInfo) {
              subBuilder.MergeFrom(MichiaeMatsuriInfo);
            }
            input.ReadMessage(subBuilder);
            MichiaeMatsuriInfo = subBuilder;
            break;
          }
          case 1618: {
            global::MiHomo.Protos.ExpeditionActivityDetailInfo subBuilder = new global::MiHomo.Protos.ExpeditionActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ExpeditionInfo) {
              subBuilder.MergeFrom(ExpeditionInfo);
            }
            input.ReadMessage(subBuilder);
            ExpeditionInfo = subBuilder;
            break;
          }
          case 1754: {
            global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfo subBuilder = new global::MiHomo.Protos.RoguelikeDungeonActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.RoguelikeDungoenInfo) {
              subBuilder.MergeFrom(RoguelikeDungoenInfo);
            }
            input.ReadMessage(subBuilder);
            RoguelikeDungoenInfo = subBuilder;
            break;
          }
          case 2010: {
            global::MiHomo.Protos.SeaLampV3DetailInfo subBuilder = new global::MiHomo.Protos.SeaLampV3DetailInfo();
            if (detailCase_ == DetailOneofCase.SeaLampV3Info) {
              subBuilder.MergeFrom(SeaLampV3Info);
            }
            input.ReadMessage(subBuilder);
            SeaLampV3Info = subBuilder;
            break;
          }
          case 2626: {
            global::MiHomo.Protos.PhotoActivityDetailInfo subBuilder = new global::MiHomo.Protos.PhotoActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.PhotoInfo) {
              subBuilder.MergeFrom(PhotoInfo);
            }
            input.ReadMessage(subBuilder);
            PhotoInfo = subBuilder;
            break;
          }
          case 2634:
          case 2632: {
            takenRewardList_.AddEntriesFrom(ref input, _repeated_takenRewardList_codec);
            break;
          }
          case 2818: {
            global::MiHomo.Protos.WindFieldDetailInfo subBuilder = new global::MiHomo.Protos.WindFieldDetailInfo();
            if (detailCase_ == DetailOneofCase.WindFieldInfo) {
              subBuilder.MergeFrom(WindFieldInfo);
            }
            input.ReadMessage(subBuilder);
            WindFieldInfo = subBuilder;
            break;
          }
          case 3130: {
            global::MiHomo.Protos.EffigyActivityDetailInfo subBuilder = new global::MiHomo.Protos.EffigyActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.EffigyInfo) {
              subBuilder.MergeFrom(EffigyInfo);
            }
            input.ReadMessage(subBuilder);
            EffigyInfo = subBuilder;
            break;
          }
          case 3226: {
            global::MiHomo.Protos.DigActivityDetailInfo subBuilder = new global::MiHomo.Protos.DigActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.DigInfo) {
              subBuilder.MergeFrom(DigInfo);
            }
            input.ReadMessage(subBuilder);
            DigInfo = subBuilder;
            break;
          }
          case 3418: {
            global::MiHomo.Protos.HideAndSeekActivityDetailInfo subBuilder = new global::MiHomo.Protos.HideAndSeekActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
              subBuilder.MergeFrom(HideAndSeekInfo);
            }
            input.ReadMessage(subBuilder);
            HideAndSeekInfo = subBuilder;
            break;
          }
          case 3562: {
            global::MiHomo.Protos.VintageActivityDetailInfo subBuilder = new global::MiHomo.Protos.VintageActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.VintageInfo) {
              subBuilder.MergeFrom(VintageInfo);
            }
            input.ReadMessage(subBuilder);
            VintageInfo = subBuilder;
            break;
          }
          case 3682: {
            global::MiHomo.Protos.MusicGameActivityDetailInfo subBuilder = new global::MiHomo.Protos.MusicGameActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MusicGameInfo) {
              subBuilder.MergeFrom(MusicGameInfo);
            }
            input.ReadMessage(subBuilder);
            MusicGameInfo = subBuilder;
            break;
          }
          case 3922: {
            global::MiHomo.Protos.FungusFighterDetailInfo subBuilder = new global::MiHomo.Protos.FungusFighterDetailInfo();
            if (detailCase_ == DetailOneofCase.FungusFighterInfo) {
              subBuilder.MergeFrom(FungusFighterInfo);
            }
            input.ReadMessage(subBuilder);
            FungusFighterInfo = subBuilder;
            break;
          }
          case 3930: {
            global::MiHomo.Protos.HachiActivityDetailInfo subBuilder = new global::MiHomo.Protos.HachiActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.HachiInfo) {
              subBuilder.MergeFrom(HachiInfo);
            }
            input.ReadMessage(subBuilder);
            HachiInfo = subBuilder;
            break;
          }
          case 3954: {
            global::MiHomo.Protos.SeaLampActivityInfo subBuilder = new global::MiHomo.Protos.SeaLampActivityInfo();
            if (detailCase_ == DetailOneofCase.SeaLampInfo) {
              subBuilder.MergeFrom(SeaLampInfo);
            }
            input.ReadMessage(subBuilder);
            SeaLampInfo = subBuilder;
            break;
          }
          case 4458: {
            global::MiHomo.Protos.AsterActivityDetailInfo subBuilder = new global::MiHomo.Protos.AsterActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.AsterInfo) {
              subBuilder.MergeFrom(AsterInfo);
            }
            input.ReadMessage(subBuilder);
            AsterInfo = subBuilder;
            break;
          }
          case 4736: {
            FirstDayStartTime = input.ReadUInt32();
            break;
          }
          case 4978: {
            global::MiHomo.Protos.SummerTimeV2DetailInfo subBuilder = new global::MiHomo.Protos.SummerTimeV2DetailInfo();
            if (detailCase_ == DetailOneofCase.SummerTimeV2Info) {
              subBuilder.MergeFrom(SummerTimeV2Info);
            }
            input.ReadMessage(subBuilder);
            SummerTimeV2Info = subBuilder;
            break;
          }
          case 5458: {
            activityCoinMap_.AddEntriesFrom(ref input, _map_activityCoinMap_codec);
            break;
          }
          case 5626: {
            global::MiHomo.Protos.UgcActivityDetailInfo subBuilder = new global::MiHomo.Protos.UgcActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.UgcInfo) {
              subBuilder.MergeFrom(UgcInfo);
            }
            input.ReadMessage(subBuilder);
            UgcInfo = subBuilder;
            break;
          }
          case 5778: {
            global::MiHomo.Protos.GearActivityDetailInfo subBuilder = new global::MiHomo.Protos.GearActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.GearInfo) {
              subBuilder.MergeFrom(GearInfo);
            }
            input.ReadMessage(subBuilder);
            GearInfo = subBuilder;
            break;
          }
          case 6002: {
            global::MiHomo.Protos.IrodoriActivityDetailInfo subBuilder = new global::MiHomo.Protos.IrodoriActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.IrodoriInfo) {
              subBuilder.MergeFrom(IrodoriInfo);
            }
            input.ReadMessage(subBuilder);
            IrodoriInfo = subBuilder;
            break;
          }
          case 6138: {
            global::MiHomo.Protos.BounceConjuringActivityDetailInfo subBuilder = new global::MiHomo.Protos.BounceConjuringActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BounceConjuringInfo) {
              subBuilder.MergeFrom(BounceConjuringInfo);
            }
            input.ReadMessage(subBuilder);
            BounceConjuringInfo = subBuilder;
            break;
          }
          case 6354: {
            global::MiHomo.Protos.BlitzRushActivityDetailInfo subBuilder = new global::MiHomo.Protos.BlitzRushActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BlitzRushInfo) {
              subBuilder.MergeFrom(BlitzRushInfo);
            }
            input.ReadMessage(subBuilder);
            BlitzRushInfo = subBuilder;
            break;
          }
          case 6498: {
            global::MiHomo.Protos.RogueDiaryActivityDetailInfo subBuilder = new global::MiHomo.Protos.RogueDiaryActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.RogueDiaryInfo) {
              subBuilder.MergeFrom(RogueDiaryInfo);
            }
            input.ReadMessage(subBuilder);
            RogueDiaryInfo = subBuilder;
            break;
          }
          case 6514: {
            global::MiHomo.Protos.LunaRiteDetailInfo subBuilder = new global::MiHomo.Protos.LunaRiteDetailInfo();
            if (detailCase_ == DetailOneofCase.LunaRiteInfo) {
              subBuilder.MergeFrom(LunaRiteInfo);
            }
            input.ReadMessage(subBuilder);
            LunaRiteInfo = subBuilder;
            break;
          }
          case 6602: {
            global::MiHomo.Protos.GachaActivityDetailInfo subBuilder = new global::MiHomo.Protos.GachaActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.GachaInfo) {
              subBuilder.MergeFrom(GachaInfo);
            }
            input.ReadMessage(subBuilder);
            GachaInfo = subBuilder;
            break;
          }
          case 6858: {
            global::MiHomo.Protos.FleurFairActivityDetailInfo subBuilder = new global::MiHomo.Protos.FleurFairActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.FleurFairInfo) {
              subBuilder.MergeFrom(FleurFairInfo);
            }
            input.ReadMessage(subBuilder);
            FleurFairInfo = subBuilder;
            break;
          }
          case 6874: {
            global::MiHomo.Protos.ArenaChallengeActivityDetailInfo subBuilder = new global::MiHomo.Protos.ArenaChallengeActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ArenaChallengeInfo) {
              subBuilder.MergeFrom(ArenaChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            ArenaChallengeInfo = subBuilder;
            break;
          }
          case 6914: {
            activityPushTipsDataList_.AddEntriesFrom(ref input, _repeated_activityPushTipsDataList_codec);
            break;
          }
          case 7352: {
            IsHidden = input.ReadBool();
            break;
          }
          case 7418: {
            global::MiHomo.Protos.ChessActivityDetailInfo subBuilder = new global::MiHomo.Protos.ChessActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ChessInfo) {
              subBuilder.MergeFrom(ChessInfo);
            }
            input.ReadMessage(subBuilder);
            ChessInfo = subBuilder;
            break;
          }
          case 7730: {
            global::MiHomo.Protos.TreasureSeelieActivityDetailInfo subBuilder = new global::MiHomo.Protos.TreasureSeelieActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TreasureSeelieInfo) {
              subBuilder.MergeFrom(TreasureSeelieInfo);
            }
            input.ReadMessage(subBuilder);
            TreasureSeelieInfo = subBuilder;
            break;
          }
          case 8122: {
            global::MiHomo.Protos.ChannelerSlabActivityDetailInfo subBuilder = new global::MiHomo.Protos.ChannelerSlabActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.ChallnelerSlabInfo) {
              subBuilder.MergeFrom(ChallnelerSlabInfo);
            }
            input.ReadMessage(subBuilder);
            ChallnelerSlabInfo = subBuilder;
            break;
          }
          case 8202: {
            global::MiHomo.Protos.EffigyChallengeV2DetailInfo subBuilder = new global::MiHomo.Protos.EffigyChallengeV2DetailInfo();
            if (detailCase_ == DetailOneofCase.EffigyChallengeInfo) {
              subBuilder.MergeFrom(EffigyChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            EffigyChallengeInfo = subBuilder;
            break;
          }
          case 8346: {
            global::MiHomo.Protos.InstableSprayDetailInfo subBuilder = new global::MiHomo.Protos.InstableSprayDetailInfo();
            if (detailCase_ == DetailOneofCase.InstableSprayInfo) {
              subBuilder.MergeFrom(InstableSprayInfo);
            }
            input.ReadMessage(subBuilder);
            InstableSprayInfo = subBuilder;
            break;
          }
          case 8626: {
            global::MiHomo.Protos.RockBoardExploreDetailInfo subBuilder = new global::MiHomo.Protos.RockBoardExploreDetailInfo();
            if (detailCase_ == DetailOneofCase.RockBoardExploreInfo) {
              subBuilder.MergeFrom(RockBoardExploreInfo);
            }
            input.ReadMessage(subBuilder);
            RockBoardExploreInfo = subBuilder;
            break;
          }
          case 8666: {
            global::MiHomo.Protos.WinterCampActivityDetailInfo subBuilder = new global::MiHomo.Protos.WinterCampActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.WinterCampInfo) {
              subBuilder.MergeFrom(WinterCampInfo);
            }
            input.ReadMessage(subBuilder);
            WinterCampInfo = subBuilder;
            break;
          }
          case 8738: {
            global::MiHomo.Protos.DeliveryActivityDetailInfo subBuilder = new global::MiHomo.Protos.DeliveryActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.DeliveryInfo) {
              subBuilder.MergeFrom(DeliveryInfo);
            }
            input.ReadMessage(subBuilder);
            DeliveryInfo = subBuilder;
            break;
          }
          case 8906: {
            global::MiHomo.Protos.EchoShellDetailInfo subBuilder = new global::MiHomo.Protos.EchoShellDetailInfo();
            if (detailCase_ == DetailOneofCase.EchoShellInfo) {
              subBuilder.MergeFrom(EchoShellInfo);
            }
            input.ReadMessage(subBuilder);
            EchoShellInfo = subBuilder;
            break;
          }
          case 8914: {
            global::MiHomo.Protos.TreasureMapActivityDetailInfo subBuilder = new global::MiHomo.Protos.TreasureMapActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TreasureMapInfo) {
              subBuilder.MergeFrom(TreasureMapInfo);
            }
            input.ReadMessage(subBuilder);
            TreasureMapInfo = subBuilder;
            break;
          }
          case 9258: {
            global::MiHomo.Protos.MuqadasPotionActivityDetailInfo subBuilder = new global::MiHomo.Protos.MuqadasPotionActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MuqadasPotionInfo) {
              subBuilder.MergeFrom(MuqadasPotionInfo);
            }
            input.ReadMessage(subBuilder);
            MuqadasPotionInfo = subBuilder;
            break;
          }
          case 9386: {
            global::MiHomo.Protos.DuelHeartDetailInfo subBuilder = new global::MiHomo.Protos.DuelHeartDetailInfo();
            if (detailCase_ == DetailOneofCase.DuelHeartInfo) {
              subBuilder.MergeFrom(DuelHeartInfo);
            }
            input.ReadMessage(subBuilder);
            DuelHeartInfo = subBuilder;
            break;
          }
          case 9810: {
            global::MiHomo.Protos.CrystalLinkActivityDetailInfo subBuilder = new global::MiHomo.Protos.CrystalLinkActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.CrystalLinkInfo) {
              subBuilder.MergeFrom(CrystalLinkInfo);
            }
            input.ReadMessage(subBuilder);
            CrystalLinkInfo = subBuilder;
            break;
          }
          case 10090: {
            global::MiHomo.Protos.SumoActivityDetailInfo subBuilder = new global::MiHomo.Protos.SumoActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SumoInfo) {
              subBuilder.MergeFrom(SumoInfo);
            }
            input.ReadMessage(subBuilder);
            SumoInfo = subBuilder;
            break;
          }
          case 10186: {
            global::MiHomo.Protos.PotionActivityDetailInfo subBuilder = new global::MiHomo.Protos.PotionActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.PotionInfo) {
              subBuilder.MergeFrom(PotionInfo);
            }
            input.ReadMessage(subBuilder);
            PotionInfo = subBuilder;
            break;
          }
          case 10320: {
            SelectedAvatarRewardId = input.ReadUInt32();
            break;
          }
          case 10466: {
            global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfo subBuilder = new global::MiHomo.Protos.LuminanceStoneChallengeActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.LuminanceStoneChallengeInfo) {
              subBuilder.MergeFrom(LuminanceStoneChallengeInfo);
            }
            input.ReadMessage(subBuilder);
            LuminanceStoneChallengeInfo = subBuilder;
            break;
          }
          case 10922: {
            global::MiHomo.Protos.FlightActivityDetailInfo subBuilder = new global::MiHomo.Protos.FlightActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.FlightInfo) {
              subBuilder.MergeFrom(FlightInfo);
            }
            input.ReadMessage(subBuilder);
            FlightInfo = subBuilder;
            break;
          }
          case 10954: {
            global::MiHomo.Protos.BrickBreakerDetailInfo subBuilder = new global::MiHomo.Protos.BrickBreakerDetailInfo();
            if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
              subBuilder.MergeFrom(BrickBreakerInfo);
            }
            input.ReadMessage(subBuilder);
            BrickBreakerInfo = subBuilder;
            break;
          }
          case 10978: {
            global::MiHomo.Protos.SummerTimeDetailInfo subBuilder = new global::MiHomo.Protos.SummerTimeDetailInfo();
            if (detailCase_ == DetailOneofCase.SummerTimeInfo) {
              subBuilder.MergeFrom(SummerTimeInfo);
            }
            input.ReadMessage(subBuilder);
            SummerTimeInfo = subBuilder;
            break;
          }
          case 11194: {
            wishGiftNumMap_.AddEntriesFrom(ref input, _map_wishGiftNumMap_codec);
            break;
          }
          case 11290: {
            global::MiHomo.Protos.FindHilichurlDetailInfo subBuilder = new global::MiHomo.Protos.FindHilichurlDetailInfo();
            if (detailCase_ == DetailOneofCase.FindHilichurlInfo) {
              subBuilder.MergeFrom(FindHilichurlInfo);
            }
            input.ReadMessage(subBuilder);
            FindHilichurlInfo = subBuilder;
            break;
          }
          case 11592: {
            IsQuickOpen = input.ReadBool();
            break;
          }
          case 11970: {
            global::MiHomo.Protos.CharAmusementDetailInfo subBuilder = new global::MiHomo.Protos.CharAmusementDetailInfo();
            if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
              subBuilder.MergeFrom(CharAmusementInfo);
            }
            input.ReadMessage(subBuilder);
            CharAmusementInfo = subBuilder;
            break;
          }
          case 12378: {
            global::MiHomo.Protos.TeamChainDetailInfo subBuilder = new global::MiHomo.Protos.TeamChainDetailInfo();
            if (detailCase_ == DetailOneofCase.TeamChainInfo) {
              subBuilder.MergeFrom(TeamChainInfo);
            }
            input.ReadMessage(subBuilder);
            TeamChainInfo = subBuilder;
            break;
          }
          case 12706: {
            global::MiHomo.Protos.MoonfinTrialActivityDetailInfo subBuilder = new global::MiHomo.Protos.MoonfinTrialActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.MoonfinTrialInfo) {
              subBuilder.MergeFrom(MoonfinTrialInfo);
            }
            input.ReadMessage(subBuilder);
            MoonfinTrialInfo = subBuilder;
            break;
          }
          case 13042: {
            global::MiHomo.Protos.ElectroherculesBattleDetailInfo subBuilder = new global::MiHomo.Protos.ElectroherculesBattleDetailInfo();
            if (detailCase_ == DetailOneofCase.ElectroherculesBattleInfo) {
              subBuilder.MergeFrom(ElectroherculesBattleInfo);
            }
            input.ReadMessage(subBuilder);
            ElectroherculesBattleInfo = subBuilder;
            break;
          }
          case 13402: {
            global::MiHomo.Protos.WaterSpiritActivityDetailInfo subBuilder = new global::MiHomo.Protos.WaterSpiritActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.WaterSpiritInfo) {
              subBuilder.MergeFrom(WaterSpiritInfo);
            }
            input.ReadMessage(subBuilder);
            WaterSpiritInfo = subBuilder;
            break;
          }
          case 13434: {
            global::MiHomo.Protos.CoinCollectDetailInfo subBuilder = new global::MiHomo.Protos.CoinCollectDetailInfo();
            if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
              subBuilder.MergeFrom(CoinCollectInfo);
            }
            input.ReadMessage(subBuilder);
            CoinCollectInfo = subBuilder;
            break;
          }
          case 13802: {
            global::MiHomo.Protos.BartenderActivityDetailInfo subBuilder = new global::MiHomo.Protos.BartenderActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BartenderInfo) {
              subBuilder.MergeFrom(BartenderInfo);
            }
            input.ReadMessage(subBuilder);
            BartenderInfo = subBuilder;
            break;
          }
          case 13818: {
            global::MiHomo.Protos.DragonSpineActivityDetailInfo subBuilder = new global::MiHomo.Protos.DragonSpineActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.DragonSpineInfo) {
              subBuilder.MergeFrom(DragonSpineInfo);
            }
            input.ReadMessage(subBuilder);
            DragonSpineInfo = subBuilder;
            break;
          }
          case 14370: {
            global::MiHomo.Protos.TanukiTravelActivityDetailInfo subBuilder = new global::MiHomo.Protos.TanukiTravelActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.TanukiTravelActivityInfo) {
              subBuilder.MergeFrom(TanukiTravelActivityInfo);
            }
            input.ReadMessage(subBuilder);
            TanukiTravelActivityInfo = subBuilder;
            break;
          }
          case 14738: {
            global::MiHomo.Protos.BuoyantCombatDetailInfo subBuilder = new global::MiHomo.Protos.BuoyantCombatDetailInfo();
            if (detailCase_ == DetailOneofCase.BuoyantCombatInfo) {
              subBuilder.MergeFrom(BuoyantCombatInfo);
            }
            input.ReadMessage(subBuilder);
            BuoyantCombatInfo = subBuilder;
            break;
          }
          case 14954: {
            global::MiHomo.Protos.BlessingActivityDetailInfo subBuilder = new global::MiHomo.Protos.BlessingActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.BlessingInfo) {
              subBuilder.MergeFrom(BlessingInfo);
            }
            input.ReadMessage(subBuilder);
            BlessingInfo = subBuilder;
            break;
          }
          case 15010: {
            global::MiHomo.Protos.LanternRiteActivityDetailInfo subBuilder = new global::MiHomo.Protos.LanternRiteActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.LanternRiteActivityInfo) {
              subBuilder.MergeFrom(LanternRiteActivityInfo);
            }
            input.ReadMessage(subBuilder);
            LanternRiteActivityInfo = subBuilder;
            break;
          }
          case 15082: {
            global::MiHomo.Protos.IslandPartyDetailInfo subBuilder = new global::MiHomo.Protos.IslandPartyDetailInfo();
            if (detailCase_ == DetailOneofCase.IslandPartyInfo) {
              subBuilder.MergeFrom(IslandPartyInfo);
            }
            input.ReadMessage(subBuilder);
            IslandPartyInfo = subBuilder;
            break;
          }
          case 15130: {
            global::MiHomo.Protos.SpiceActivityDetailInfo subBuilder = new global::MiHomo.Protos.SpiceActivityDetailInfo();
            if (detailCase_ == DetailOneofCase.SpiceInfo) {
              subBuilder.MergeFrom(SpiceInfo);
            }
            input.ReadMessage(subBuilder);
            SpiceInfo = subBuilder;
            break;
          }
          case 15248: {
            CurScore = input.ReadUInt32();
            break;
          }
          case 15290: {
            global::MiHomo.Protos.GravenInnocenceDetailInfo subBuilder = new global::MiHomo.Protos.GravenInnocenceDetailInfo();
            if (detailCase_ == DetailOneofCase.GravenInnocenceInfo) {
              subBuilder.MergeFrom(GravenInnocenceInfo);
            }
            input.ReadMessage(subBuilder);
            GravenInnocenceInfo = subBuilder;
            break;
          }
          case 15664: {
            ScoreLimit = input.ReadUInt32();
            break;
          }
          case 15704: {
            IsCommonContentClosed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
