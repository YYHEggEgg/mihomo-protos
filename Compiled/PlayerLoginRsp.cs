// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerLoginRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from PlayerLoginRsp.proto</summary>
  public static partial class PlayerLoginRspReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerLoginRsp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerLoginRspReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQbGF5ZXJMb2dpblJzcC5wcm90bxINbWlIb21vLlByb3RvcxoPQmxvY2tJ",
            "bmZvLnByb3RvGhZGZWF0dXJlQmxvY2tJbmZvLnByb3RvGhZSZXNWZXJzaW9u",
            "Q29uZmlnLnByb3RvGhpTaG9ydEFiaWxpdHlIYXNoUGFpci5wcm90byKhCgoO",
            "UGxheWVyTG9naW5Sc3ASGQoRYWJpbGl0eV9oYXNoX2NvZGUYDCABKAUSEQoI",
            "YmlydGhkYXkY6wogASgJEhsKE2NsaWVudF9kYXRhX3ZlcnNpb24YCiABKA0S",
            "EwoKY2xpZW50X21kNRiTCiABKAkSIwobY2xpZW50X3NpbGVuY2VfZGF0YV92",
            "ZXJzaW9uGAEgASgNEhoKEmNsaWVudF9zaWxlbmNlX21kNRgQIAEoCRImCh1j",
            "bGllbnRfc2lsZW5jZV92ZXJzaW9uX3N1ZmZpeBiMByABKAkSHgoVY2xpZW50",
            "X3ZlcnNpb25fc3VmZml4GLUOIAEoCRIVCgxjb3VudHJ5X2NvZGUY6AIgASgJ",
            "EkEKF2ZlYXR1cmVfYmxvY2tfaW5mb19saXN0GIoBIAMoCzIfLm1pSG9tby5Q",
            "cm90b3MuRmVhdHVyZUJsb2NrSW5mbxIQCghnYW1lX2JpehgEIAEoCRIRCghp",
            "c19hdWRpdBiiByABKAgSHQoUaXNfZGF0YV9uZWVkX3JlbG9naW4Y3wggASgI",
            "EhMKCmlzX3NjX29wZW4Y8gsgASgIEhQKC2lzX3RyYW5zZmVyGKcCIAEoCBIb",
            "ChNpc191c2VfYWJpbGl0eV9oYXNoGAUgASgIEhIKCmxvZ2luX3JhbmQYCSAB",
            "KAQSQQoXbmV4dF9yZXNfdmVyc2lvbl9jb25maWcYmA0gASgLMh8ubWlIb21v",
            "LlByb3Rvcy5SZXNWZXJzaW9uQ29uZmlnEhoKEW5leHRfcmVzb3VyY2VfdXJs",
            "GKwKIAEoCRITCgtwbGF5ZXJfZGF0YRgCIAEoDBIbChNwbGF5ZXJfZGF0YV92",
            "ZXJzaW9uGA4gASgNEhQKDHJlZ2lzdGVyX2NwcxhjIAEoCRI8ChJyZXNfdmVy",
            "c2lvbl9jb25maWcYqAYgASgLMh8ubWlIb21vLlByb3Rvcy5SZXNWZXJzaW9u",
            "Q29uZmlnEg8KB3JldGNvZGUYByABKAUSEAoHc2NfaW5mbxjgDiABKAwSRAoW",
            "c2hvcnRfYWJpbGl0eV9oYXNoX21hcBjdCiADKAsyIy5taUhvbW8uUHJvdG9z",
            "LlNob3J0QWJpbGl0eUhhc2hQYWlyEh4KFXRhcmdldF9ob21lX293bmVyX3Vp",
            "ZBi+AyABKA0SEgoKdGFyZ2V0X3VpZBgPIAEoDRIYCg90b3RhbF90aWNrX3Rp",
            "bWUYkgQgASgBEhwKE1VuazMzMDBfRUpLQ05OREZBQUkYxAEgASgIEhsKE1Vu",
            "azMzMDBfSEdGTkVDSUpETE4YDSABKAgSGwoTVW5rMzMwMF9JQURMSUlNR0RN",
            "QxgRIAEoCBIbChNVbmszMzAwX0lJSERLS05KUEdEGAggASgIEksKEGFiaWxp",
            "dHlfaGFzaF9tYXAYAyADKAsyMS5taUhvbW8uUHJvdG9zLlBsYXllckxvZ2lu",
            "UnNwLkFiaWxpdHlIYXNoTWFwRW50cnkSSAoOYmxvY2tfaW5mb19tYXAY4g8g",
            "AygLMi8ubWlIb21vLlByb3Rvcy5QbGF5ZXJMb2dpblJzcC5CbG9ja0luZm9N",
            "YXBFbnRyeRo1ChNBYmlsaXR5SGFzaE1hcEVudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoBToCOAEaTQoRQmxvY2tJbmZvTWFwRW50cnkSCwoDa2V5",
            "GAEgASgNEicKBXZhbHVlGAIgASgLMhgubWlIb21vLlByb3Rvcy5CbG9ja0lu",
            "Zm86AjgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.BlockInfoReflection.Descriptor, global::MiHomo.Protos.FeatureBlockInfoReflection.Descriptor, global::MiHomo.Protos.ResVersionConfigReflection.Descriptor, global::MiHomo.Protos.ShortAbilityHashPairReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.PlayerLoginRsp), global::MiHomo.Protos.PlayerLoginRsp.Parser, new[]{ "AbilityHashCode", "Birthday", "ClientDataVersion", "ClientMd5", "ClientSilenceDataVersion", "ClientSilenceMd5", "ClientSilenceVersionSuffix", "ClientVersionSuffix", "CountryCode", "FeatureBlockInfoList", "GameBiz", "IsAudit", "IsDataNeedRelogin", "IsScOpen", "IsTransfer", "IsUseAbilityHash", "LoginRand", "NextResVersionConfig", "NextResourceUrl", "PlayerData", "PlayerDataVersion", "RegisterCps", "ResVersionConfig", "Retcode", "ScInfo", "ShortAbilityHashMap", "TargetHomeOwnerUid", "TargetUid", "TotalTickTime", "Unk3300EJKCNNDFAAI", "Unk3300HGFNECIJDLN", "Unk3300IADLIIMGDMC", "Unk3300IIHDKKNJPGD", "AbilityHashMap", "BlockInfoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerLoginRsp : pb::IMessage<PlayerLoginRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerLoginRsp> _parser = new pb::MessageParser<PlayerLoginRsp>(() => new PlayerLoginRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerLoginRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.PlayerLoginRspReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLoginRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLoginRsp(PlayerLoginRsp other) : this() {
      abilityHashCode_ = other.abilityHashCode_;
      birthday_ = other.birthday_;
      clientDataVersion_ = other.clientDataVersion_;
      clientMd5_ = other.clientMd5_;
      clientSilenceDataVersion_ = other.clientSilenceDataVersion_;
      clientSilenceMd5_ = other.clientSilenceMd5_;
      clientSilenceVersionSuffix_ = other.clientSilenceVersionSuffix_;
      clientVersionSuffix_ = other.clientVersionSuffix_;
      countryCode_ = other.countryCode_;
      featureBlockInfoList_ = other.featureBlockInfoList_.Clone();
      gameBiz_ = other.gameBiz_;
      isAudit_ = other.isAudit_;
      isDataNeedRelogin_ = other.isDataNeedRelogin_;
      isScOpen_ = other.isScOpen_;
      isTransfer_ = other.isTransfer_;
      isUseAbilityHash_ = other.isUseAbilityHash_;
      loginRand_ = other.loginRand_;
      nextResVersionConfig_ = other.nextResVersionConfig_ != null ? other.nextResVersionConfig_.Clone() : null;
      nextResourceUrl_ = other.nextResourceUrl_;
      playerData_ = other.playerData_;
      playerDataVersion_ = other.playerDataVersion_;
      registerCps_ = other.registerCps_;
      resVersionConfig_ = other.resVersionConfig_ != null ? other.resVersionConfig_.Clone() : null;
      retcode_ = other.retcode_;
      scInfo_ = other.scInfo_;
      shortAbilityHashMap_ = other.shortAbilityHashMap_.Clone();
      targetHomeOwnerUid_ = other.targetHomeOwnerUid_;
      targetUid_ = other.targetUid_;
      totalTickTime_ = other.totalTickTime_;
      unk3300EJKCNNDFAAI_ = other.unk3300EJKCNNDFAAI_;
      unk3300HGFNECIJDLN_ = other.unk3300HGFNECIJDLN_;
      unk3300IADLIIMGDMC_ = other.unk3300IADLIIMGDMC_;
      unk3300IIHDKKNJPGD_ = other.unk3300IIHDKKNJPGD_;
      abilityHashMap_ = other.abilityHashMap_.Clone();
      blockInfoMap_ = other.blockInfoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLoginRsp Clone() {
      return new PlayerLoginRsp(this);
    }

    /// <summary>Field number for the "ability_hash_code" field.</summary>
    public const int AbilityHashCodeFieldNumber = 12;
    private int abilityHashCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AbilityHashCode {
      get { return abilityHashCode_; }
      set {
        abilityHashCode_ = value;
      }
    }

    /// <summary>Field number for the "birthday" field.</summary>
    public const int BirthdayFieldNumber = 1387;
    private string birthday_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Birthday {
      get { return birthday_; }
      set {
        birthday_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_data_version" field.</summary>
    public const int ClientDataVersionFieldNumber = 10;
    private uint clientDataVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClientDataVersion {
      get { return clientDataVersion_; }
      set {
        clientDataVersion_ = value;
      }
    }

    /// <summary>Field number for the "client_md5" field.</summary>
    public const int ClientMd5FieldNumber = 1299;
    private string clientMd5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientMd5 {
      get { return clientMd5_; }
      set {
        clientMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_silence_data_version" field.</summary>
    public const int ClientSilenceDataVersionFieldNumber = 1;
    private uint clientSilenceDataVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClientSilenceDataVersion {
      get { return clientSilenceDataVersion_; }
      set {
        clientSilenceDataVersion_ = value;
      }
    }

    /// <summary>Field number for the "client_silence_md5" field.</summary>
    public const int ClientSilenceMd5FieldNumber = 16;
    private string clientSilenceMd5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientSilenceMd5 {
      get { return clientSilenceMd5_; }
      set {
        clientSilenceMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_silence_version_suffix" field.</summary>
    public const int ClientSilenceVersionSuffixFieldNumber = 908;
    private string clientSilenceVersionSuffix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientSilenceVersionSuffix {
      get { return clientSilenceVersionSuffix_; }
      set {
        clientSilenceVersionSuffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_version_suffix" field.</summary>
    public const int ClientVersionSuffixFieldNumber = 1845;
    private string clientVersionSuffix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVersionSuffix {
      get { return clientVersionSuffix_; }
      set {
        clientVersionSuffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 360;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feature_block_info_list" field.</summary>
    public const int FeatureBlockInfoListFieldNumber = 138;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.FeatureBlockInfo> _repeated_featureBlockInfoList_codec
        = pb::FieldCodec.ForMessage(1106, global::MiHomo.Protos.FeatureBlockInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.FeatureBlockInfo> featureBlockInfoList_ = new pbc::RepeatedField<global::MiHomo.Protos.FeatureBlockInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.FeatureBlockInfo> FeatureBlockInfoList {
      get { return featureBlockInfoList_; }
    }

    /// <summary>Field number for the "game_biz" field.</summary>
    public const int GameBizFieldNumber = 4;
    private string gameBiz_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameBiz {
      get { return gameBiz_; }
      set {
        gameBiz_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_audit" field.</summary>
    public const int IsAuditFieldNumber = 930;
    private bool isAudit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAudit {
      get { return isAudit_; }
      set {
        isAudit_ = value;
      }
    }

    /// <summary>Field number for the "is_data_need_relogin" field.</summary>
    public const int IsDataNeedReloginFieldNumber = 1119;
    private bool isDataNeedRelogin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDataNeedRelogin {
      get { return isDataNeedRelogin_; }
      set {
        isDataNeedRelogin_ = value;
      }
    }

    /// <summary>Field number for the "is_sc_open" field.</summary>
    public const int IsScOpenFieldNumber = 1522;
    private bool isScOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsScOpen {
      get { return isScOpen_; }
      set {
        isScOpen_ = value;
      }
    }

    /// <summary>Field number for the "is_transfer" field.</summary>
    public const int IsTransferFieldNumber = 295;
    private bool isTransfer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTransfer {
      get { return isTransfer_; }
      set {
        isTransfer_ = value;
      }
    }

    /// <summary>Field number for the "is_use_ability_hash" field.</summary>
    public const int IsUseAbilityHashFieldNumber = 5;
    private bool isUseAbilityHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUseAbilityHash {
      get { return isUseAbilityHash_; }
      set {
        isUseAbilityHash_ = value;
      }
    }

    /// <summary>Field number for the "login_rand" field.</summary>
    public const int LoginRandFieldNumber = 9;
    private ulong loginRand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LoginRand {
      get { return loginRand_; }
      set {
        loginRand_ = value;
      }
    }

    /// <summary>Field number for the "next_res_version_config" field.</summary>
    public const int NextResVersionConfigFieldNumber = 1688;
    private global::MiHomo.Protos.ResVersionConfig nextResVersionConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.ResVersionConfig NextResVersionConfig {
      get { return nextResVersionConfig_; }
      set {
        nextResVersionConfig_ = value;
      }
    }

    /// <summary>Field number for the "next_resource_url" field.</summary>
    public const int NextResourceUrlFieldNumber = 1324;
    private string nextResourceUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextResourceUrl {
      get { return nextResourceUrl_; }
      set {
        nextResourceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_data" field.</summary>
    public const int PlayerDataFieldNumber = 2;
    private pb::ByteString playerData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PlayerData {
      get { return playerData_; }
      set {
        playerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_data_version" field.</summary>
    public const int PlayerDataVersionFieldNumber = 14;
    private uint playerDataVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerDataVersion {
      get { return playerDataVersion_; }
      set {
        playerDataVersion_ = value;
      }
    }

    /// <summary>Field number for the "register_cps" field.</summary>
    public const int RegisterCpsFieldNumber = 99;
    private string registerCps_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RegisterCps {
      get { return registerCps_; }
      set {
        registerCps_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "res_version_config" field.</summary>
    public const int ResVersionConfigFieldNumber = 808;
    private global::MiHomo.Protos.ResVersionConfig resVersionConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.ResVersionConfig ResVersionConfig {
      get { return resVersionConfig_; }
      set {
        resVersionConfig_ = value;
      }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 7;
    private int retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    /// <summary>Field number for the "sc_info" field.</summary>
    public const int ScInfoFieldNumber = 1888;
    private pb::ByteString scInfo_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ScInfo {
      get { return scInfo_; }
      set {
        scInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "short_ability_hash_map" field.</summary>
    public const int ShortAbilityHashMapFieldNumber = 1373;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.ShortAbilityHashPair> _repeated_shortAbilityHashMap_codec
        = pb::FieldCodec.ForMessage(10986, global::MiHomo.Protos.ShortAbilityHashPair.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.ShortAbilityHashPair> shortAbilityHashMap_ = new pbc::RepeatedField<global::MiHomo.Protos.ShortAbilityHashPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.ShortAbilityHashPair> ShortAbilityHashMap {
      get { return shortAbilityHashMap_; }
    }

    /// <summary>Field number for the "target_home_owner_uid" field.</summary>
    public const int TargetHomeOwnerUidFieldNumber = 446;
    private uint targetHomeOwnerUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetHomeOwnerUid {
      get { return targetHomeOwnerUid_; }
      set {
        targetHomeOwnerUid_ = value;
      }
    }

    /// <summary>Field number for the "target_uid" field.</summary>
    public const int TargetUidFieldNumber = 15;
    private uint targetUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetUid {
      get { return targetUid_; }
      set {
        targetUid_ = value;
      }
    }

    /// <summary>Field number for the "total_tick_time" field.</summary>
    public const int TotalTickTimeFieldNumber = 530;
    private double totalTickTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalTickTime {
      get { return totalTickTime_; }
      set {
        totalTickTime_ = value;
      }
    }

    /// <summary>Field number for the "Unk3300_EJKCNNDFAAI" field.</summary>
    public const int Unk3300EJKCNNDFAAIFieldNumber = 196;
    private bool unk3300EJKCNNDFAAI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unk3300EJKCNNDFAAI {
      get { return unk3300EJKCNNDFAAI_; }
      set {
        unk3300EJKCNNDFAAI_ = value;
      }
    }

    /// <summary>Field number for the "Unk3300_HGFNECIJDLN" field.</summary>
    public const int Unk3300HGFNECIJDLNFieldNumber = 13;
    private bool unk3300HGFNECIJDLN_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unk3300HGFNECIJDLN {
      get { return unk3300HGFNECIJDLN_; }
      set {
        unk3300HGFNECIJDLN_ = value;
      }
    }

    /// <summary>Field number for the "Unk3300_IADLIIMGDMC" field.</summary>
    public const int Unk3300IADLIIMGDMCFieldNumber = 17;
    private bool unk3300IADLIIMGDMC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unk3300IADLIIMGDMC {
      get { return unk3300IADLIIMGDMC_; }
      set {
        unk3300IADLIIMGDMC_ = value;
      }
    }

    /// <summary>Field number for the "Unk3300_IIHDKKNJPGD" field.</summary>
    public const int Unk3300IIHDKKNJPGDFieldNumber = 8;
    private bool unk3300IIHDKKNJPGD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Unk3300IIHDKKNJPGD {
      get { return unk3300IIHDKKNJPGD_; }
      set {
        unk3300IIHDKKNJPGD_ = value;
      }
    }

    /// <summary>Field number for the "ability_hash_map" field.</summary>
    public const int AbilityHashMapFieldNumber = 3;
    private static readonly pbc::MapField<string, int>.Codec _map_abilityHashMap_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 26);
    private readonly pbc::MapField<string, int> abilityHashMap_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> AbilityHashMap {
      get { return abilityHashMap_; }
    }

    /// <summary>Field number for the "block_info_map" field.</summary>
    public const int BlockInfoMapFieldNumber = 2018;
    private static readonly pbc::MapField<uint, global::MiHomo.Protos.BlockInfo>.Codec _map_blockInfoMap_codec
        = new pbc::MapField<uint, global::MiHomo.Protos.BlockInfo>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::MiHomo.Protos.BlockInfo.Parser), 16146);
    private readonly pbc::MapField<uint, global::MiHomo.Protos.BlockInfo> blockInfoMap_ = new pbc::MapField<uint, global::MiHomo.Protos.BlockInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::MiHomo.Protos.BlockInfo> BlockInfoMap {
      get { return blockInfoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerLoginRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerLoginRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityHashCode != other.AbilityHashCode) return false;
      if (Birthday != other.Birthday) return false;
      if (ClientDataVersion != other.ClientDataVersion) return false;
      if (ClientMd5 != other.ClientMd5) return false;
      if (ClientSilenceDataVersion != other.ClientSilenceDataVersion) return false;
      if (ClientSilenceMd5 != other.ClientSilenceMd5) return false;
      if (ClientSilenceVersionSuffix != other.ClientSilenceVersionSuffix) return false;
      if (ClientVersionSuffix != other.ClientVersionSuffix) return false;
      if (CountryCode != other.CountryCode) return false;
      if(!featureBlockInfoList_.Equals(other.featureBlockInfoList_)) return false;
      if (GameBiz != other.GameBiz) return false;
      if (IsAudit != other.IsAudit) return false;
      if (IsDataNeedRelogin != other.IsDataNeedRelogin) return false;
      if (IsScOpen != other.IsScOpen) return false;
      if (IsTransfer != other.IsTransfer) return false;
      if (IsUseAbilityHash != other.IsUseAbilityHash) return false;
      if (LoginRand != other.LoginRand) return false;
      if (!object.Equals(NextResVersionConfig, other.NextResVersionConfig)) return false;
      if (NextResourceUrl != other.NextResourceUrl) return false;
      if (PlayerData != other.PlayerData) return false;
      if (PlayerDataVersion != other.PlayerDataVersion) return false;
      if (RegisterCps != other.RegisterCps) return false;
      if (!object.Equals(ResVersionConfig, other.ResVersionConfig)) return false;
      if (Retcode != other.Retcode) return false;
      if (ScInfo != other.ScInfo) return false;
      if(!shortAbilityHashMap_.Equals(other.shortAbilityHashMap_)) return false;
      if (TargetHomeOwnerUid != other.TargetHomeOwnerUid) return false;
      if (TargetUid != other.TargetUid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalTickTime, other.TotalTickTime)) return false;
      if (Unk3300EJKCNNDFAAI != other.Unk3300EJKCNNDFAAI) return false;
      if (Unk3300HGFNECIJDLN != other.Unk3300HGFNECIJDLN) return false;
      if (Unk3300IADLIIMGDMC != other.Unk3300IADLIIMGDMC) return false;
      if (Unk3300IIHDKKNJPGD != other.Unk3300IIHDKKNJPGD) return false;
      if (!AbilityHashMap.Equals(other.AbilityHashMap)) return false;
      if (!BlockInfoMap.Equals(other.BlockInfoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AbilityHashCode != 0) hash ^= AbilityHashCode.GetHashCode();
      if (Birthday.Length != 0) hash ^= Birthday.GetHashCode();
      if (ClientDataVersion != 0) hash ^= ClientDataVersion.GetHashCode();
      if (ClientMd5.Length != 0) hash ^= ClientMd5.GetHashCode();
      if (ClientSilenceDataVersion != 0) hash ^= ClientSilenceDataVersion.GetHashCode();
      if (ClientSilenceMd5.Length != 0) hash ^= ClientSilenceMd5.GetHashCode();
      if (ClientSilenceVersionSuffix.Length != 0) hash ^= ClientSilenceVersionSuffix.GetHashCode();
      if (ClientVersionSuffix.Length != 0) hash ^= ClientVersionSuffix.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      hash ^= featureBlockInfoList_.GetHashCode();
      if (GameBiz.Length != 0) hash ^= GameBiz.GetHashCode();
      if (IsAudit != false) hash ^= IsAudit.GetHashCode();
      if (IsDataNeedRelogin != false) hash ^= IsDataNeedRelogin.GetHashCode();
      if (IsScOpen != false) hash ^= IsScOpen.GetHashCode();
      if (IsTransfer != false) hash ^= IsTransfer.GetHashCode();
      if (IsUseAbilityHash != false) hash ^= IsUseAbilityHash.GetHashCode();
      if (LoginRand != 0UL) hash ^= LoginRand.GetHashCode();
      if (nextResVersionConfig_ != null) hash ^= NextResVersionConfig.GetHashCode();
      if (NextResourceUrl.Length != 0) hash ^= NextResourceUrl.GetHashCode();
      if (PlayerData.Length != 0) hash ^= PlayerData.GetHashCode();
      if (PlayerDataVersion != 0) hash ^= PlayerDataVersion.GetHashCode();
      if (RegisterCps.Length != 0) hash ^= RegisterCps.GetHashCode();
      if (resVersionConfig_ != null) hash ^= ResVersionConfig.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (ScInfo.Length != 0) hash ^= ScInfo.GetHashCode();
      hash ^= shortAbilityHashMap_.GetHashCode();
      if (TargetHomeOwnerUid != 0) hash ^= TargetHomeOwnerUid.GetHashCode();
      if (TargetUid != 0) hash ^= TargetUid.GetHashCode();
      if (TotalTickTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalTickTime);
      if (Unk3300EJKCNNDFAAI != false) hash ^= Unk3300EJKCNNDFAAI.GetHashCode();
      if (Unk3300HGFNECIJDLN != false) hash ^= Unk3300HGFNECIJDLN.GetHashCode();
      if (Unk3300IADLIIMGDMC != false) hash ^= Unk3300IADLIIMGDMC.GetHashCode();
      if (Unk3300IIHDKKNJPGD != false) hash ^= Unk3300IIHDKKNJPGD.GetHashCode();
      hash ^= AbilityHashMap.GetHashCode();
      hash ^= BlockInfoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientSilenceDataVersion != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientSilenceDataVersion);
      }
      if (PlayerData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PlayerData);
      }
      abilityHashMap_.WriteTo(output, _map_abilityHashMap_codec);
      if (GameBiz.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GameBiz);
      }
      if (IsUseAbilityHash != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsUseAbilityHash);
      }
      if (Retcode != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Retcode);
      }
      if (Unk3300IIHDKKNJPGD != false) {
        output.WriteRawTag(64);
        output.WriteBool(Unk3300IIHDKKNJPGD);
      }
      if (LoginRand != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(LoginRand);
      }
      if (ClientDataVersion != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ClientDataVersion);
      }
      if (AbilityHashCode != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AbilityHashCode);
      }
      if (Unk3300HGFNECIJDLN != false) {
        output.WriteRawTag(104);
        output.WriteBool(Unk3300HGFNECIJDLN);
      }
      if (PlayerDataVersion != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(PlayerDataVersion);
      }
      if (TargetUid != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TargetUid);
      }
      if (ClientSilenceMd5.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ClientSilenceMd5);
      }
      if (Unk3300IADLIIMGDMC != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Unk3300IADLIIMGDMC);
      }
      if (RegisterCps.Length != 0) {
        output.WriteRawTag(154, 6);
        output.WriteString(RegisterCps);
      }
      featureBlockInfoList_.WriteTo(output, _repeated_featureBlockInfoList_codec);
      if (Unk3300EJKCNNDFAAI != false) {
        output.WriteRawTag(160, 12);
        output.WriteBool(Unk3300EJKCNNDFAAI);
      }
      if (IsTransfer != false) {
        output.WriteRawTag(184, 18);
        output.WriteBool(IsTransfer);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(194, 22);
        output.WriteString(CountryCode);
      }
      if (TargetHomeOwnerUid != 0) {
        output.WriteRawTag(240, 27);
        output.WriteUInt32(TargetHomeOwnerUid);
      }
      if (TotalTickTime != 0D) {
        output.WriteRawTag(145, 33);
        output.WriteDouble(TotalTickTime);
      }
      if (resVersionConfig_ != null) {
        output.WriteRawTag(194, 50);
        output.WriteMessage(ResVersionConfig);
      }
      if (ClientSilenceVersionSuffix.Length != 0) {
        output.WriteRawTag(226, 56);
        output.WriteString(ClientSilenceVersionSuffix);
      }
      if (IsAudit != false) {
        output.WriteRawTag(144, 58);
        output.WriteBool(IsAudit);
      }
      if (IsDataNeedRelogin != false) {
        output.WriteRawTag(248, 69);
        output.WriteBool(IsDataNeedRelogin);
      }
      if (ClientMd5.Length != 0) {
        output.WriteRawTag(154, 81);
        output.WriteString(ClientMd5);
      }
      if (NextResourceUrl.Length != 0) {
        output.WriteRawTag(226, 82);
        output.WriteString(NextResourceUrl);
      }
      shortAbilityHashMap_.WriteTo(output, _repeated_shortAbilityHashMap_codec);
      if (Birthday.Length != 0) {
        output.WriteRawTag(218, 86);
        output.WriteString(Birthday);
      }
      if (IsScOpen != false) {
        output.WriteRawTag(144, 95);
        output.WriteBool(IsScOpen);
      }
      if (nextResVersionConfig_ != null) {
        output.WriteRawTag(194, 105);
        output.WriteMessage(NextResVersionConfig);
      }
      if (ClientVersionSuffix.Length != 0) {
        output.WriteRawTag(170, 115);
        output.WriteString(ClientVersionSuffix);
      }
      if (ScInfo.Length != 0) {
        output.WriteRawTag(130, 118);
        output.WriteBytes(ScInfo);
      }
      blockInfoMap_.WriteTo(output, _map_blockInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientSilenceDataVersion != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientSilenceDataVersion);
      }
      if (PlayerData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PlayerData);
      }
      abilityHashMap_.WriteTo(ref output, _map_abilityHashMap_codec);
      if (GameBiz.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GameBiz);
      }
      if (IsUseAbilityHash != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsUseAbilityHash);
      }
      if (Retcode != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Retcode);
      }
      if (Unk3300IIHDKKNJPGD != false) {
        output.WriteRawTag(64);
        output.WriteBool(Unk3300IIHDKKNJPGD);
      }
      if (LoginRand != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(LoginRand);
      }
      if (ClientDataVersion != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ClientDataVersion);
      }
      if (AbilityHashCode != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AbilityHashCode);
      }
      if (Unk3300HGFNECIJDLN != false) {
        output.WriteRawTag(104);
        output.WriteBool(Unk3300HGFNECIJDLN);
      }
      if (PlayerDataVersion != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(PlayerDataVersion);
      }
      if (TargetUid != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TargetUid);
      }
      if (ClientSilenceMd5.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ClientSilenceMd5);
      }
      if (Unk3300IADLIIMGDMC != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Unk3300IADLIIMGDMC);
      }
      if (RegisterCps.Length != 0) {
        output.WriteRawTag(154, 6);
        output.WriteString(RegisterCps);
      }
      featureBlockInfoList_.WriteTo(ref output, _repeated_featureBlockInfoList_codec);
      if (Unk3300EJKCNNDFAAI != false) {
        output.WriteRawTag(160, 12);
        output.WriteBool(Unk3300EJKCNNDFAAI);
      }
      if (IsTransfer != false) {
        output.WriteRawTag(184, 18);
        output.WriteBool(IsTransfer);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(194, 22);
        output.WriteString(CountryCode);
      }
      if (TargetHomeOwnerUid != 0) {
        output.WriteRawTag(240, 27);
        output.WriteUInt32(TargetHomeOwnerUid);
      }
      if (TotalTickTime != 0D) {
        output.WriteRawTag(145, 33);
        output.WriteDouble(TotalTickTime);
      }
      if (resVersionConfig_ != null) {
        output.WriteRawTag(194, 50);
        output.WriteMessage(ResVersionConfig);
      }
      if (ClientSilenceVersionSuffix.Length != 0) {
        output.WriteRawTag(226, 56);
        output.WriteString(ClientSilenceVersionSuffix);
      }
      if (IsAudit != false) {
        output.WriteRawTag(144, 58);
        output.WriteBool(IsAudit);
      }
      if (IsDataNeedRelogin != false) {
        output.WriteRawTag(248, 69);
        output.WriteBool(IsDataNeedRelogin);
      }
      if (ClientMd5.Length != 0) {
        output.WriteRawTag(154, 81);
        output.WriteString(ClientMd5);
      }
      if (NextResourceUrl.Length != 0) {
        output.WriteRawTag(226, 82);
        output.WriteString(NextResourceUrl);
      }
      shortAbilityHashMap_.WriteTo(ref output, _repeated_shortAbilityHashMap_codec);
      if (Birthday.Length != 0) {
        output.WriteRawTag(218, 86);
        output.WriteString(Birthday);
      }
      if (IsScOpen != false) {
        output.WriteRawTag(144, 95);
        output.WriteBool(IsScOpen);
      }
      if (nextResVersionConfig_ != null) {
        output.WriteRawTag(194, 105);
        output.WriteMessage(NextResVersionConfig);
      }
      if (ClientVersionSuffix.Length != 0) {
        output.WriteRawTag(170, 115);
        output.WriteString(ClientVersionSuffix);
      }
      if (ScInfo.Length != 0) {
        output.WriteRawTag(130, 118);
        output.WriteBytes(ScInfo);
      }
      blockInfoMap_.WriteTo(ref output, _map_blockInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AbilityHashCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityHashCode);
      }
      if (Birthday.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Birthday);
      }
      if (ClientDataVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientDataVersion);
      }
      if (ClientMd5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientMd5);
      }
      if (ClientSilenceDataVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientSilenceDataVersion);
      }
      if (ClientSilenceMd5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientSilenceMd5);
      }
      if (ClientSilenceVersionSuffix.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientSilenceVersionSuffix);
      }
      if (ClientVersionSuffix.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientVersionSuffix);
      }
      if (CountryCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      size += featureBlockInfoList_.CalculateSize(_repeated_featureBlockInfoList_codec);
      if (GameBiz.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameBiz);
      }
      if (IsAudit != false) {
        size += 2 + 1;
      }
      if (IsDataNeedRelogin != false) {
        size += 2 + 1;
      }
      if (IsScOpen != false) {
        size += 2 + 1;
      }
      if (IsTransfer != false) {
        size += 2 + 1;
      }
      if (IsUseAbilityHash != false) {
        size += 1 + 1;
      }
      if (LoginRand != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LoginRand);
      }
      if (nextResVersionConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NextResVersionConfig);
      }
      if (NextResourceUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NextResourceUrl);
      }
      if (PlayerData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PlayerData);
      }
      if (PlayerDataVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerDataVersion);
      }
      if (RegisterCps.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RegisterCps);
      }
      if (resVersionConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResVersionConfig);
      }
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (ScInfo.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ScInfo);
      }
      size += shortAbilityHashMap_.CalculateSize(_repeated_shortAbilityHashMap_codec);
      if (TargetHomeOwnerUid != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetHomeOwnerUid);
      }
      if (TargetUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetUid);
      }
      if (TotalTickTime != 0D) {
        size += 2 + 8;
      }
      if (Unk3300EJKCNNDFAAI != false) {
        size += 2 + 1;
      }
      if (Unk3300HGFNECIJDLN != false) {
        size += 1 + 1;
      }
      if (Unk3300IADLIIMGDMC != false) {
        size += 2 + 1;
      }
      if (Unk3300IIHDKKNJPGD != false) {
        size += 1 + 1;
      }
      size += abilityHashMap_.CalculateSize(_map_abilityHashMap_codec);
      size += blockInfoMap_.CalculateSize(_map_blockInfoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerLoginRsp other) {
      if (other == null) {
        return;
      }
      if (other.AbilityHashCode != 0) {
        AbilityHashCode = other.AbilityHashCode;
      }
      if (other.Birthday.Length != 0) {
        Birthday = other.Birthday;
      }
      if (other.ClientDataVersion != 0) {
        ClientDataVersion = other.ClientDataVersion;
      }
      if (other.ClientMd5.Length != 0) {
        ClientMd5 = other.ClientMd5;
      }
      if (other.ClientSilenceDataVersion != 0) {
        ClientSilenceDataVersion = other.ClientSilenceDataVersion;
      }
      if (other.ClientSilenceMd5.Length != 0) {
        ClientSilenceMd5 = other.ClientSilenceMd5;
      }
      if (other.ClientSilenceVersionSuffix.Length != 0) {
        ClientSilenceVersionSuffix = other.ClientSilenceVersionSuffix;
      }
      if (other.ClientVersionSuffix.Length != 0) {
        ClientVersionSuffix = other.ClientVersionSuffix;
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      featureBlockInfoList_.Add(other.featureBlockInfoList_);
      if (other.GameBiz.Length != 0) {
        GameBiz = other.GameBiz;
      }
      if (other.IsAudit != false) {
        IsAudit = other.IsAudit;
      }
      if (other.IsDataNeedRelogin != false) {
        IsDataNeedRelogin = other.IsDataNeedRelogin;
      }
      if (other.IsScOpen != false) {
        IsScOpen = other.IsScOpen;
      }
      if (other.IsTransfer != false) {
        IsTransfer = other.IsTransfer;
      }
      if (other.IsUseAbilityHash != false) {
        IsUseAbilityHash = other.IsUseAbilityHash;
      }
      if (other.LoginRand != 0UL) {
        LoginRand = other.LoginRand;
      }
      if (other.nextResVersionConfig_ != null) {
        if (nextResVersionConfig_ == null) {
          NextResVersionConfig = new global::MiHomo.Protos.ResVersionConfig();
        }
        NextResVersionConfig.MergeFrom(other.NextResVersionConfig);
      }
      if (other.NextResourceUrl.Length != 0) {
        NextResourceUrl = other.NextResourceUrl;
      }
      if (other.PlayerData.Length != 0) {
        PlayerData = other.PlayerData;
      }
      if (other.PlayerDataVersion != 0) {
        PlayerDataVersion = other.PlayerDataVersion;
      }
      if (other.RegisterCps.Length != 0) {
        RegisterCps = other.RegisterCps;
      }
      if (other.resVersionConfig_ != null) {
        if (resVersionConfig_ == null) {
          ResVersionConfig = new global::MiHomo.Protos.ResVersionConfig();
        }
        ResVersionConfig.MergeFrom(other.ResVersionConfig);
      }
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      if (other.ScInfo.Length != 0) {
        ScInfo = other.ScInfo;
      }
      shortAbilityHashMap_.Add(other.shortAbilityHashMap_);
      if (other.TargetHomeOwnerUid != 0) {
        TargetHomeOwnerUid = other.TargetHomeOwnerUid;
      }
      if (other.TargetUid != 0) {
        TargetUid = other.TargetUid;
      }
      if (other.TotalTickTime != 0D) {
        TotalTickTime = other.TotalTickTime;
      }
      if (other.Unk3300EJKCNNDFAAI != false) {
        Unk3300EJKCNNDFAAI = other.Unk3300EJKCNNDFAAI;
      }
      if (other.Unk3300HGFNECIJDLN != false) {
        Unk3300HGFNECIJDLN = other.Unk3300HGFNECIJDLN;
      }
      if (other.Unk3300IADLIIMGDMC != false) {
        Unk3300IADLIIMGDMC = other.Unk3300IADLIIMGDMC;
      }
      if (other.Unk3300IIHDKKNJPGD != false) {
        Unk3300IIHDKKNJPGD = other.Unk3300IIHDKKNJPGD;
      }
      abilityHashMap_.Add(other.abilityHashMap_);
      blockInfoMap_.Add(other.blockInfoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientSilenceDataVersion = input.ReadUInt32();
            break;
          }
          case 18: {
            PlayerData = input.ReadBytes();
            break;
          }
          case 26: {
            abilityHashMap_.AddEntriesFrom(input, _map_abilityHashMap_codec);
            break;
          }
          case 34: {
            GameBiz = input.ReadString();
            break;
          }
          case 40: {
            IsUseAbilityHash = input.ReadBool();
            break;
          }
          case 56: {
            Retcode = input.ReadInt32();
            break;
          }
          case 64: {
            Unk3300IIHDKKNJPGD = input.ReadBool();
            break;
          }
          case 72: {
            LoginRand = input.ReadUInt64();
            break;
          }
          case 80: {
            ClientDataVersion = input.ReadUInt32();
            break;
          }
          case 96: {
            AbilityHashCode = input.ReadInt32();
            break;
          }
          case 104: {
            Unk3300HGFNECIJDLN = input.ReadBool();
            break;
          }
          case 112: {
            PlayerDataVersion = input.ReadUInt32();
            break;
          }
          case 120: {
            TargetUid = input.ReadUInt32();
            break;
          }
          case 130: {
            ClientSilenceMd5 = input.ReadString();
            break;
          }
          case 136: {
            Unk3300IADLIIMGDMC = input.ReadBool();
            break;
          }
          case 794: {
            RegisterCps = input.ReadString();
            break;
          }
          case 1106: {
            featureBlockInfoList_.AddEntriesFrom(input, _repeated_featureBlockInfoList_codec);
            break;
          }
          case 1568: {
            Unk3300EJKCNNDFAAI = input.ReadBool();
            break;
          }
          case 2360: {
            IsTransfer = input.ReadBool();
            break;
          }
          case 2882: {
            CountryCode = input.ReadString();
            break;
          }
          case 3568: {
            TargetHomeOwnerUid = input.ReadUInt32();
            break;
          }
          case 4241: {
            TotalTickTime = input.ReadDouble();
            break;
          }
          case 6466: {
            if (resVersionConfig_ == null) {
              ResVersionConfig = new global::MiHomo.Protos.ResVersionConfig();
            }
            input.ReadMessage(ResVersionConfig);
            break;
          }
          case 7266: {
            ClientSilenceVersionSuffix = input.ReadString();
            break;
          }
          case 7440: {
            IsAudit = input.ReadBool();
            break;
          }
          case 8952: {
            IsDataNeedRelogin = input.ReadBool();
            break;
          }
          case 10394: {
            ClientMd5 = input.ReadString();
            break;
          }
          case 10594: {
            NextResourceUrl = input.ReadString();
            break;
          }
          case 10986: {
            shortAbilityHashMap_.AddEntriesFrom(input, _repeated_shortAbilityHashMap_codec);
            break;
          }
          case 11098: {
            Birthday = input.ReadString();
            break;
          }
          case 12176: {
            IsScOpen = input.ReadBool();
            break;
          }
          case 13506: {
            if (nextResVersionConfig_ == null) {
              NextResVersionConfig = new global::MiHomo.Protos.ResVersionConfig();
            }
            input.ReadMessage(NextResVersionConfig);
            break;
          }
          case 14762: {
            ClientVersionSuffix = input.ReadString();
            break;
          }
          case 15106: {
            ScInfo = input.ReadBytes();
            break;
          }
          case 16146: {
            blockInfoMap_.AddEntriesFrom(input, _map_blockInfoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientSilenceDataVersion = input.ReadUInt32();
            break;
          }
          case 18: {
            PlayerData = input.ReadBytes();
            break;
          }
          case 26: {
            abilityHashMap_.AddEntriesFrom(ref input, _map_abilityHashMap_codec);
            break;
          }
          case 34: {
            GameBiz = input.ReadString();
            break;
          }
          case 40: {
            IsUseAbilityHash = input.ReadBool();
            break;
          }
          case 56: {
            Retcode = input.ReadInt32();
            break;
          }
          case 64: {
            Unk3300IIHDKKNJPGD = input.ReadBool();
            break;
          }
          case 72: {
            LoginRand = input.ReadUInt64();
            break;
          }
          case 80: {
            ClientDataVersion = input.ReadUInt32();
            break;
          }
          case 96: {
            AbilityHashCode = input.ReadInt32();
            break;
          }
          case 104: {
            Unk3300HGFNECIJDLN = input.ReadBool();
            break;
          }
          case 112: {
            PlayerDataVersion = input.ReadUInt32();
            break;
          }
          case 120: {
            TargetUid = input.ReadUInt32();
            break;
          }
          case 130: {
            ClientSilenceMd5 = input.ReadString();
            break;
          }
          case 136: {
            Unk3300IADLIIMGDMC = input.ReadBool();
            break;
          }
          case 794: {
            RegisterCps = input.ReadString();
            break;
          }
          case 1106: {
            featureBlockInfoList_.AddEntriesFrom(ref input, _repeated_featureBlockInfoList_codec);
            break;
          }
          case 1568: {
            Unk3300EJKCNNDFAAI = input.ReadBool();
            break;
          }
          case 2360: {
            IsTransfer = input.ReadBool();
            break;
          }
          case 2882: {
            CountryCode = input.ReadString();
            break;
          }
          case 3568: {
            TargetHomeOwnerUid = input.ReadUInt32();
            break;
          }
          case 4241: {
            TotalTickTime = input.ReadDouble();
            break;
          }
          case 6466: {
            if (resVersionConfig_ == null) {
              ResVersionConfig = new global::MiHomo.Protos.ResVersionConfig();
            }
            input.ReadMessage(ResVersionConfig);
            break;
          }
          case 7266: {
            ClientSilenceVersionSuffix = input.ReadString();
            break;
          }
          case 7440: {
            IsAudit = input.ReadBool();
            break;
          }
          case 8952: {
            IsDataNeedRelogin = input.ReadBool();
            break;
          }
          case 10394: {
            ClientMd5 = input.ReadString();
            break;
          }
          case 10594: {
            NextResourceUrl = input.ReadString();
            break;
          }
          case 10986: {
            shortAbilityHashMap_.AddEntriesFrom(ref input, _repeated_shortAbilityHashMap_codec);
            break;
          }
          case 11098: {
            Birthday = input.ReadString();
            break;
          }
          case 12176: {
            IsScOpen = input.ReadBool();
            break;
          }
          case 13506: {
            if (nextResVersionConfig_ == null) {
              NextResVersionConfig = new global::MiHomo.Protos.ResVersionConfig();
            }
            input.ReadMessage(NextResVersionConfig);
            break;
          }
          case 14762: {
            ClientVersionSuffix = input.ReadString();
            break;
          }
          case 15106: {
            ScInfo = input.ReadBytes();
            break;
          }
          case 16146: {
            blockInfoMap_.AddEntriesFrom(ref input, _map_blockInfoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
