// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BeginCameraSceneLookNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from BeginCameraSceneLookNotify.proto</summary>
  public static partial class BeginCameraSceneLookNotifyReflection {

    #region Descriptor
    /// <summary>File descriptor for BeginCameraSceneLookNotify.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeginCameraSceneLookNotifyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBCZWdpbkNhbWVyYVNjZW5lTG9va05vdGlmeS5wcm90bxINbWlIb21vLlBy",
            "b3RvcxoMVmVjdG9yLnByb3RvIssFChpCZWdpbkNhbWVyYVNjZW5lTG9va05v",
            "dGlmeRIXCg5ibGVuZF9kdXJhdGlvbhjeDSABKAISEwoKYmxlbmRfdHlwZRiC",
            "CSABKA0SFQoNY3VzdG9tX3JhZGl1cxgHIAEoAhIYCg9kaXNhYmxlX3Byb3Rl",
            "Y3QYzwggASgNEhAKCGR1cmF0aW9uGA4gASgCEhIKCWVudGl0eV9pZBivCiAB",
            "KA0SKQoKZm9sbG93X3BvcxgIIAEoCzIVLm1pSG9tby5Qcm90b3MuVmVjdG9y",
            "EhoKEWlzX2Fic19mb2xsb3dfcG9zGN8KIAEoCBIWCg5pc19hbGxvd19pbnB1",
            "dBgCIAEoCBIbChNpc19jaGFuZ2VfcGxheV9tb2RlGAkgASgIEhAKCGlzX2Zv",
            "cmNlGAwgASgIEhUKDWlzX2ZvcmNlX3dhbGsYCiABKAgSHwoXaXNfcmVjb3Zl",
            "cl9rZWVwX2N1cnJlbnQYCyABKAgSGQoRaXNfc2V0X2ZvbGxvd19wb3MYDSAB",
            "KAgSFwoPaXNfc2V0X3NjcmVlblhZGAUgASgIEkwKDWtlZXBfcm90X3R5cGUY",
            "BiABKA4yNS5taUhvbW8uUHJvdG9zLkJlZ2luQ2FtZXJhU2NlbmVMb29rTm90",
            "aWZ5LktlZXBSb3RUeXBlEicKCGxvb2tfcG9zGAQgASgLMhUubWlIb21vLlBy",
            "b3Rvcy5WZWN0b3ISFAoMb3RoZXJfcGFyYW1zGAEgAygJEhAKCHNjcmVlbl94",
            "GAMgASgCEhAKCHNjcmVlbl95GA8gASgCIk0KBUNtZElkEggKBE5PTkUQABIT",
            "Cg9FTkVUX0NIQU5ORUxfSUQQABIUChBFTkVUX0lTX1JFTElBQkxFEAESCwoG",
            "Q01EX0lEEI4CGgIQASIuCgtLZWVwUm90VHlwZRIOCgpLRUVQX1JPVF9YEAAS",
            "DwoLS0VFUF9ST1RfWFkQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.VectorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.BeginCameraSceneLookNotify), global::MiHomo.Protos.BeginCameraSceneLookNotify.Parser, new[]{ "BlendDuration", "BlendType", "CustomRadius", "DisableProtect", "Duration", "EntityId", "FollowPos", "IsAbsFollowPos", "IsAllowInput", "IsChangePlayMode", "IsForce", "IsForceWalk", "IsRecoverKeepCurrent", "IsSetFollowPos", "IsSetScreenXY", "KeepRotType", "LookPos", "OtherParams", "ScreenX", "ScreenY" }, null, new[]{ typeof(global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.CmdId), typeof(global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BeginCameraSceneLookNotify : pb::IMessage<BeginCameraSceneLookNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BeginCameraSceneLookNotify> _parser = new pb::MessageParser<BeginCameraSceneLookNotify>(() => new BeginCameraSceneLookNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BeginCameraSceneLookNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.BeginCameraSceneLookNotifyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BeginCameraSceneLookNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BeginCameraSceneLookNotify(BeginCameraSceneLookNotify other) : this() {
      blendDuration_ = other.blendDuration_;
      blendType_ = other.blendType_;
      customRadius_ = other.customRadius_;
      disableProtect_ = other.disableProtect_;
      duration_ = other.duration_;
      entityId_ = other.entityId_;
      followPos_ = other.followPos_ != null ? other.followPos_.Clone() : null;
      isAbsFollowPos_ = other.isAbsFollowPos_;
      isAllowInput_ = other.isAllowInput_;
      isChangePlayMode_ = other.isChangePlayMode_;
      isForce_ = other.isForce_;
      isForceWalk_ = other.isForceWalk_;
      isRecoverKeepCurrent_ = other.isRecoverKeepCurrent_;
      isSetFollowPos_ = other.isSetFollowPos_;
      isSetScreenXY_ = other.isSetScreenXY_;
      keepRotType_ = other.keepRotType_;
      lookPos_ = other.lookPos_ != null ? other.lookPos_.Clone() : null;
      otherParams_ = other.otherParams_.Clone();
      screenX_ = other.screenX_;
      screenY_ = other.screenY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BeginCameraSceneLookNotify Clone() {
      return new BeginCameraSceneLookNotify(this);
    }

    /// <summary>Field number for the "blend_duration" field.</summary>
    public const int BlendDurationFieldNumber = 1758;
    private float blendDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BlendDuration {
      get { return blendDuration_; }
      set {
        blendDuration_ = value;
      }
    }

    /// <summary>Field number for the "blend_type" field.</summary>
    public const int BlendTypeFieldNumber = 1154;
    private uint blendType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlendType {
      get { return blendType_; }
      set {
        blendType_ = value;
      }
    }

    /// <summary>Field number for the "custom_radius" field.</summary>
    public const int CustomRadiusFieldNumber = 7;
    private float customRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CustomRadius {
      get { return customRadius_; }
      set {
        customRadius_ = value;
      }
    }

    /// <summary>Field number for the "disable_protect" field.</summary>
    public const int DisableProtectFieldNumber = 1103;
    private uint disableProtect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DisableProtect {
      get { return disableProtect_; }
      set {
        disableProtect_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 14;
    private float duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1327;
    private uint entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "follow_pos" field.</summary>
    public const int FollowPosFieldNumber = 8;
    private global::MiHomo.Protos.Vector followPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.Vector FollowPos {
      get { return followPos_; }
      set {
        followPos_ = value;
      }
    }

    /// <summary>Field number for the "is_abs_follow_pos" field.</summary>
    public const int IsAbsFollowPosFieldNumber = 1375;
    private bool isAbsFollowPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAbsFollowPos {
      get { return isAbsFollowPos_; }
      set {
        isAbsFollowPos_ = value;
      }
    }

    /// <summary>Field number for the "is_allow_input" field.</summary>
    public const int IsAllowInputFieldNumber = 2;
    private bool isAllowInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAllowInput {
      get { return isAllowInput_; }
      set {
        isAllowInput_ = value;
      }
    }

    /// <summary>Field number for the "is_change_play_mode" field.</summary>
    public const int IsChangePlayModeFieldNumber = 9;
    private bool isChangePlayMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsChangePlayMode {
      get { return isChangePlayMode_; }
      set {
        isChangePlayMode_ = value;
      }
    }

    /// <summary>Field number for the "is_force" field.</summary>
    public const int IsForceFieldNumber = 12;
    private bool isForce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsForce {
      get { return isForce_; }
      set {
        isForce_ = value;
      }
    }

    /// <summary>Field number for the "is_force_walk" field.</summary>
    public const int IsForceWalkFieldNumber = 10;
    private bool isForceWalk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsForceWalk {
      get { return isForceWalk_; }
      set {
        isForceWalk_ = value;
      }
    }

    /// <summary>Field number for the "is_recover_keep_current" field.</summary>
    public const int IsRecoverKeepCurrentFieldNumber = 11;
    private bool isRecoverKeepCurrent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRecoverKeepCurrent {
      get { return isRecoverKeepCurrent_; }
      set {
        isRecoverKeepCurrent_ = value;
      }
    }

    /// <summary>Field number for the "is_set_follow_pos" field.</summary>
    public const int IsSetFollowPosFieldNumber = 13;
    private bool isSetFollowPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSetFollowPos {
      get { return isSetFollowPos_; }
      set {
        isSetFollowPos_ = value;
      }
    }

    /// <summary>Field number for the "is_set_screenXY" field.</summary>
    public const int IsSetScreenXYFieldNumber = 5;
    private bool isSetScreenXY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSetScreenXY {
      get { return isSetScreenXY_; }
      set {
        isSetScreenXY_ = value;
      }
    }

    /// <summary>Field number for the "keep_rot_type" field.</summary>
    public const int KeepRotTypeFieldNumber = 6;
    private global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType keepRotType_ = global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType.KeepRotX;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType KeepRotType {
      get { return keepRotType_; }
      set {
        keepRotType_ = value;
      }
    }

    /// <summary>Field number for the "look_pos" field.</summary>
    public const int LookPosFieldNumber = 4;
    private global::MiHomo.Protos.Vector lookPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.Vector LookPos {
      get { return lookPos_; }
      set {
        lookPos_ = value;
      }
    }

    /// <summary>Field number for the "other_params" field.</summary>
    public const int OtherParamsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_otherParams_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> otherParams_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> OtherParams {
      get { return otherParams_; }
    }

    /// <summary>Field number for the "screen_x" field.</summary>
    public const int ScreenXFieldNumber = 3;
    private float screenX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScreenX {
      get { return screenX_; }
      set {
        screenX_ = value;
      }
    }

    /// <summary>Field number for the "screen_y" field.</summary>
    public const int ScreenYFieldNumber = 15;
    private float screenY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScreenY {
      get { return screenY_; }
      set {
        screenY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BeginCameraSceneLookNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BeginCameraSceneLookNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BlendDuration, other.BlendDuration)) return false;
      if (BlendType != other.BlendType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CustomRadius, other.CustomRadius)) return false;
      if (DisableProtect != other.DisableProtect) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(FollowPos, other.FollowPos)) return false;
      if (IsAbsFollowPos != other.IsAbsFollowPos) return false;
      if (IsAllowInput != other.IsAllowInput) return false;
      if (IsChangePlayMode != other.IsChangePlayMode) return false;
      if (IsForce != other.IsForce) return false;
      if (IsForceWalk != other.IsForceWalk) return false;
      if (IsRecoverKeepCurrent != other.IsRecoverKeepCurrent) return false;
      if (IsSetFollowPos != other.IsSetFollowPos) return false;
      if (IsSetScreenXY != other.IsSetScreenXY) return false;
      if (KeepRotType != other.KeepRotType) return false;
      if (!object.Equals(LookPos, other.LookPos)) return false;
      if(!otherParams_.Equals(other.otherParams_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScreenX, other.ScreenX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScreenY, other.ScreenY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BlendDuration != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BlendDuration);
      if (BlendType != 0) hash ^= BlendType.GetHashCode();
      if (CustomRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CustomRadius);
      if (DisableProtect != 0) hash ^= DisableProtect.GetHashCode();
      if (Duration != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
      if (EntityId != 0) hash ^= EntityId.GetHashCode();
      if (followPos_ != null) hash ^= FollowPos.GetHashCode();
      if (IsAbsFollowPos != false) hash ^= IsAbsFollowPos.GetHashCode();
      if (IsAllowInput != false) hash ^= IsAllowInput.GetHashCode();
      if (IsChangePlayMode != false) hash ^= IsChangePlayMode.GetHashCode();
      if (IsForce != false) hash ^= IsForce.GetHashCode();
      if (IsForceWalk != false) hash ^= IsForceWalk.GetHashCode();
      if (IsRecoverKeepCurrent != false) hash ^= IsRecoverKeepCurrent.GetHashCode();
      if (IsSetFollowPos != false) hash ^= IsSetFollowPos.GetHashCode();
      if (IsSetScreenXY != false) hash ^= IsSetScreenXY.GetHashCode();
      if (KeepRotType != global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType.KeepRotX) hash ^= KeepRotType.GetHashCode();
      if (lookPos_ != null) hash ^= LookPos.GetHashCode();
      hash ^= otherParams_.GetHashCode();
      if (ScreenX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScreenX);
      if (ScreenY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScreenY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      otherParams_.WriteTo(output, _repeated_otherParams_codec);
      if (IsAllowInput != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAllowInput);
      }
      if (ScreenX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ScreenX);
      }
      if (lookPos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LookPos);
      }
      if (IsSetScreenXY != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSetScreenXY);
      }
      if (KeepRotType != global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType.KeepRotX) {
        output.WriteRawTag(48);
        output.WriteEnum((int) KeepRotType);
      }
      if (CustomRadius != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(CustomRadius);
      }
      if (followPos_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FollowPos);
      }
      if (IsChangePlayMode != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsChangePlayMode);
      }
      if (IsForceWalk != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsForceWalk);
      }
      if (IsRecoverKeepCurrent != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsRecoverKeepCurrent);
      }
      if (IsForce != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsForce);
      }
      if (IsSetFollowPos != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsSetFollowPos);
      }
      if (Duration != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(Duration);
      }
      if (ScreenY != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(ScreenY);
      }
      if (DisableProtect != 0) {
        output.WriteRawTag(248, 68);
        output.WriteUInt32(DisableProtect);
      }
      if (BlendType != 0) {
        output.WriteRawTag(144, 72);
        output.WriteUInt32(BlendType);
      }
      if (EntityId != 0) {
        output.WriteRawTag(248, 82);
        output.WriteUInt32(EntityId);
      }
      if (IsAbsFollowPos != false) {
        output.WriteRawTag(248, 85);
        output.WriteBool(IsAbsFollowPos);
      }
      if (BlendDuration != 0F) {
        output.WriteRawTag(245, 109);
        output.WriteFloat(BlendDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      otherParams_.WriteTo(ref output, _repeated_otherParams_codec);
      if (IsAllowInput != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAllowInput);
      }
      if (ScreenX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ScreenX);
      }
      if (lookPos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LookPos);
      }
      if (IsSetScreenXY != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSetScreenXY);
      }
      if (KeepRotType != global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType.KeepRotX) {
        output.WriteRawTag(48);
        output.WriteEnum((int) KeepRotType);
      }
      if (CustomRadius != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(CustomRadius);
      }
      if (followPos_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FollowPos);
      }
      if (IsChangePlayMode != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsChangePlayMode);
      }
      if (IsForceWalk != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsForceWalk);
      }
      if (IsRecoverKeepCurrent != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsRecoverKeepCurrent);
      }
      if (IsForce != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsForce);
      }
      if (IsSetFollowPos != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsSetFollowPos);
      }
      if (Duration != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(Duration);
      }
      if (ScreenY != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(ScreenY);
      }
      if (DisableProtect != 0) {
        output.WriteRawTag(248, 68);
        output.WriteUInt32(DisableProtect);
      }
      if (BlendType != 0) {
        output.WriteRawTag(144, 72);
        output.WriteUInt32(BlendType);
      }
      if (EntityId != 0) {
        output.WriteRawTag(248, 82);
        output.WriteUInt32(EntityId);
      }
      if (IsAbsFollowPos != false) {
        output.WriteRawTag(248, 85);
        output.WriteBool(IsAbsFollowPos);
      }
      if (BlendDuration != 0F) {
        output.WriteRawTag(245, 109);
        output.WriteFloat(BlendDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BlendDuration != 0F) {
        size += 2 + 4;
      }
      if (BlendType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BlendType);
      }
      if (CustomRadius != 0F) {
        size += 1 + 4;
      }
      if (DisableProtect != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DisableProtect);
      }
      if (Duration != 0F) {
        size += 1 + 4;
      }
      if (EntityId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EntityId);
      }
      if (followPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FollowPos);
      }
      if (IsAbsFollowPos != false) {
        size += 2 + 1;
      }
      if (IsAllowInput != false) {
        size += 1 + 1;
      }
      if (IsChangePlayMode != false) {
        size += 1 + 1;
      }
      if (IsForce != false) {
        size += 1 + 1;
      }
      if (IsForceWalk != false) {
        size += 1 + 1;
      }
      if (IsRecoverKeepCurrent != false) {
        size += 1 + 1;
      }
      if (IsSetFollowPos != false) {
        size += 1 + 1;
      }
      if (IsSetScreenXY != false) {
        size += 1 + 1;
      }
      if (KeepRotType != global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType.KeepRotX) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KeepRotType);
      }
      if (lookPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LookPos);
      }
      size += otherParams_.CalculateSize(_repeated_otherParams_codec);
      if (ScreenX != 0F) {
        size += 1 + 4;
      }
      if (ScreenY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BeginCameraSceneLookNotify other) {
      if (other == null) {
        return;
      }
      if (other.BlendDuration != 0F) {
        BlendDuration = other.BlendDuration;
      }
      if (other.BlendType != 0) {
        BlendType = other.BlendType;
      }
      if (other.CustomRadius != 0F) {
        CustomRadius = other.CustomRadius;
      }
      if (other.DisableProtect != 0) {
        DisableProtect = other.DisableProtect;
      }
      if (other.Duration != 0F) {
        Duration = other.Duration;
      }
      if (other.EntityId != 0) {
        EntityId = other.EntityId;
      }
      if (other.followPos_ != null) {
        if (followPos_ == null) {
          FollowPos = new global::MiHomo.Protos.Vector();
        }
        FollowPos.MergeFrom(other.FollowPos);
      }
      if (other.IsAbsFollowPos != false) {
        IsAbsFollowPos = other.IsAbsFollowPos;
      }
      if (other.IsAllowInput != false) {
        IsAllowInput = other.IsAllowInput;
      }
      if (other.IsChangePlayMode != false) {
        IsChangePlayMode = other.IsChangePlayMode;
      }
      if (other.IsForce != false) {
        IsForce = other.IsForce;
      }
      if (other.IsForceWalk != false) {
        IsForceWalk = other.IsForceWalk;
      }
      if (other.IsRecoverKeepCurrent != false) {
        IsRecoverKeepCurrent = other.IsRecoverKeepCurrent;
      }
      if (other.IsSetFollowPos != false) {
        IsSetFollowPos = other.IsSetFollowPos;
      }
      if (other.IsSetScreenXY != false) {
        IsSetScreenXY = other.IsSetScreenXY;
      }
      if (other.KeepRotType != global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType.KeepRotX) {
        KeepRotType = other.KeepRotType;
      }
      if (other.lookPos_ != null) {
        if (lookPos_ == null) {
          LookPos = new global::MiHomo.Protos.Vector();
        }
        LookPos.MergeFrom(other.LookPos);
      }
      otherParams_.Add(other.otherParams_);
      if (other.ScreenX != 0F) {
        ScreenX = other.ScreenX;
      }
      if (other.ScreenY != 0F) {
        ScreenY = other.ScreenY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            otherParams_.AddEntriesFrom(input, _repeated_otherParams_codec);
            break;
          }
          case 16: {
            IsAllowInput = input.ReadBool();
            break;
          }
          case 29: {
            ScreenX = input.ReadFloat();
            break;
          }
          case 34: {
            if (lookPos_ == null) {
              LookPos = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(LookPos);
            break;
          }
          case 40: {
            IsSetScreenXY = input.ReadBool();
            break;
          }
          case 48: {
            KeepRotType = (global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType) input.ReadEnum();
            break;
          }
          case 61: {
            CustomRadius = input.ReadFloat();
            break;
          }
          case 66: {
            if (followPos_ == null) {
              FollowPos = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(FollowPos);
            break;
          }
          case 72: {
            IsChangePlayMode = input.ReadBool();
            break;
          }
          case 80: {
            IsForceWalk = input.ReadBool();
            break;
          }
          case 88: {
            IsRecoverKeepCurrent = input.ReadBool();
            break;
          }
          case 96: {
            IsForce = input.ReadBool();
            break;
          }
          case 104: {
            IsSetFollowPos = input.ReadBool();
            break;
          }
          case 117: {
            Duration = input.ReadFloat();
            break;
          }
          case 125: {
            ScreenY = input.ReadFloat();
            break;
          }
          case 8824: {
            DisableProtect = input.ReadUInt32();
            break;
          }
          case 9232: {
            BlendType = input.ReadUInt32();
            break;
          }
          case 10616: {
            EntityId = input.ReadUInt32();
            break;
          }
          case 11000: {
            IsAbsFollowPos = input.ReadBool();
            break;
          }
          case 14069: {
            BlendDuration = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            otherParams_.AddEntriesFrom(ref input, _repeated_otherParams_codec);
            break;
          }
          case 16: {
            IsAllowInput = input.ReadBool();
            break;
          }
          case 29: {
            ScreenX = input.ReadFloat();
            break;
          }
          case 34: {
            if (lookPos_ == null) {
              LookPos = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(LookPos);
            break;
          }
          case 40: {
            IsSetScreenXY = input.ReadBool();
            break;
          }
          case 48: {
            KeepRotType = (global::MiHomo.Protos.BeginCameraSceneLookNotify.Types.KeepRotType) input.ReadEnum();
            break;
          }
          case 61: {
            CustomRadius = input.ReadFloat();
            break;
          }
          case 66: {
            if (followPos_ == null) {
              FollowPos = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(FollowPos);
            break;
          }
          case 72: {
            IsChangePlayMode = input.ReadBool();
            break;
          }
          case 80: {
            IsForceWalk = input.ReadBool();
            break;
          }
          case 88: {
            IsRecoverKeepCurrent = input.ReadBool();
            break;
          }
          case 96: {
            IsForce = input.ReadBool();
            break;
          }
          case 104: {
            IsSetFollowPos = input.ReadBool();
            break;
          }
          case 117: {
            Duration = input.ReadFloat();
            break;
          }
          case 125: {
            ScreenY = input.ReadFloat();
            break;
          }
          case 8824: {
            DisableProtect = input.ReadUInt32();
            break;
          }
          case 9232: {
            BlendType = input.ReadUInt32();
            break;
          }
          case 10616: {
            EntityId = input.ReadUInt32();
            break;
          }
          case 11000: {
            IsAbsFollowPos = input.ReadBool();
            break;
          }
          case 14069: {
            BlendDuration = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BeginCameraSceneLookNotify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CmdId {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("ENET_CHANNEL_ID", PreferredAlias = false)] EnetChannelId = 0,
        [pbr::OriginalName("ENET_IS_RELIABLE")] EnetIsReliable = 1,
        [pbr::OriginalName("CMD_ID")] CmdId = 270,
      }

      public enum KeepRotType {
        [pbr::OriginalName("KEEP_ROT_X")] KeepRotX = 0,
        [pbr::OriginalName("KEEP_ROT_XY")] KeepRotXy = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
