// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SceneAvatarInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from SceneAvatarInfo.proto</summary>
  public static partial class SceneAvatarInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for SceneAvatarInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SceneAvatarInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVTY2VuZUF2YXRhckluZm8ucHJvdG8SDW1pSG9tby5Qcm90b3MaFUF2YXRh",
            "ckV4Y2VsSW5mby5wcm90bxoUQ3VyVmVoaWNsZUluZm8ucHJvdG8aGFNjZW5l",
            "UmVsaXF1YXJ5SW5mby5wcm90bxoVU2NlbmVXZWFwb25JbmZvLnByb3RvGhBT",
            "ZXJ2ZXJCdWZmLnByb3RvIv8GCg9TY2VuZUF2YXRhckluZm8SEQoJYW5pbV9o",
            "YXNoGBYgASgNEhEKCWF2YXRhcl9pZBgCIAEoDRIRCglib3JuX3RpbWUYEiAB",
            "KA0SHgoWY29yZV9wcm91ZF9za2lsbF9sZXZlbBgLIAEoDRISCgpjb3N0dW1l",
            "X2lkGBMgASgNEjcKEGN1cl92ZWhpY2xlX2luZm8YFCABKAsyHS5taUhvbW8u",
            "UHJvdG9zLkN1clZlaGljbGVJbmZvEhUKDWVxdWlwX2lkX2xpc3QYBSADKA0S",
            "MgoKZXhjZWxfaW5mbxgVIAEoCzIeLm1pSG9tby5Qcm90b3MuQXZhdGFyRXhj",
            "ZWxJbmZvEgwKBGd1aWQYAyABKAQSIQoZaW5oZXJlbnRfcHJvdWRfc2tpbGxf",
            "bGlzdBgMIAMoDRIPCgdwZWVyX2lkGAQgASgNEjkKDnJlbGlxdWFyeV9saXN0",
            "GAkgAygLMiEubWlIb21vLlByb3Rvcy5TY2VuZVJlbGlxdWFyeUluZm8SMwoQ",
            "c2VydmVyX2J1ZmZfbGlzdBgPIAMoCzIZLm1pSG9tby5Qcm90b3MuU2VydmVy",
            "QnVmZhIWCg5za2lsbF9kZXBvdF9pZBgGIAEoDRIWCg50YWxlbnRfaWRfbGlz",
            "dBgHIAMoDRIbChN0ZWFtX3Jlc29uYW5jZV9saXN0GBAgAygNEgsKA3VpZBgB",
            "IAEoDRIuCgZ3ZWFwb24YCCABKAsyHi5taUhvbW8uUHJvdG9zLlNjZW5lV2Vh",
            "cG9uSW5mbxIbChN3ZWFyaW5nX2ZseWNsb2FrX2lkGBEgASgNEmAKG3Byb3Vk",
            "X3NraWxsX2V4dHJhX2xldmVsX21hcBgOIAMoCzI7Lm1pSG9tby5Qcm90b3Mu",
            "U2NlbmVBdmF0YXJJbmZvLlByb3VkU2tpbGxFeHRyYUxldmVsTWFwRW50cnkS",
            "SgoPc2tpbGxfbGV2ZWxfbWFwGA0gAygLMjEubWlIb21vLlByb3Rvcy5TY2Vu",
            "ZUF2YXRhckluZm8uU2tpbGxMZXZlbE1hcEVudHJ5Gj4KHFByb3VkU2tpbGxF",
            "eHRyYUxldmVsTWFwRW50cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgN",
            "OgI4ARo0ChJTa2lsbExldmVsTWFwRW50cnkSCwoDa2V5GAEgASgNEg0KBXZh",
            "bHVlGAIgASgNOgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.AvatarExcelInfoReflection.Descriptor, global::MiHomo.Protos.CurVehicleInfoReflection.Descriptor, global::MiHomo.Protos.SceneReliquaryInfoReflection.Descriptor, global::MiHomo.Protos.SceneWeaponInfoReflection.Descriptor, global::MiHomo.Protos.ServerBuffReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.SceneAvatarInfo), global::MiHomo.Protos.SceneAvatarInfo.Parser, new[]{ "AnimHash", "AvatarId", "BornTime", "CoreProudSkillLevel", "CostumeId", "CurVehicleInfo", "EquipIdList", "ExcelInfo", "Guid", "InherentProudSkillList", "PeerId", "ReliquaryList", "ServerBuffList", "SkillDepotId", "TalentIdList", "TeamResonanceList", "Uid", "Weapon", "WearingFlycloakId", "ProudSkillExtraLevelMap", "SkillLevelMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SceneAvatarInfo : pb::IMessage<SceneAvatarInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SceneAvatarInfo> _parser = new pb::MessageParser<SceneAvatarInfo>(() => new SceneAvatarInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SceneAvatarInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.SceneAvatarInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneAvatarInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneAvatarInfo(SceneAvatarInfo other) : this() {
      animHash_ = other.animHash_;
      avatarId_ = other.avatarId_;
      bornTime_ = other.bornTime_;
      coreProudSkillLevel_ = other.coreProudSkillLevel_;
      costumeId_ = other.costumeId_;
      curVehicleInfo_ = other.curVehicleInfo_ != null ? other.curVehicleInfo_.Clone() : null;
      equipIdList_ = other.equipIdList_.Clone();
      excelInfo_ = other.excelInfo_ != null ? other.excelInfo_.Clone() : null;
      guid_ = other.guid_;
      inherentProudSkillList_ = other.inherentProudSkillList_.Clone();
      peerId_ = other.peerId_;
      reliquaryList_ = other.reliquaryList_.Clone();
      serverBuffList_ = other.serverBuffList_.Clone();
      skillDepotId_ = other.skillDepotId_;
      talentIdList_ = other.talentIdList_.Clone();
      teamResonanceList_ = other.teamResonanceList_.Clone();
      uid_ = other.uid_;
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      wearingFlycloakId_ = other.wearingFlycloakId_;
      proudSkillExtraLevelMap_ = other.proudSkillExtraLevelMap_.Clone();
      skillLevelMap_ = other.skillLevelMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SceneAvatarInfo Clone() {
      return new SceneAvatarInfo(this);
    }

    /// <summary>Field number for the "anim_hash" field.</summary>
    public const int AnimHashFieldNumber = 22;
    private uint animHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AnimHash {
      get { return animHash_; }
      set {
        animHash_ = value;
      }
    }

    /// <summary>Field number for the "avatar_id" field.</summary>
    public const int AvatarIdFieldNumber = 2;
    private uint avatarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    /// <summary>Field number for the "born_time" field.</summary>
    public const int BornTimeFieldNumber = 18;
    private uint bornTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BornTime {
      get { return bornTime_; }
      set {
        bornTime_ = value;
      }
    }

    /// <summary>Field number for the "core_proud_skill_level" field.</summary>
    public const int CoreProudSkillLevelFieldNumber = 11;
    private uint coreProudSkillLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CoreProudSkillLevel {
      get { return coreProudSkillLevel_; }
      set {
        coreProudSkillLevel_ = value;
      }
    }

    /// <summary>Field number for the "costume_id" field.</summary>
    public const int CostumeIdFieldNumber = 19;
    private uint costumeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CostumeId {
      get { return costumeId_; }
      set {
        costumeId_ = value;
      }
    }

    /// <summary>Field number for the "cur_vehicle_info" field.</summary>
    public const int CurVehicleInfoFieldNumber = 20;
    private global::MiHomo.Protos.CurVehicleInfo curVehicleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.CurVehicleInfo CurVehicleInfo {
      get { return curVehicleInfo_; }
      set {
        curVehicleInfo_ = value;
      }
    }

    /// <summary>Field number for the "equip_id_list" field.</summary>
    public const int EquipIdListFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_equipIdList_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> equipIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> EquipIdList {
      get { return equipIdList_; }
    }

    /// <summary>Field number for the "excel_info" field.</summary>
    public const int ExcelInfoFieldNumber = 21;
    private global::MiHomo.Protos.AvatarExcelInfo excelInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.AvatarExcelInfo ExcelInfo {
      get { return excelInfo_; }
      set {
        excelInfo_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 3;
    private ulong guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "inherent_proud_skill_list" field.</summary>
    public const int InherentProudSkillListFieldNumber = 12;
    private static readonly pb::FieldCodec<uint> _repeated_inherentProudSkillList_codec
        = pb::FieldCodec.ForUInt32(98);
    private readonly pbc::RepeatedField<uint> inherentProudSkillList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> InherentProudSkillList {
      get { return inherentProudSkillList_; }
    }

    /// <summary>Field number for the "peer_id" field.</summary>
    public const int PeerIdFieldNumber = 4;
    private uint peerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PeerId {
      get { return peerId_; }
      set {
        peerId_ = value;
      }
    }

    /// <summary>Field number for the "reliquary_list" field.</summary>
    public const int ReliquaryListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.SceneReliquaryInfo> _repeated_reliquaryList_codec
        = pb::FieldCodec.ForMessage(74, global::MiHomo.Protos.SceneReliquaryInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.SceneReliquaryInfo> reliquaryList_ = new pbc::RepeatedField<global::MiHomo.Protos.SceneReliquaryInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.SceneReliquaryInfo> ReliquaryList {
      get { return reliquaryList_; }
    }

    /// <summary>Field number for the "server_buff_list" field.</summary>
    public const int ServerBuffListFieldNumber = 15;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.ServerBuff> _repeated_serverBuffList_codec
        = pb::FieldCodec.ForMessage(122, global::MiHomo.Protos.ServerBuff.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.ServerBuff> serverBuffList_ = new pbc::RepeatedField<global::MiHomo.Protos.ServerBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.ServerBuff> ServerBuffList {
      get { return serverBuffList_; }
    }

    /// <summary>Field number for the "skill_depot_id" field.</summary>
    public const int SkillDepotIdFieldNumber = 6;
    private uint skillDepotId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SkillDepotId {
      get { return skillDepotId_; }
      set {
        skillDepotId_ = value;
      }
    }

    /// <summary>Field number for the "talent_id_list" field.</summary>
    public const int TalentIdListFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_talentIdList_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> talentIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TalentIdList {
      get { return talentIdList_; }
    }

    /// <summary>Field number for the "team_resonance_list" field.</summary>
    public const int TeamResonanceListFieldNumber = 16;
    private static readonly pb::FieldCodec<uint> _repeated_teamResonanceList_codec
        = pb::FieldCodec.ForUInt32(130);
    private readonly pbc::RepeatedField<uint> teamResonanceList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TeamResonanceList {
      get { return teamResonanceList_; }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 8;
    private global::MiHomo.Protos.SceneWeaponInfo weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.SceneWeaponInfo Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    /// <summary>Field number for the "wearing_flycloak_id" field.</summary>
    public const int WearingFlycloakIdFieldNumber = 17;
    private uint wearingFlycloakId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WearingFlycloakId {
      get { return wearingFlycloakId_; }
      set {
        wearingFlycloakId_ = value;
      }
    }

    /// <summary>Field number for the "proud_skill_extra_level_map" field.</summary>
    public const int ProudSkillExtraLevelMapFieldNumber = 14;
    private static readonly pbc::MapField<uint, uint>.Codec _map_proudSkillExtraLevelMap_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 114);
    private readonly pbc::MapField<uint, uint> proudSkillExtraLevelMap_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> ProudSkillExtraLevelMap {
      get { return proudSkillExtraLevelMap_; }
    }

    /// <summary>Field number for the "skill_level_map" field.</summary>
    public const int SkillLevelMapFieldNumber = 13;
    private static readonly pbc::MapField<uint, uint>.Codec _map_skillLevelMap_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 106);
    private readonly pbc::MapField<uint, uint> skillLevelMap_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> SkillLevelMap {
      get { return skillLevelMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SceneAvatarInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SceneAvatarInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnimHash != other.AnimHash) return false;
      if (AvatarId != other.AvatarId) return false;
      if (BornTime != other.BornTime) return false;
      if (CoreProudSkillLevel != other.CoreProudSkillLevel) return false;
      if (CostumeId != other.CostumeId) return false;
      if (!object.Equals(CurVehicleInfo, other.CurVehicleInfo)) return false;
      if(!equipIdList_.Equals(other.equipIdList_)) return false;
      if (!object.Equals(ExcelInfo, other.ExcelInfo)) return false;
      if (Guid != other.Guid) return false;
      if(!inherentProudSkillList_.Equals(other.inherentProudSkillList_)) return false;
      if (PeerId != other.PeerId) return false;
      if(!reliquaryList_.Equals(other.reliquaryList_)) return false;
      if(!serverBuffList_.Equals(other.serverBuffList_)) return false;
      if (SkillDepotId != other.SkillDepotId) return false;
      if(!talentIdList_.Equals(other.talentIdList_)) return false;
      if(!teamResonanceList_.Equals(other.teamResonanceList_)) return false;
      if (Uid != other.Uid) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      if (WearingFlycloakId != other.WearingFlycloakId) return false;
      if (!ProudSkillExtraLevelMap.Equals(other.ProudSkillExtraLevelMap)) return false;
      if (!SkillLevelMap.Equals(other.SkillLevelMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AnimHash != 0) hash ^= AnimHash.GetHashCode();
      if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
      if (BornTime != 0) hash ^= BornTime.GetHashCode();
      if (CoreProudSkillLevel != 0) hash ^= CoreProudSkillLevel.GetHashCode();
      if (CostumeId != 0) hash ^= CostumeId.GetHashCode();
      if (curVehicleInfo_ != null) hash ^= CurVehicleInfo.GetHashCode();
      hash ^= equipIdList_.GetHashCode();
      if (excelInfo_ != null) hash ^= ExcelInfo.GetHashCode();
      if (Guid != 0UL) hash ^= Guid.GetHashCode();
      hash ^= inherentProudSkillList_.GetHashCode();
      if (PeerId != 0) hash ^= PeerId.GetHashCode();
      hash ^= reliquaryList_.GetHashCode();
      hash ^= serverBuffList_.GetHashCode();
      if (SkillDepotId != 0) hash ^= SkillDepotId.GetHashCode();
      hash ^= talentIdList_.GetHashCode();
      hash ^= teamResonanceList_.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      if (WearingFlycloakId != 0) hash ^= WearingFlycloakId.GetHashCode();
      hash ^= ProudSkillExtraLevelMap.GetHashCode();
      hash ^= SkillLevelMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Uid);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AvatarId);
      }
      if (Guid != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Guid);
      }
      if (PeerId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PeerId);
      }
      equipIdList_.WriteTo(output, _repeated_equipIdList_codec);
      if (SkillDepotId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SkillDepotId);
      }
      talentIdList_.WriteTo(output, _repeated_talentIdList_codec);
      if (weapon_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Weapon);
      }
      reliquaryList_.WriteTo(output, _repeated_reliquaryList_codec);
      if (CoreProudSkillLevel != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CoreProudSkillLevel);
      }
      inherentProudSkillList_.WriteTo(output, _repeated_inherentProudSkillList_codec);
      skillLevelMap_.WriteTo(output, _map_skillLevelMap_codec);
      proudSkillExtraLevelMap_.WriteTo(output, _map_proudSkillExtraLevelMap_codec);
      serverBuffList_.WriteTo(output, _repeated_serverBuffList_codec);
      teamResonanceList_.WriteTo(output, _repeated_teamResonanceList_codec);
      if (WearingFlycloakId != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(WearingFlycloakId);
      }
      if (BornTime != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(BornTime);
      }
      if (CostumeId != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CostumeId);
      }
      if (curVehicleInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CurVehicleInfo);
      }
      if (excelInfo_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ExcelInfo);
      }
      if (AnimHash != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(AnimHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Uid);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AvatarId);
      }
      if (Guid != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Guid);
      }
      if (PeerId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PeerId);
      }
      equipIdList_.WriteTo(ref output, _repeated_equipIdList_codec);
      if (SkillDepotId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SkillDepotId);
      }
      talentIdList_.WriteTo(ref output, _repeated_talentIdList_codec);
      if (weapon_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Weapon);
      }
      reliquaryList_.WriteTo(ref output, _repeated_reliquaryList_codec);
      if (CoreProudSkillLevel != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CoreProudSkillLevel);
      }
      inherentProudSkillList_.WriteTo(ref output, _repeated_inherentProudSkillList_codec);
      skillLevelMap_.WriteTo(ref output, _map_skillLevelMap_codec);
      proudSkillExtraLevelMap_.WriteTo(ref output, _map_proudSkillExtraLevelMap_codec);
      serverBuffList_.WriteTo(ref output, _repeated_serverBuffList_codec);
      teamResonanceList_.WriteTo(ref output, _repeated_teamResonanceList_codec);
      if (WearingFlycloakId != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(WearingFlycloakId);
      }
      if (BornTime != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(BornTime);
      }
      if (CostumeId != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CostumeId);
      }
      if (curVehicleInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CurVehicleInfo);
      }
      if (excelInfo_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ExcelInfo);
      }
      if (AnimHash != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(AnimHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AnimHash != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AnimHash);
      }
      if (AvatarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarId);
      }
      if (BornTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BornTime);
      }
      if (CoreProudSkillLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CoreProudSkillLevel);
      }
      if (CostumeId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CostumeId);
      }
      if (curVehicleInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurVehicleInfo);
      }
      size += equipIdList_.CalculateSize(_repeated_equipIdList_codec);
      if (excelInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExcelInfo);
      }
      if (Guid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guid);
      }
      size += inherentProudSkillList_.CalculateSize(_repeated_inherentProudSkillList_codec);
      if (PeerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeerId);
      }
      size += reliquaryList_.CalculateSize(_repeated_reliquaryList_codec);
      size += serverBuffList_.CalculateSize(_repeated_serverBuffList_codec);
      if (SkillDepotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SkillDepotId);
      }
      size += talentIdList_.CalculateSize(_repeated_talentIdList_codec);
      size += teamResonanceList_.CalculateSize(_repeated_teamResonanceList_codec);
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      if (WearingFlycloakId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WearingFlycloakId);
      }
      size += proudSkillExtraLevelMap_.CalculateSize(_map_proudSkillExtraLevelMap_codec);
      size += skillLevelMap_.CalculateSize(_map_skillLevelMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SceneAvatarInfo other) {
      if (other == null) {
        return;
      }
      if (other.AnimHash != 0) {
        AnimHash = other.AnimHash;
      }
      if (other.AvatarId != 0) {
        AvatarId = other.AvatarId;
      }
      if (other.BornTime != 0) {
        BornTime = other.BornTime;
      }
      if (other.CoreProudSkillLevel != 0) {
        CoreProudSkillLevel = other.CoreProudSkillLevel;
      }
      if (other.CostumeId != 0) {
        CostumeId = other.CostumeId;
      }
      if (other.curVehicleInfo_ != null) {
        if (curVehicleInfo_ == null) {
          CurVehicleInfo = new global::MiHomo.Protos.CurVehicleInfo();
        }
        CurVehicleInfo.MergeFrom(other.CurVehicleInfo);
      }
      equipIdList_.Add(other.equipIdList_);
      if (other.excelInfo_ != null) {
        if (excelInfo_ == null) {
          ExcelInfo = new global::MiHomo.Protos.AvatarExcelInfo();
        }
        ExcelInfo.MergeFrom(other.ExcelInfo);
      }
      if (other.Guid != 0UL) {
        Guid = other.Guid;
      }
      inherentProudSkillList_.Add(other.inherentProudSkillList_);
      if (other.PeerId != 0) {
        PeerId = other.PeerId;
      }
      reliquaryList_.Add(other.reliquaryList_);
      serverBuffList_.Add(other.serverBuffList_);
      if (other.SkillDepotId != 0) {
        SkillDepotId = other.SkillDepotId;
      }
      talentIdList_.Add(other.talentIdList_);
      teamResonanceList_.Add(other.teamResonanceList_);
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::MiHomo.Protos.SceneWeaponInfo();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      if (other.WearingFlycloakId != 0) {
        WearingFlycloakId = other.WearingFlycloakId;
      }
      proudSkillExtraLevelMap_.Add(other.proudSkillExtraLevelMap_);
      skillLevelMap_.Add(other.skillLevelMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadUInt32();
            break;
          }
          case 16: {
            AvatarId = input.ReadUInt32();
            break;
          }
          case 24: {
            Guid = input.ReadUInt64();
            break;
          }
          case 32: {
            PeerId = input.ReadUInt32();
            break;
          }
          case 42:
          case 40: {
            equipIdList_.AddEntriesFrom(input, _repeated_equipIdList_codec);
            break;
          }
          case 48: {
            SkillDepotId = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            talentIdList_.AddEntriesFrom(input, _repeated_talentIdList_codec);
            break;
          }
          case 66: {
            if (weapon_ == null) {
              Weapon = new global::MiHomo.Protos.SceneWeaponInfo();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 74: {
            reliquaryList_.AddEntriesFrom(input, _repeated_reliquaryList_codec);
            break;
          }
          case 88: {
            CoreProudSkillLevel = input.ReadUInt32();
            break;
          }
          case 98:
          case 96: {
            inherentProudSkillList_.AddEntriesFrom(input, _repeated_inherentProudSkillList_codec);
            break;
          }
          case 106: {
            skillLevelMap_.AddEntriesFrom(input, _map_skillLevelMap_codec);
            break;
          }
          case 114: {
            proudSkillExtraLevelMap_.AddEntriesFrom(input, _map_proudSkillExtraLevelMap_codec);
            break;
          }
          case 122: {
            serverBuffList_.AddEntriesFrom(input, _repeated_serverBuffList_codec);
            break;
          }
          case 130:
          case 128: {
            teamResonanceList_.AddEntriesFrom(input, _repeated_teamResonanceList_codec);
            break;
          }
          case 136: {
            WearingFlycloakId = input.ReadUInt32();
            break;
          }
          case 144: {
            BornTime = input.ReadUInt32();
            break;
          }
          case 152: {
            CostumeId = input.ReadUInt32();
            break;
          }
          case 162: {
            if (curVehicleInfo_ == null) {
              CurVehicleInfo = new global::MiHomo.Protos.CurVehicleInfo();
            }
            input.ReadMessage(CurVehicleInfo);
            break;
          }
          case 170: {
            if (excelInfo_ == null) {
              ExcelInfo = new global::MiHomo.Protos.AvatarExcelInfo();
            }
            input.ReadMessage(ExcelInfo);
            break;
          }
          case 176: {
            AnimHash = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadUInt32();
            break;
          }
          case 16: {
            AvatarId = input.ReadUInt32();
            break;
          }
          case 24: {
            Guid = input.ReadUInt64();
            break;
          }
          case 32: {
            PeerId = input.ReadUInt32();
            break;
          }
          case 42:
          case 40: {
            equipIdList_.AddEntriesFrom(ref input, _repeated_equipIdList_codec);
            break;
          }
          case 48: {
            SkillDepotId = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            talentIdList_.AddEntriesFrom(ref input, _repeated_talentIdList_codec);
            break;
          }
          case 66: {
            if (weapon_ == null) {
              Weapon = new global::MiHomo.Protos.SceneWeaponInfo();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 74: {
            reliquaryList_.AddEntriesFrom(ref input, _repeated_reliquaryList_codec);
            break;
          }
          case 88: {
            CoreProudSkillLevel = input.ReadUInt32();
            break;
          }
          case 98:
          case 96: {
            inherentProudSkillList_.AddEntriesFrom(ref input, _repeated_inherentProudSkillList_codec);
            break;
          }
          case 106: {
            skillLevelMap_.AddEntriesFrom(ref input, _map_skillLevelMap_codec);
            break;
          }
          case 114: {
            proudSkillExtraLevelMap_.AddEntriesFrom(ref input, _map_proudSkillExtraLevelMap_codec);
            break;
          }
          case 122: {
            serverBuffList_.AddEntriesFrom(ref input, _repeated_serverBuffList_codec);
            break;
          }
          case 130:
          case 128: {
            teamResonanceList_.AddEntriesFrom(ref input, _repeated_teamResonanceList_codec);
            break;
          }
          case 136: {
            WearingFlycloakId = input.ReadUInt32();
            break;
          }
          case 144: {
            BornTime = input.ReadUInt32();
            break;
          }
          case 152: {
            CostumeId = input.ReadUInt32();
            break;
          }
          case 162: {
            if (curVehicleInfo_ == null) {
              CurVehicleInfo = new global::MiHomo.Protos.CurVehicleInfo();
            }
            input.ReadMessage(CurVehicleInfo);
            break;
          }
          case 170: {
            if (excelInfo_ == null) {
              ExcelInfo = new global::MiHomo.Protos.AvatarExcelInfo();
            }
            input.ReadMessage(ExcelInfo);
            break;
          }
          case 176: {
            AnimHash = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
