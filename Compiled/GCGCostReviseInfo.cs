// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCGCostReviseInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from GCGCostReviseInfo.proto</summary>
  public static partial class GCGCostReviseInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for GCGCostReviseInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCGCostReviseInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdHQ0dDb3N0UmV2aXNlSW5mby5wcm90bxINbWlIb21vLlByb3RvcxoXR0NH",
            "QXR0YWNrQ29zdEluZm8ucHJvdG8aGUdDR1BsYXlDYXJkQ29zdEluZm8ucHJv",
            "dG8aHkdDR1NlbGVjdE9uU3RhZ2VDb3N0SW5mby5wcm90byKWAgoRR0NHQ29z",
            "dFJldmlzZUluZm8SOgoQYXR0YWNrX2Nvc3RfbGlzdBgMIAMoCzIgLm1pSG9t",
            "by5Qcm90b3MuR0NHQXR0YWNrQ29zdEluZm8SIQoZY2FuX3VzZV9oYW5kX2Nh",
            "cmRfaWRfbGlzdBgPIAMoDRIVCg1pc19jYW5fYXR0YWNrGA4gASgIEj8KE3Bs",
            "YXlfY2FyZF9jb3N0X2xpc3QYBSADKAsyIi5taUhvbW8uUHJvdG9zLkdDR1Bs",
            "YXlDYXJkQ29zdEluZm8SSgoZc2VsZWN0X29uX3N0YWdlX2Nvc3RfbGlzdBgN",
            "IAMoCzInLm1pSG9tby5Qcm90b3MuR0NHU2VsZWN0T25TdGFnZUNvc3RJbmZv",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.GCGAttackCostInfoReflection.Descriptor, global::MiHomo.Protos.GCGPlayCardCostInfoReflection.Descriptor, global::MiHomo.Protos.GCGSelectOnStageCostInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.GCGCostReviseInfo), global::MiHomo.Protos.GCGCostReviseInfo.Parser, new[]{ "AttackCostList", "CanUseHandCardIdList", "IsCanAttack", "PlayCardCostList", "SelectOnStageCostList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GCGCostReviseInfo : pb::IMessage<GCGCostReviseInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GCGCostReviseInfo> _parser = new pb::MessageParser<GCGCostReviseInfo>(() => new GCGCostReviseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GCGCostReviseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.GCGCostReviseInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCostReviseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCostReviseInfo(GCGCostReviseInfo other) : this() {
      attackCostList_ = other.attackCostList_.Clone();
      canUseHandCardIdList_ = other.canUseHandCardIdList_.Clone();
      isCanAttack_ = other.isCanAttack_;
      playCardCostList_ = other.playCardCostList_.Clone();
      selectOnStageCostList_ = other.selectOnStageCostList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCostReviseInfo Clone() {
      return new GCGCostReviseInfo(this);
    }

    /// <summary>Field number for the "attack_cost_list" field.</summary>
    public const int AttackCostListFieldNumber = 12;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.GCGAttackCostInfo> _repeated_attackCostList_codec
        = pb::FieldCodec.ForMessage(98, global::MiHomo.Protos.GCGAttackCostInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.GCGAttackCostInfo> attackCostList_ = new pbc::RepeatedField<global::MiHomo.Protos.GCGAttackCostInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.GCGAttackCostInfo> AttackCostList {
      get { return attackCostList_; }
    }

    /// <summary>Field number for the "can_use_hand_card_id_list" field.</summary>
    public const int CanUseHandCardIdListFieldNumber = 15;
    private static readonly pb::FieldCodec<uint> _repeated_canUseHandCardIdList_codec
        = pb::FieldCodec.ForUInt32(122);
    private readonly pbc::RepeatedField<uint> canUseHandCardIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> CanUseHandCardIdList {
      get { return canUseHandCardIdList_; }
    }

    /// <summary>Field number for the "is_can_attack" field.</summary>
    public const int IsCanAttackFieldNumber = 14;
    private bool isCanAttack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCanAttack {
      get { return isCanAttack_; }
      set {
        isCanAttack_ = value;
      }
    }

    /// <summary>Field number for the "play_card_cost_list" field.</summary>
    public const int PlayCardCostListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.GCGPlayCardCostInfo> _repeated_playCardCostList_codec
        = pb::FieldCodec.ForMessage(42, global::MiHomo.Protos.GCGPlayCardCostInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.GCGPlayCardCostInfo> playCardCostList_ = new pbc::RepeatedField<global::MiHomo.Protos.GCGPlayCardCostInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.GCGPlayCardCostInfo> PlayCardCostList {
      get { return playCardCostList_; }
    }

    /// <summary>Field number for the "select_on_stage_cost_list" field.</summary>
    public const int SelectOnStageCostListFieldNumber = 13;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.GCGSelectOnStageCostInfo> _repeated_selectOnStageCostList_codec
        = pb::FieldCodec.ForMessage(106, global::MiHomo.Protos.GCGSelectOnStageCostInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.GCGSelectOnStageCostInfo> selectOnStageCostList_ = new pbc::RepeatedField<global::MiHomo.Protos.GCGSelectOnStageCostInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.GCGSelectOnStageCostInfo> SelectOnStageCostList {
      get { return selectOnStageCostList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GCGCostReviseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GCGCostReviseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attackCostList_.Equals(other.attackCostList_)) return false;
      if(!canUseHandCardIdList_.Equals(other.canUseHandCardIdList_)) return false;
      if (IsCanAttack != other.IsCanAttack) return false;
      if(!playCardCostList_.Equals(other.playCardCostList_)) return false;
      if(!selectOnStageCostList_.Equals(other.selectOnStageCostList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attackCostList_.GetHashCode();
      hash ^= canUseHandCardIdList_.GetHashCode();
      if (IsCanAttack != false) hash ^= IsCanAttack.GetHashCode();
      hash ^= playCardCostList_.GetHashCode();
      hash ^= selectOnStageCostList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playCardCostList_.WriteTo(output, _repeated_playCardCostList_codec);
      attackCostList_.WriteTo(output, _repeated_attackCostList_codec);
      selectOnStageCostList_.WriteTo(output, _repeated_selectOnStageCostList_codec);
      if (IsCanAttack != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsCanAttack);
      }
      canUseHandCardIdList_.WriteTo(output, _repeated_canUseHandCardIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playCardCostList_.WriteTo(ref output, _repeated_playCardCostList_codec);
      attackCostList_.WriteTo(ref output, _repeated_attackCostList_codec);
      selectOnStageCostList_.WriteTo(ref output, _repeated_selectOnStageCostList_codec);
      if (IsCanAttack != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsCanAttack);
      }
      canUseHandCardIdList_.WriteTo(ref output, _repeated_canUseHandCardIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += attackCostList_.CalculateSize(_repeated_attackCostList_codec);
      size += canUseHandCardIdList_.CalculateSize(_repeated_canUseHandCardIdList_codec);
      if (IsCanAttack != false) {
        size += 1 + 1;
      }
      size += playCardCostList_.CalculateSize(_repeated_playCardCostList_codec);
      size += selectOnStageCostList_.CalculateSize(_repeated_selectOnStageCostList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GCGCostReviseInfo other) {
      if (other == null) {
        return;
      }
      attackCostList_.Add(other.attackCostList_);
      canUseHandCardIdList_.Add(other.canUseHandCardIdList_);
      if (other.IsCanAttack != false) {
        IsCanAttack = other.IsCanAttack;
      }
      playCardCostList_.Add(other.playCardCostList_);
      selectOnStageCostList_.Add(other.selectOnStageCostList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            playCardCostList_.AddEntriesFrom(input, _repeated_playCardCostList_codec);
            break;
          }
          case 98: {
            attackCostList_.AddEntriesFrom(input, _repeated_attackCostList_codec);
            break;
          }
          case 106: {
            selectOnStageCostList_.AddEntriesFrom(input, _repeated_selectOnStageCostList_codec);
            break;
          }
          case 112: {
            IsCanAttack = input.ReadBool();
            break;
          }
          case 122:
          case 120: {
            canUseHandCardIdList_.AddEntriesFrom(input, _repeated_canUseHandCardIdList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 42: {
            playCardCostList_.AddEntriesFrom(ref input, _repeated_playCardCostList_codec);
            break;
          }
          case 98: {
            attackCostList_.AddEntriesFrom(ref input, _repeated_attackCostList_codec);
            break;
          }
          case 106: {
            selectOnStageCostList_.AddEntriesFrom(ref input, _repeated_selectOnStageCostList_codec);
            break;
          }
          case 112: {
            IsCanAttack = input.ReadBool();
            break;
          }
          case 122:
          case 120: {
            canUseHandCardIdList_.AddEntriesFrom(ref input, _repeated_canUseHandCardIdList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
