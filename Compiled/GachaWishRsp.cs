// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GachaWishRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from GachaWishRsp.proto</summary>
  public static partial class GachaWishRspReflection {

    #region Descriptor
    /// <summary>File descriptor for GachaWishRsp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GachaWishRspReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJHYWNoYVdpc2hSc3AucHJvdG8SDW1pSG9tby5Qcm90b3MilgEKDEdhY2hh",
            "V2lzaFJzcBIZChFnYWNoYV9zY2hlZHVsZV9pZBgLIAEoDRISCgpnYWNoYV90",
            "eXBlGAggASgNEg8KB3JldGNvZGUYDSABKAUSFAoMd2lzaF9pdGVtX2lkGA8g",
            "ASgNEhkKEXdpc2hfbWF4X3Byb2dyZXNzGAogASgNEhUKDXdpc2hfcHJvZ3Jl",
            "c3MYBiABKA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.GachaWishRsp), global::MiHomo.Protos.GachaWishRsp.Parser, new[]{ "GachaScheduleId", "GachaType", "Retcode", "WishItemId", "WishMaxProgress", "WishProgress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GachaWishRsp : pb::IMessage<GachaWishRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GachaWishRsp> _parser = new pb::MessageParser<GachaWishRsp>(() => new GachaWishRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GachaWishRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.GachaWishRspReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GachaWishRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GachaWishRsp(GachaWishRsp other) : this() {
      gachaScheduleId_ = other.gachaScheduleId_;
      gachaType_ = other.gachaType_;
      retcode_ = other.retcode_;
      wishItemId_ = other.wishItemId_;
      wishMaxProgress_ = other.wishMaxProgress_;
      wishProgress_ = other.wishProgress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GachaWishRsp Clone() {
      return new GachaWishRsp(this);
    }

    /// <summary>Field number for the "gacha_schedule_id" field.</summary>
    public const int GachaScheduleIdFieldNumber = 11;
    private uint gachaScheduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GachaScheduleId {
      get { return gachaScheduleId_; }
      set {
        gachaScheduleId_ = value;
      }
    }

    /// <summary>Field number for the "gacha_type" field.</summary>
    public const int GachaTypeFieldNumber = 8;
    private uint gachaType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GachaType {
      get { return gachaType_; }
      set {
        gachaType_ = value;
      }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 13;
    private int retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    /// <summary>Field number for the "wish_item_id" field.</summary>
    public const int WishItemIdFieldNumber = 15;
    private uint wishItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WishItemId {
      get { return wishItemId_; }
      set {
        wishItemId_ = value;
      }
    }

    /// <summary>Field number for the "wish_max_progress" field.</summary>
    public const int WishMaxProgressFieldNumber = 10;
    private uint wishMaxProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WishMaxProgress {
      get { return wishMaxProgress_; }
      set {
        wishMaxProgress_ = value;
      }
    }

    /// <summary>Field number for the "wish_progress" field.</summary>
    public const int WishProgressFieldNumber = 6;
    private uint wishProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WishProgress {
      get { return wishProgress_; }
      set {
        wishProgress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GachaWishRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GachaWishRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GachaScheduleId != other.GachaScheduleId) return false;
      if (GachaType != other.GachaType) return false;
      if (Retcode != other.Retcode) return false;
      if (WishItemId != other.WishItemId) return false;
      if (WishMaxProgress != other.WishMaxProgress) return false;
      if (WishProgress != other.WishProgress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GachaScheduleId != 0) hash ^= GachaScheduleId.GetHashCode();
      if (GachaType != 0) hash ^= GachaType.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (WishItemId != 0) hash ^= WishItemId.GetHashCode();
      if (WishMaxProgress != 0) hash ^= WishMaxProgress.GetHashCode();
      if (WishProgress != 0) hash ^= WishProgress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WishProgress != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(WishProgress);
      }
      if (GachaType != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(GachaType);
      }
      if (WishMaxProgress != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(WishMaxProgress);
      }
      if (GachaScheduleId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(GachaScheduleId);
      }
      if (Retcode != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Retcode);
      }
      if (WishItemId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(WishItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WishProgress != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(WishProgress);
      }
      if (GachaType != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(GachaType);
      }
      if (WishMaxProgress != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(WishMaxProgress);
      }
      if (GachaScheduleId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(GachaScheduleId);
      }
      if (Retcode != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Retcode);
      }
      if (WishItemId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(WishItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GachaScheduleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GachaScheduleId);
      }
      if (GachaType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GachaType);
      }
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (WishItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WishItemId);
      }
      if (WishMaxProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WishMaxProgress);
      }
      if (WishProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WishProgress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GachaWishRsp other) {
      if (other == null) {
        return;
      }
      if (other.GachaScheduleId != 0) {
        GachaScheduleId = other.GachaScheduleId;
      }
      if (other.GachaType != 0) {
        GachaType = other.GachaType;
      }
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      if (other.WishItemId != 0) {
        WishItemId = other.WishItemId;
      }
      if (other.WishMaxProgress != 0) {
        WishMaxProgress = other.WishMaxProgress;
      }
      if (other.WishProgress != 0) {
        WishProgress = other.WishProgress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 48: {
            WishProgress = input.ReadUInt32();
            break;
          }
          case 64: {
            GachaType = input.ReadUInt32();
            break;
          }
          case 80: {
            WishMaxProgress = input.ReadUInt32();
            break;
          }
          case 88: {
            GachaScheduleId = input.ReadUInt32();
            break;
          }
          case 104: {
            Retcode = input.ReadInt32();
            break;
          }
          case 120: {
            WishItemId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 48: {
            WishProgress = input.ReadUInt32();
            break;
          }
          case 64: {
            GachaType = input.ReadUInt32();
            break;
          }
          case 80: {
            WishMaxProgress = input.ReadUInt32();
            break;
          }
          case 88: {
            GachaScheduleId = input.ReadUInt32();
            break;
          }
          case 104: {
            Retcode = input.ReadInt32();
            break;
          }
          case 120: {
            WishItemId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
