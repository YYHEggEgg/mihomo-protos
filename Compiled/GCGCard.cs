// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCGCard.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from GCGCard.proto</summary>
  public static partial class GCGCardReflection {

    #region Descriptor
    /// <summary>File descriptor for GCGCard.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCGCardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1HQ0dDYXJkLnByb3RvEg1taUhvbW8uUHJvdG9zGhhHQ0dTa2lsbExpbWl0",
            "c0luZm8ucHJvdG8aDkdDR1Rva2VuLnByb3RvIvIBCgdHQ0dDYXJkEhUKDWNv",
            "bnRyb2xsZXJfaWQYBSABKA0SEQoJZmFjZV90eXBlGAIgASgNEgwKBGd1aWQY",
            "CyABKA0SCgoCaWQYBiABKA0SDwoHaXNfc2hvdxgPIAEoCBIVCg1za2lsbF9p",
            "ZF9saXN0GA0gAygNEjwKEXNraWxsX2xpbWl0c19saXN0GAMgAygLMiEubWlI",
            "b21vLlByb3Rvcy5HQ0dTa2lsbExpbWl0c0luZm8SEAoIdGFnX2xpc3QYByAD",
            "KA0SKwoKdG9rZW5fbGlzdBgIIAMoCzIXLm1pSG9tby5Qcm90b3MuR0NHVG9r",
            "ZW5iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.GCGSkillLimitsInfoReflection.Descriptor, global::MiHomo.Protos.GCGTokenReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.GCGCard), global::MiHomo.Protos.GCGCard.Parser, new[]{ "ControllerId", "FaceType", "Guid", "Id", "IsShow", "SkillIdList", "SkillLimitsList", "TagList", "TokenList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GCGCard : pb::IMessage<GCGCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GCGCard> _parser = new pb::MessageParser<GCGCard>(() => new GCGCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GCGCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.GCGCardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCard(GCGCard other) : this() {
      controllerId_ = other.controllerId_;
      faceType_ = other.faceType_;
      guid_ = other.guid_;
      id_ = other.id_;
      isShow_ = other.isShow_;
      skillIdList_ = other.skillIdList_.Clone();
      skillLimitsList_ = other.skillLimitsList_.Clone();
      tagList_ = other.tagList_.Clone();
      tokenList_ = other.tokenList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGCard Clone() {
      return new GCGCard(this);
    }

    /// <summary>Field number for the "controller_id" field.</summary>
    public const int ControllerIdFieldNumber = 5;
    private uint controllerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ControllerId {
      get { return controllerId_; }
      set {
        controllerId_ = value;
      }
    }

    /// <summary>Field number for the "face_type" field.</summary>
    public const int FaceTypeFieldNumber = 2;
    private uint faceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FaceType {
      get { return faceType_; }
      set {
        faceType_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 11;
    private uint guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 6;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "is_show" field.</summary>
    public const int IsShowFieldNumber = 15;
    private bool isShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsShow {
      get { return isShow_; }
      set {
        isShow_ = value;
      }
    }

    /// <summary>Field number for the "skill_id_list" field.</summary>
    public const int SkillIdListFieldNumber = 13;
    private static readonly pb::FieldCodec<uint> _repeated_skillIdList_codec
        = pb::FieldCodec.ForUInt32(106);
    private readonly pbc::RepeatedField<uint> skillIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SkillIdList {
      get { return skillIdList_; }
    }

    /// <summary>Field number for the "skill_limits_list" field.</summary>
    public const int SkillLimitsListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.GCGSkillLimitsInfo> _repeated_skillLimitsList_codec
        = pb::FieldCodec.ForMessage(26, global::MiHomo.Protos.GCGSkillLimitsInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.GCGSkillLimitsInfo> skillLimitsList_ = new pbc::RepeatedField<global::MiHomo.Protos.GCGSkillLimitsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.GCGSkillLimitsInfo> SkillLimitsList {
      get { return skillLimitsList_; }
    }

    /// <summary>Field number for the "tag_list" field.</summary>
    public const int TagListFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_tagList_codec
        = pb::FieldCodec.ForUInt32(58);
    private readonly pbc::RepeatedField<uint> tagList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TagList {
      get { return tagList_; }
    }

    /// <summary>Field number for the "token_list" field.</summary>
    public const int TokenListFieldNumber = 8;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.GCGToken> _repeated_tokenList_codec
        = pb::FieldCodec.ForMessage(66, global::MiHomo.Protos.GCGToken.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.GCGToken> tokenList_ = new pbc::RepeatedField<global::MiHomo.Protos.GCGToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.GCGToken> TokenList {
      get { return tokenList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GCGCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GCGCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControllerId != other.ControllerId) return false;
      if (FaceType != other.FaceType) return false;
      if (Guid != other.Guid) return false;
      if (Id != other.Id) return false;
      if (IsShow != other.IsShow) return false;
      if(!skillIdList_.Equals(other.skillIdList_)) return false;
      if(!skillLimitsList_.Equals(other.skillLimitsList_)) return false;
      if(!tagList_.Equals(other.tagList_)) return false;
      if(!tokenList_.Equals(other.tokenList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ControllerId != 0) hash ^= ControllerId.GetHashCode();
      if (FaceType != 0) hash ^= FaceType.GetHashCode();
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsShow != false) hash ^= IsShow.GetHashCode();
      hash ^= skillIdList_.GetHashCode();
      hash ^= skillLimitsList_.GetHashCode();
      hash ^= tagList_.GetHashCode();
      hash ^= tokenList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FaceType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FaceType);
      }
      skillLimitsList_.WriteTo(output, _repeated_skillLimitsList_codec);
      if (ControllerId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ControllerId);
      }
      if (Id != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Id);
      }
      tagList_.WriteTo(output, _repeated_tagList_codec);
      tokenList_.WriteTo(output, _repeated_tokenList_codec);
      if (Guid != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Guid);
      }
      skillIdList_.WriteTo(output, _repeated_skillIdList_codec);
      if (IsShow != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsShow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FaceType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FaceType);
      }
      skillLimitsList_.WriteTo(ref output, _repeated_skillLimitsList_codec);
      if (ControllerId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ControllerId);
      }
      if (Id != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Id);
      }
      tagList_.WriteTo(ref output, _repeated_tagList_codec);
      tokenList_.WriteTo(ref output, _repeated_tokenList_codec);
      if (Guid != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Guid);
      }
      skillIdList_.WriteTo(ref output, _repeated_skillIdList_codec);
      if (IsShow != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsShow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ControllerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ControllerId);
      }
      if (FaceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FaceType);
      }
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (IsShow != false) {
        size += 1 + 1;
      }
      size += skillIdList_.CalculateSize(_repeated_skillIdList_codec);
      size += skillLimitsList_.CalculateSize(_repeated_skillLimitsList_codec);
      size += tagList_.CalculateSize(_repeated_tagList_codec);
      size += tokenList_.CalculateSize(_repeated_tokenList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GCGCard other) {
      if (other == null) {
        return;
      }
      if (other.ControllerId != 0) {
        ControllerId = other.ControllerId;
      }
      if (other.FaceType != 0) {
        FaceType = other.FaceType;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsShow != false) {
        IsShow = other.IsShow;
      }
      skillIdList_.Add(other.skillIdList_);
      skillLimitsList_.Add(other.skillLimitsList_);
      tagList_.Add(other.tagList_);
      tokenList_.Add(other.tokenList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            FaceType = input.ReadUInt32();
            break;
          }
          case 26: {
            skillLimitsList_.AddEntriesFrom(input, _repeated_skillLimitsList_codec);
            break;
          }
          case 40: {
            ControllerId = input.ReadUInt32();
            break;
          }
          case 48: {
            Id = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            tagList_.AddEntriesFrom(input, _repeated_tagList_codec);
            break;
          }
          case 66: {
            tokenList_.AddEntriesFrom(input, _repeated_tokenList_codec);
            break;
          }
          case 88: {
            Guid = input.ReadUInt32();
            break;
          }
          case 106:
          case 104: {
            skillIdList_.AddEntriesFrom(input, _repeated_skillIdList_codec);
            break;
          }
          case 120: {
            IsShow = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            FaceType = input.ReadUInt32();
            break;
          }
          case 26: {
            skillLimitsList_.AddEntriesFrom(ref input, _repeated_skillLimitsList_codec);
            break;
          }
          case 40: {
            ControllerId = input.ReadUInt32();
            break;
          }
          case 48: {
            Id = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            tagList_.AddEntriesFrom(ref input, _repeated_tagList_codec);
            break;
          }
          case 66: {
            tokenList_.AddEntriesFrom(ref input, _repeated_tokenList_codec);
            break;
          }
          case 88: {
            Guid = input.ReadUInt32();
            break;
          }
          case 106:
          case 104: {
            skillIdList_.AddEntriesFrom(ref input, _repeated_skillIdList_codec);
            break;
          }
          case 120: {
            IsShow = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
