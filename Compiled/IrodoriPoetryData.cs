// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: IrodoriPoetryData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from IrodoriPoetryData.proto</summary>
  public static partial class IrodoriPoetryDataReflection {

    #region Descriptor
    /// <summary>File descriptor for IrodoriPoetryData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IrodoriPoetryDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdJcm9kb3JpUG9ldHJ5RGF0YS5wcm90bxINbWlIb21vLlByb3RvcxocSXJv",
            "ZG9yaVBvZXRyeVRoZW1lRGF0YS5wcm90byJpChFJcm9kb3JpUG9ldHJ5RGF0",
            "YRIUCgxjdXJfdGhlbWVfaWQYDCABKA0SPgoPdGhlbWVfZGF0YV9saXN0GAIg",
            "AygLMiUubWlIb21vLlByb3Rvcy5Jcm9kb3JpUG9ldHJ5VGhlbWVEYXRhYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.IrodoriPoetryThemeDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.IrodoriPoetryData), global::MiHomo.Protos.IrodoriPoetryData.Parser, new[]{ "CurThemeId", "ThemeDataList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IrodoriPoetryData : pb::IMessage<IrodoriPoetryData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IrodoriPoetryData> _parser = new pb::MessageParser<IrodoriPoetryData>(() => new IrodoriPoetryData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IrodoriPoetryData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.IrodoriPoetryDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrodoriPoetryData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrodoriPoetryData(IrodoriPoetryData other) : this() {
      curThemeId_ = other.curThemeId_;
      themeDataList_ = other.themeDataList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrodoriPoetryData Clone() {
      return new IrodoriPoetryData(this);
    }

    /// <summary>Field number for the "cur_theme_id" field.</summary>
    public const int CurThemeIdFieldNumber = 12;
    private uint curThemeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurThemeId {
      get { return curThemeId_; }
      set {
        curThemeId_ = value;
      }
    }

    /// <summary>Field number for the "theme_data_list" field.</summary>
    public const int ThemeDataListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.IrodoriPoetryThemeData> _repeated_themeDataList_codec
        = pb::FieldCodec.ForMessage(18, global::MiHomo.Protos.IrodoriPoetryThemeData.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.IrodoriPoetryThemeData> themeDataList_ = new pbc::RepeatedField<global::MiHomo.Protos.IrodoriPoetryThemeData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.IrodoriPoetryThemeData> ThemeDataList {
      get { return themeDataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IrodoriPoetryData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IrodoriPoetryData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurThemeId != other.CurThemeId) return false;
      if(!themeDataList_.Equals(other.themeDataList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CurThemeId != 0) hash ^= CurThemeId.GetHashCode();
      hash ^= themeDataList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      themeDataList_.WriteTo(output, _repeated_themeDataList_codec);
      if (CurThemeId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(CurThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      themeDataList_.WriteTo(ref output, _repeated_themeDataList_codec);
      if (CurThemeId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(CurThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CurThemeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurThemeId);
      }
      size += themeDataList_.CalculateSize(_repeated_themeDataList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IrodoriPoetryData other) {
      if (other == null) {
        return;
      }
      if (other.CurThemeId != 0) {
        CurThemeId = other.CurThemeId;
      }
      themeDataList_.Add(other.themeDataList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            themeDataList_.AddEntriesFrom(input, _repeated_themeDataList_codec);
            break;
          }
          case 96: {
            CurThemeId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            themeDataList_.AddEntriesFrom(ref input, _repeated_themeDataList_codec);
            break;
          }
          case 96: {
            CurThemeId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
