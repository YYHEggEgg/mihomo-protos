// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InBattleMechanicusInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from InBattleMechanicusInfo.proto</summary>
  public static partial class InBattleMechanicusInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for InBattleMechanicusInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InBattleMechanicusInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxJbkJhdHRsZU1lY2hhbmljdXNJbmZvLnByb3RvEg1taUhvbW8uUHJvdG9z",
            "GiBJbkJhdHRsZU1lY2hhbmljdXNDYXJkSW5mby5wcm90bxojSW5CYXR0bGVN",
            "ZWNoYW5pY3VzTW9uc3RlckluZm8ucHJvdG8aIkluQmF0dGxlTWVjaGFuaWN1",
            "c1BsYXllckluZm8ucHJvdG8aIUluQmF0dGxlTWVjaGFuaWN1c1N0YWdlVHlw",
            "ZS5wcm90byKDBQoWSW5CYXR0bGVNZWNoYW5pY3VzSW5mbxIVCg1iZWdpbl90",
            "aW1lX21zGAIgASgEEh8KF2J1aWxkaW5nX3N0YWdlX2R1cmF0aW9uGAQgASgN",
            "EhMKC2R1cmF0aW9uX21zGAggASgEEhYKDWVudHJhbmNlX2xpc3QYmgMgAygN",
            "EhsKE2V4Y2FwZWRfbW9uc3Rlcl9udW0YBiABKA0SEQoJZXhpdF9saXN0GHMg",
            "AygNEkQKEWhpc3RvcnlfY2FyZF9saXN0GAsgAygLMikubWlIb21vLlByb3Rv",
            "cy5JbkJhdHRsZU1lY2hhbmljdXNDYXJkSW5mbxIUCgxsZWZ0X21vbnN0ZXIY",
            "BSABKA0SHgoWbWF4X2V4Y2FwZV9tb25zdGVyX251bRgKIAEoDRJCCgxtb25z",
            "dGVyX2xpc3QYDiADKAsyLC5taUhvbW8uUHJvdG9zLkluQmF0dGxlTWVjaGFu",
            "aWN1c01vbnN0ZXJJbmZvEkEKDnBpY2tfY2FyZF9saXN0GA8gAygLMikubWlI",
            "b21vLlByb3Rvcy5JbkJhdHRsZU1lY2hhbmljdXNDYXJkSW5mbxJACgtwbGF5",
            "ZXJfbGlzdBgHIAMoCzIrLm1pSG9tby5Qcm90b3MuSW5CYXR0bGVNZWNoYW5p",
            "Y3VzUGxheWVySW5mbxINCgVyb3VuZBgDIAEoDRI5CgVzdGFnZRgJIAEoDjIq",
            "Lm1pSG9tby5Qcm90b3MuSW5CYXR0bGVNZWNoYW5pY3VzU3RhZ2VUeXBlEhMK",
            "C3RvdGFsX3JvdW5kGAwgASgNEhoKEndhaXRfYmVnaW5fdGltZV91cxgBIAEo",
            "BBIUCgx3YWl0X3NlY29uZHMYDSABKA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.InBattleMechanicusCardInfoReflection.Descriptor, global::MiHomo.Protos.InBattleMechanicusMonsterInfoReflection.Descriptor, global::MiHomo.Protos.InBattleMechanicusPlayerInfoReflection.Descriptor, global::MiHomo.Protos.InBattleMechanicusStageTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.InBattleMechanicusInfo), global::MiHomo.Protos.InBattleMechanicusInfo.Parser, new[]{ "BeginTimeMs", "BuildingStageDuration", "DurationMs", "EntranceList", "ExcapedMonsterNum", "ExitList", "HistoryCardList", "LeftMonster", "MaxExcapeMonsterNum", "MonsterList", "PickCardList", "PlayerList", "Round", "Stage", "TotalRound", "WaitBeginTimeUs", "WaitSeconds" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InBattleMechanicusInfo : pb::IMessage<InBattleMechanicusInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InBattleMechanicusInfo> _parser = new pb::MessageParser<InBattleMechanicusInfo>(() => new InBattleMechanicusInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InBattleMechanicusInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.InBattleMechanicusInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InBattleMechanicusInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InBattleMechanicusInfo(InBattleMechanicusInfo other) : this() {
      beginTimeMs_ = other.beginTimeMs_;
      buildingStageDuration_ = other.buildingStageDuration_;
      durationMs_ = other.durationMs_;
      entranceList_ = other.entranceList_.Clone();
      excapedMonsterNum_ = other.excapedMonsterNum_;
      exitList_ = other.exitList_.Clone();
      historyCardList_ = other.historyCardList_.Clone();
      leftMonster_ = other.leftMonster_;
      maxExcapeMonsterNum_ = other.maxExcapeMonsterNum_;
      monsterList_ = other.monsterList_.Clone();
      pickCardList_ = other.pickCardList_.Clone();
      playerList_ = other.playerList_.Clone();
      round_ = other.round_;
      stage_ = other.stage_;
      totalRound_ = other.totalRound_;
      waitBeginTimeUs_ = other.waitBeginTimeUs_;
      waitSeconds_ = other.waitSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InBattleMechanicusInfo Clone() {
      return new InBattleMechanicusInfo(this);
    }

    /// <summary>Field number for the "begin_time_ms" field.</summary>
    public const int BeginTimeMsFieldNumber = 2;
    private ulong beginTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BeginTimeMs {
      get { return beginTimeMs_; }
      set {
        beginTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "building_stage_duration" field.</summary>
    public const int BuildingStageDurationFieldNumber = 4;
    private uint buildingStageDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BuildingStageDuration {
      get { return buildingStageDuration_; }
      set {
        buildingStageDuration_ = value;
      }
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 8;
    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { return durationMs_; }
      set {
        durationMs_ = value;
      }
    }

    /// <summary>Field number for the "entrance_list" field.</summary>
    public const int EntranceListFieldNumber = 410;
    private static readonly pb::FieldCodec<uint> _repeated_entranceList_codec
        = pb::FieldCodec.ForUInt32(3282);
    private readonly pbc::RepeatedField<uint> entranceList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> EntranceList {
      get { return entranceList_; }
    }

    /// <summary>Field number for the "excaped_monster_num" field.</summary>
    public const int ExcapedMonsterNumFieldNumber = 6;
    private uint excapedMonsterNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ExcapedMonsterNum {
      get { return excapedMonsterNum_; }
      set {
        excapedMonsterNum_ = value;
      }
    }

    /// <summary>Field number for the "exit_list" field.</summary>
    public const int ExitListFieldNumber = 115;
    private static readonly pb::FieldCodec<uint> _repeated_exitList_codec
        = pb::FieldCodec.ForUInt32(922);
    private readonly pbc::RepeatedField<uint> exitList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ExitList {
      get { return exitList_; }
    }

    /// <summary>Field number for the "history_card_list" field.</summary>
    public const int HistoryCardListFieldNumber = 11;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.InBattleMechanicusCardInfo> _repeated_historyCardList_codec
        = pb::FieldCodec.ForMessage(90, global::MiHomo.Protos.InBattleMechanicusCardInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusCardInfo> historyCardList_ = new pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusCardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusCardInfo> HistoryCardList {
      get { return historyCardList_; }
    }

    /// <summary>Field number for the "left_monster" field.</summary>
    public const int LeftMonsterFieldNumber = 5;
    private uint leftMonster_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LeftMonster {
      get { return leftMonster_; }
      set {
        leftMonster_ = value;
      }
    }

    /// <summary>Field number for the "max_excape_monster_num" field.</summary>
    public const int MaxExcapeMonsterNumFieldNumber = 10;
    private uint maxExcapeMonsterNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxExcapeMonsterNum {
      get { return maxExcapeMonsterNum_; }
      set {
        maxExcapeMonsterNum_ = value;
      }
    }

    /// <summary>Field number for the "monster_list" field.</summary>
    public const int MonsterListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.InBattleMechanicusMonsterInfo> _repeated_monsterList_codec
        = pb::FieldCodec.ForMessage(114, global::MiHomo.Protos.InBattleMechanicusMonsterInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusMonsterInfo> monsterList_ = new pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusMonsterInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusMonsterInfo> MonsterList {
      get { return monsterList_; }
    }

    /// <summary>Field number for the "pick_card_list" field.</summary>
    public const int PickCardListFieldNumber = 15;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.InBattleMechanicusCardInfo> _repeated_pickCardList_codec
        = pb::FieldCodec.ForMessage(122, global::MiHomo.Protos.InBattleMechanicusCardInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusCardInfo> pickCardList_ = new pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusCardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusCardInfo> PickCardList {
      get { return pickCardList_; }
    }

    /// <summary>Field number for the "player_list" field.</summary>
    public const int PlayerListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::MiHomo.Protos.InBattleMechanicusPlayerInfo> _repeated_playerList_codec
        = pb::FieldCodec.ForMessage(58, global::MiHomo.Protos.InBattleMechanicusPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusPlayerInfo> playerList_ = new pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MiHomo.Protos.InBattleMechanicusPlayerInfo> PlayerList {
      get { return playerList_; }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 3;
    private uint round_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Round {
      get { return round_; }
      set {
        round_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 9;
    private global::MiHomo.Protos.InBattleMechanicusStageType stage_ = global::MiHomo.Protos.InBattleMechanicusStageType.InBattleMechanicusStageNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.InBattleMechanicusStageType Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "total_round" field.</summary>
    public const int TotalRoundFieldNumber = 12;
    private uint totalRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalRound {
      get { return totalRound_; }
      set {
        totalRound_ = value;
      }
    }

    /// <summary>Field number for the "wait_begin_time_us" field.</summary>
    public const int WaitBeginTimeUsFieldNumber = 1;
    private ulong waitBeginTimeUs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong WaitBeginTimeUs {
      get { return waitBeginTimeUs_; }
      set {
        waitBeginTimeUs_ = value;
      }
    }

    /// <summary>Field number for the "wait_seconds" field.</summary>
    public const int WaitSecondsFieldNumber = 13;
    private uint waitSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WaitSeconds {
      get { return waitSeconds_; }
      set {
        waitSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InBattleMechanicusInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InBattleMechanicusInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BeginTimeMs != other.BeginTimeMs) return false;
      if (BuildingStageDuration != other.BuildingStageDuration) return false;
      if (DurationMs != other.DurationMs) return false;
      if(!entranceList_.Equals(other.entranceList_)) return false;
      if (ExcapedMonsterNum != other.ExcapedMonsterNum) return false;
      if(!exitList_.Equals(other.exitList_)) return false;
      if(!historyCardList_.Equals(other.historyCardList_)) return false;
      if (LeftMonster != other.LeftMonster) return false;
      if (MaxExcapeMonsterNum != other.MaxExcapeMonsterNum) return false;
      if(!monsterList_.Equals(other.monsterList_)) return false;
      if(!pickCardList_.Equals(other.pickCardList_)) return false;
      if(!playerList_.Equals(other.playerList_)) return false;
      if (Round != other.Round) return false;
      if (Stage != other.Stage) return false;
      if (TotalRound != other.TotalRound) return false;
      if (WaitBeginTimeUs != other.WaitBeginTimeUs) return false;
      if (WaitSeconds != other.WaitSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BeginTimeMs != 0UL) hash ^= BeginTimeMs.GetHashCode();
      if (BuildingStageDuration != 0) hash ^= BuildingStageDuration.GetHashCode();
      if (DurationMs != 0UL) hash ^= DurationMs.GetHashCode();
      hash ^= entranceList_.GetHashCode();
      if (ExcapedMonsterNum != 0) hash ^= ExcapedMonsterNum.GetHashCode();
      hash ^= exitList_.GetHashCode();
      hash ^= historyCardList_.GetHashCode();
      if (LeftMonster != 0) hash ^= LeftMonster.GetHashCode();
      if (MaxExcapeMonsterNum != 0) hash ^= MaxExcapeMonsterNum.GetHashCode();
      hash ^= monsterList_.GetHashCode();
      hash ^= pickCardList_.GetHashCode();
      hash ^= playerList_.GetHashCode();
      if (Round != 0) hash ^= Round.GetHashCode();
      if (Stage != global::MiHomo.Protos.InBattleMechanicusStageType.InBattleMechanicusStageNone) hash ^= Stage.GetHashCode();
      if (TotalRound != 0) hash ^= TotalRound.GetHashCode();
      if (WaitBeginTimeUs != 0UL) hash ^= WaitBeginTimeUs.GetHashCode();
      if (WaitSeconds != 0) hash ^= WaitSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WaitBeginTimeUs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(WaitBeginTimeUs);
      }
      if (BeginTimeMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BeginTimeMs);
      }
      if (Round != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Round);
      }
      if (BuildingStageDuration != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BuildingStageDuration);
      }
      if (LeftMonster != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LeftMonster);
      }
      if (ExcapedMonsterNum != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ExcapedMonsterNum);
      }
      playerList_.WriteTo(output, _repeated_playerList_codec);
      if (DurationMs != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(DurationMs);
      }
      if (Stage != global::MiHomo.Protos.InBattleMechanicusStageType.InBattleMechanicusStageNone) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Stage);
      }
      if (MaxExcapeMonsterNum != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MaxExcapeMonsterNum);
      }
      historyCardList_.WriteTo(output, _repeated_historyCardList_codec);
      if (TotalRound != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(TotalRound);
      }
      if (WaitSeconds != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(WaitSeconds);
      }
      monsterList_.WriteTo(output, _repeated_monsterList_codec);
      pickCardList_.WriteTo(output, _repeated_pickCardList_codec);
      exitList_.WriteTo(output, _repeated_exitList_codec);
      entranceList_.WriteTo(output, _repeated_entranceList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WaitBeginTimeUs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(WaitBeginTimeUs);
      }
      if (BeginTimeMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BeginTimeMs);
      }
      if (Round != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Round);
      }
      if (BuildingStageDuration != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BuildingStageDuration);
      }
      if (LeftMonster != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LeftMonster);
      }
      if (ExcapedMonsterNum != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ExcapedMonsterNum);
      }
      playerList_.WriteTo(ref output, _repeated_playerList_codec);
      if (DurationMs != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(DurationMs);
      }
      if (Stage != global::MiHomo.Protos.InBattleMechanicusStageType.InBattleMechanicusStageNone) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Stage);
      }
      if (MaxExcapeMonsterNum != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MaxExcapeMonsterNum);
      }
      historyCardList_.WriteTo(ref output, _repeated_historyCardList_codec);
      if (TotalRound != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(TotalRound);
      }
      if (WaitSeconds != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(WaitSeconds);
      }
      monsterList_.WriteTo(ref output, _repeated_monsterList_codec);
      pickCardList_.WriteTo(ref output, _repeated_pickCardList_codec);
      exitList_.WriteTo(ref output, _repeated_exitList_codec);
      entranceList_.WriteTo(ref output, _repeated_entranceList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BeginTimeMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BeginTimeMs);
      }
      if (BuildingStageDuration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuildingStageDuration);
      }
      if (DurationMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      size += entranceList_.CalculateSize(_repeated_entranceList_codec);
      if (ExcapedMonsterNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExcapedMonsterNum);
      }
      size += exitList_.CalculateSize(_repeated_exitList_codec);
      size += historyCardList_.CalculateSize(_repeated_historyCardList_codec);
      if (LeftMonster != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeftMonster);
      }
      if (MaxExcapeMonsterNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxExcapeMonsterNum);
      }
      size += monsterList_.CalculateSize(_repeated_monsterList_codec);
      size += pickCardList_.CalculateSize(_repeated_pickCardList_codec);
      size += playerList_.CalculateSize(_repeated_playerList_codec);
      if (Round != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Round);
      }
      if (Stage != global::MiHomo.Protos.InBattleMechanicusStageType.InBattleMechanicusStageNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Stage);
      }
      if (TotalRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalRound);
      }
      if (WaitBeginTimeUs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WaitBeginTimeUs);
      }
      if (WaitSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WaitSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InBattleMechanicusInfo other) {
      if (other == null) {
        return;
      }
      if (other.BeginTimeMs != 0UL) {
        BeginTimeMs = other.BeginTimeMs;
      }
      if (other.BuildingStageDuration != 0) {
        BuildingStageDuration = other.BuildingStageDuration;
      }
      if (other.DurationMs != 0UL) {
        DurationMs = other.DurationMs;
      }
      entranceList_.Add(other.entranceList_);
      if (other.ExcapedMonsterNum != 0) {
        ExcapedMonsterNum = other.ExcapedMonsterNum;
      }
      exitList_.Add(other.exitList_);
      historyCardList_.Add(other.historyCardList_);
      if (other.LeftMonster != 0) {
        LeftMonster = other.LeftMonster;
      }
      if (other.MaxExcapeMonsterNum != 0) {
        MaxExcapeMonsterNum = other.MaxExcapeMonsterNum;
      }
      monsterList_.Add(other.monsterList_);
      pickCardList_.Add(other.pickCardList_);
      playerList_.Add(other.playerList_);
      if (other.Round != 0) {
        Round = other.Round;
      }
      if (other.Stage != global::MiHomo.Protos.InBattleMechanicusStageType.InBattleMechanicusStageNone) {
        Stage = other.Stage;
      }
      if (other.TotalRound != 0) {
        TotalRound = other.TotalRound;
      }
      if (other.WaitBeginTimeUs != 0UL) {
        WaitBeginTimeUs = other.WaitBeginTimeUs;
      }
      if (other.WaitSeconds != 0) {
        WaitSeconds = other.WaitSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WaitBeginTimeUs = input.ReadUInt64();
            break;
          }
          case 16: {
            BeginTimeMs = input.ReadUInt64();
            break;
          }
          case 24: {
            Round = input.ReadUInt32();
            break;
          }
          case 32: {
            BuildingStageDuration = input.ReadUInt32();
            break;
          }
          case 40: {
            LeftMonster = input.ReadUInt32();
            break;
          }
          case 48: {
            ExcapedMonsterNum = input.ReadUInt32();
            break;
          }
          case 58: {
            playerList_.AddEntriesFrom(input, _repeated_playerList_codec);
            break;
          }
          case 64: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 72: {
            Stage = (global::MiHomo.Protos.InBattleMechanicusStageType) input.ReadEnum();
            break;
          }
          case 80: {
            MaxExcapeMonsterNum = input.ReadUInt32();
            break;
          }
          case 90: {
            historyCardList_.AddEntriesFrom(input, _repeated_historyCardList_codec);
            break;
          }
          case 96: {
            TotalRound = input.ReadUInt32();
            break;
          }
          case 104: {
            WaitSeconds = input.ReadUInt32();
            break;
          }
          case 114: {
            monsterList_.AddEntriesFrom(input, _repeated_monsterList_codec);
            break;
          }
          case 122: {
            pickCardList_.AddEntriesFrom(input, _repeated_pickCardList_codec);
            break;
          }
          case 922:
          case 920: {
            exitList_.AddEntriesFrom(input, _repeated_exitList_codec);
            break;
          }
          case 3282:
          case 3280: {
            entranceList_.AddEntriesFrom(input, _repeated_entranceList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WaitBeginTimeUs = input.ReadUInt64();
            break;
          }
          case 16: {
            BeginTimeMs = input.ReadUInt64();
            break;
          }
          case 24: {
            Round = input.ReadUInt32();
            break;
          }
          case 32: {
            BuildingStageDuration = input.ReadUInt32();
            break;
          }
          case 40: {
            LeftMonster = input.ReadUInt32();
            break;
          }
          case 48: {
            ExcapedMonsterNum = input.ReadUInt32();
            break;
          }
          case 58: {
            playerList_.AddEntriesFrom(ref input, _repeated_playerList_codec);
            break;
          }
          case 64: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 72: {
            Stage = (global::MiHomo.Protos.InBattleMechanicusStageType) input.ReadEnum();
            break;
          }
          case 80: {
            MaxExcapeMonsterNum = input.ReadUInt32();
            break;
          }
          case 90: {
            historyCardList_.AddEntriesFrom(ref input, _repeated_historyCardList_codec);
            break;
          }
          case 96: {
            TotalRound = input.ReadUInt32();
            break;
          }
          case 104: {
            WaitSeconds = input.ReadUInt32();
            break;
          }
          case 114: {
            monsterList_.AddEntriesFrom(ref input, _repeated_monsterList_codec);
            break;
          }
          case 122: {
            pickCardList_.AddEntriesFrom(ref input, _repeated_pickCardList_codec);
            break;
          }
          case 922:
          case 920: {
            exitList_.AddEntriesFrom(ref input, _repeated_exitList_codec);
            break;
          }
          case 3282:
          case 3280: {
            entranceList_.AddEntriesFrom(ref input, _repeated_entranceList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
