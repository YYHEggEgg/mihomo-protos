// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlatformInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from PlatformInfo.proto</summary>
  public static partial class PlatformInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for PlatformInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlatformInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQbGF0Zm9ybUluZm8ucHJvdG8SDW1pSG9tby5Qcm90b3MaFE1hdGhRdWF0",
            "ZXJuaW9uLnByb3RvGhhNb3ZpbmdQbGF0Zm9ybVR5cGUucHJvdG8aC1JvdXRl",
            "LnByb3RvGgxWZWN0b3IucHJvdG8i2wMKDFBsYXRmb3JtSW5mbxIRCglpc19h",
            "Y3RpdmUYDiABKAgSEgoKaXNfc3RhcnRlZBgIIAEoCBI/ChRtb3ZpbmdfcGxh",
            "dGZvcm1fdHlwZRgNIAEoDjIhLm1pSG9tby5Qcm90b3MuTW92aW5nUGxhdGZv",
            "cm1UeXBlEhAKCHBvaW50X2lkGBAgASgNEikKCnBvc19vZmZzZXQYCyABKAsy",
            "FS5taUhvbW8uUHJvdG9zLlZlY3RvchIxCgpyb3Rfb2Zmc2V0GAwgASgLMh0u",
            "bWlIb21vLlByb3Rvcy5NYXRoUXVhdGVybmlvbhIjCgVyb3V0ZRgPIAEoCzIU",
            "Lm1pSG9tby5Qcm90b3MuUm91dGUSEAoIcm91dGVfaWQYASABKA0SEwoLc3Rh",
            "cnRfaW5kZXgYAiABKAUSKAoJc3RhcnRfcG9zGAcgASgLMhUubWlIb21vLlBy",
            "b3Rvcy5WZWN0b3ISMAoJc3RhcnRfcm90GAkgASgLMh0ubWlIb21vLlByb3Rv",
            "cy5NYXRoUXVhdGVybmlvbhIYChBzdGFydF9yb3V0ZV90aW1lGAMgASgNEhgK",
            "EHN0YXJ0X3NjZW5lX3RpbWUYBCABKA0SFwoPc3RvcF9zY2VuZV90aW1lGAog",
            "ASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MiHomo.Protos.MathQuaternionReflection.Descriptor, global::MiHomo.Protos.MovingPlatformTypeReflection.Descriptor, global::MiHomo.Protos.RouteReflection.Descriptor, global::MiHomo.Protos.VectorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.PlatformInfo), global::MiHomo.Protos.PlatformInfo.Parser, new[]{ "IsActive", "IsStarted", "MovingPlatformType", "PointId", "PosOffset", "RotOffset", "Route", "RouteId", "StartIndex", "StartPos", "StartRot", "StartRouteTime", "StartSceneTime", "StopSceneTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlatformInfo : pb::IMessage<PlatformInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlatformInfo> _parser = new pb::MessageParser<PlatformInfo>(() => new PlatformInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlatformInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.PlatformInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlatformInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlatformInfo(PlatformInfo other) : this() {
      isActive_ = other.isActive_;
      isStarted_ = other.isStarted_;
      movingPlatformType_ = other.movingPlatformType_;
      pointId_ = other.pointId_;
      posOffset_ = other.posOffset_ != null ? other.posOffset_.Clone() : null;
      rotOffset_ = other.rotOffset_ != null ? other.rotOffset_.Clone() : null;
      route_ = other.route_ != null ? other.route_.Clone() : null;
      routeId_ = other.routeId_;
      startIndex_ = other.startIndex_;
      startPos_ = other.startPos_ != null ? other.startPos_.Clone() : null;
      startRot_ = other.startRot_ != null ? other.startRot_.Clone() : null;
      startRouteTime_ = other.startRouteTime_;
      startSceneTime_ = other.startSceneTime_;
      stopSceneTime_ = other.stopSceneTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlatformInfo Clone() {
      return new PlatformInfo(this);
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 14;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "is_started" field.</summary>
    public const int IsStartedFieldNumber = 8;
    private bool isStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStarted {
      get { return isStarted_; }
      set {
        isStarted_ = value;
      }
    }

    /// <summary>Field number for the "moving_platform_type" field.</summary>
    public const int MovingPlatformTypeFieldNumber = 13;
    private global::MiHomo.Protos.MovingPlatformType movingPlatformType_ = global::MiHomo.Protos.MovingPlatformType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MovingPlatformType MovingPlatformType {
      get { return movingPlatformType_; }
      set {
        movingPlatformType_ = value;
      }
    }

    /// <summary>Field number for the "point_id" field.</summary>
    public const int PointIdFieldNumber = 16;
    private uint pointId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PointId {
      get { return pointId_; }
      set {
        pointId_ = value;
      }
    }

    /// <summary>Field number for the "pos_offset" field.</summary>
    public const int PosOffsetFieldNumber = 11;
    private global::MiHomo.Protos.Vector posOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.Vector PosOffset {
      get { return posOffset_; }
      set {
        posOffset_ = value;
      }
    }

    /// <summary>Field number for the "rot_offset" field.</summary>
    public const int RotOffsetFieldNumber = 12;
    private global::MiHomo.Protos.MathQuaternion rotOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MathQuaternion RotOffset {
      get { return rotOffset_; }
      set {
        rotOffset_ = value;
      }
    }

    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 15;
    private global::MiHomo.Protos.Route route_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.Route Route {
      get { return route_; }
      set {
        route_ = value;
      }
    }

    /// <summary>Field number for the "route_id" field.</summary>
    public const int RouteIdFieldNumber = 1;
    private uint routeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RouteId {
      get { return routeId_; }
      set {
        routeId_ = value;
      }
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 2;
    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { return startIndex_; }
      set {
        startIndex_ = value;
      }
    }

    /// <summary>Field number for the "start_pos" field.</summary>
    public const int StartPosFieldNumber = 7;
    private global::MiHomo.Protos.Vector startPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.Vector StartPos {
      get { return startPos_; }
      set {
        startPos_ = value;
      }
    }

    /// <summary>Field number for the "start_rot" field.</summary>
    public const int StartRotFieldNumber = 9;
    private global::MiHomo.Protos.MathQuaternion startRot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MiHomo.Protos.MathQuaternion StartRot {
      get { return startRot_; }
      set {
        startRot_ = value;
      }
    }

    /// <summary>Field number for the "start_route_time" field.</summary>
    public const int StartRouteTimeFieldNumber = 3;
    private uint startRouteTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartRouteTime {
      get { return startRouteTime_; }
      set {
        startRouteTime_ = value;
      }
    }

    /// <summary>Field number for the "start_scene_time" field.</summary>
    public const int StartSceneTimeFieldNumber = 4;
    private uint startSceneTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartSceneTime {
      get { return startSceneTime_; }
      set {
        startSceneTime_ = value;
      }
    }

    /// <summary>Field number for the "stop_scene_time" field.</summary>
    public const int StopSceneTimeFieldNumber = 10;
    private uint stopSceneTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StopSceneTime {
      get { return stopSceneTime_; }
      set {
        stopSceneTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlatformInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlatformInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsActive != other.IsActive) return false;
      if (IsStarted != other.IsStarted) return false;
      if (MovingPlatformType != other.MovingPlatformType) return false;
      if (PointId != other.PointId) return false;
      if (!object.Equals(PosOffset, other.PosOffset)) return false;
      if (!object.Equals(RotOffset, other.RotOffset)) return false;
      if (!object.Equals(Route, other.Route)) return false;
      if (RouteId != other.RouteId) return false;
      if (StartIndex != other.StartIndex) return false;
      if (!object.Equals(StartPos, other.StartPos)) return false;
      if (!object.Equals(StartRot, other.StartRot)) return false;
      if (StartRouteTime != other.StartRouteTime) return false;
      if (StartSceneTime != other.StartSceneTime) return false;
      if (StopSceneTime != other.StopSceneTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (IsStarted != false) hash ^= IsStarted.GetHashCode();
      if (MovingPlatformType != global::MiHomo.Protos.MovingPlatformType.None) hash ^= MovingPlatformType.GetHashCode();
      if (PointId != 0) hash ^= PointId.GetHashCode();
      if (posOffset_ != null) hash ^= PosOffset.GetHashCode();
      if (rotOffset_ != null) hash ^= RotOffset.GetHashCode();
      if (route_ != null) hash ^= Route.GetHashCode();
      if (RouteId != 0) hash ^= RouteId.GetHashCode();
      if (StartIndex != 0) hash ^= StartIndex.GetHashCode();
      if (startPos_ != null) hash ^= StartPos.GetHashCode();
      if (startRot_ != null) hash ^= StartRot.GetHashCode();
      if (StartRouteTime != 0) hash ^= StartRouteTime.GetHashCode();
      if (StartSceneTime != 0) hash ^= StartSceneTime.GetHashCode();
      if (StopSceneTime != 0) hash ^= StopSceneTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RouteId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RouteId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (StartRouteTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartRouteTime);
      }
      if (StartSceneTime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(StartSceneTime);
      }
      if (startPos_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartPos);
      }
      if (IsStarted != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsStarted);
      }
      if (startRot_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(StartRot);
      }
      if (StopSceneTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(StopSceneTime);
      }
      if (posOffset_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PosOffset);
      }
      if (rotOffset_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RotOffset);
      }
      if (MovingPlatformType != global::MiHomo.Protos.MovingPlatformType.None) {
        output.WriteRawTag(104);
        output.WriteEnum((int) MovingPlatformType);
      }
      if (IsActive != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsActive);
      }
      if (route_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Route);
      }
      if (PointId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(PointId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RouteId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RouteId);
      }
      if (StartIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (StartRouteTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StartRouteTime);
      }
      if (StartSceneTime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(StartSceneTime);
      }
      if (startPos_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartPos);
      }
      if (IsStarted != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsStarted);
      }
      if (startRot_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(StartRot);
      }
      if (StopSceneTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(StopSceneTime);
      }
      if (posOffset_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PosOffset);
      }
      if (rotOffset_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RotOffset);
      }
      if (MovingPlatformType != global::MiHomo.Protos.MovingPlatformType.None) {
        output.WriteRawTag(104);
        output.WriteEnum((int) MovingPlatformType);
      }
      if (IsActive != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsActive);
      }
      if (route_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Route);
      }
      if (PointId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(PointId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (IsStarted != false) {
        size += 1 + 1;
      }
      if (MovingPlatformType != global::MiHomo.Protos.MovingPlatformType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MovingPlatformType);
      }
      if (PointId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PointId);
      }
      if (posOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosOffset);
      }
      if (rotOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RotOffset);
      }
      if (route_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Route);
      }
      if (RouteId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RouteId);
      }
      if (StartIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (startPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartPos);
      }
      if (startRot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartRot);
      }
      if (StartRouteTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartRouteTime);
      }
      if (StartSceneTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartSceneTime);
      }
      if (StopSceneTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StopSceneTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlatformInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.IsStarted != false) {
        IsStarted = other.IsStarted;
      }
      if (other.MovingPlatformType != global::MiHomo.Protos.MovingPlatformType.None) {
        MovingPlatformType = other.MovingPlatformType;
      }
      if (other.PointId != 0) {
        PointId = other.PointId;
      }
      if (other.posOffset_ != null) {
        if (posOffset_ == null) {
          PosOffset = new global::MiHomo.Protos.Vector();
        }
        PosOffset.MergeFrom(other.PosOffset);
      }
      if (other.rotOffset_ != null) {
        if (rotOffset_ == null) {
          RotOffset = new global::MiHomo.Protos.MathQuaternion();
        }
        RotOffset.MergeFrom(other.RotOffset);
      }
      if (other.route_ != null) {
        if (route_ == null) {
          Route = new global::MiHomo.Protos.Route();
        }
        Route.MergeFrom(other.Route);
      }
      if (other.RouteId != 0) {
        RouteId = other.RouteId;
      }
      if (other.StartIndex != 0) {
        StartIndex = other.StartIndex;
      }
      if (other.startPos_ != null) {
        if (startPos_ == null) {
          StartPos = new global::MiHomo.Protos.Vector();
        }
        StartPos.MergeFrom(other.StartPos);
      }
      if (other.startRot_ != null) {
        if (startRot_ == null) {
          StartRot = new global::MiHomo.Protos.MathQuaternion();
        }
        StartRot.MergeFrom(other.StartRot);
      }
      if (other.StartRouteTime != 0) {
        StartRouteTime = other.StartRouteTime;
      }
      if (other.StartSceneTime != 0) {
        StartSceneTime = other.StartSceneTime;
      }
      if (other.StopSceneTime != 0) {
        StopSceneTime = other.StopSceneTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RouteId = input.ReadUInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            StartRouteTime = input.ReadUInt32();
            break;
          }
          case 32: {
            StartSceneTime = input.ReadUInt32();
            break;
          }
          case 58: {
            if (startPos_ == null) {
              StartPos = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(StartPos);
            break;
          }
          case 64: {
            IsStarted = input.ReadBool();
            break;
          }
          case 74: {
            if (startRot_ == null) {
              StartRot = new global::MiHomo.Protos.MathQuaternion();
            }
            input.ReadMessage(StartRot);
            break;
          }
          case 80: {
            StopSceneTime = input.ReadUInt32();
            break;
          }
          case 90: {
            if (posOffset_ == null) {
              PosOffset = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(PosOffset);
            break;
          }
          case 98: {
            if (rotOffset_ == null) {
              RotOffset = new global::MiHomo.Protos.MathQuaternion();
            }
            input.ReadMessage(RotOffset);
            break;
          }
          case 104: {
            MovingPlatformType = (global::MiHomo.Protos.MovingPlatformType) input.ReadEnum();
            break;
          }
          case 112: {
            IsActive = input.ReadBool();
            break;
          }
          case 122: {
            if (route_ == null) {
              Route = new global::MiHomo.Protos.Route();
            }
            input.ReadMessage(Route);
            break;
          }
          case 128: {
            PointId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RouteId = input.ReadUInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            StartRouteTime = input.ReadUInt32();
            break;
          }
          case 32: {
            StartSceneTime = input.ReadUInt32();
            break;
          }
          case 58: {
            if (startPos_ == null) {
              StartPos = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(StartPos);
            break;
          }
          case 64: {
            IsStarted = input.ReadBool();
            break;
          }
          case 74: {
            if (startRot_ == null) {
              StartRot = new global::MiHomo.Protos.MathQuaternion();
            }
            input.ReadMessage(StartRot);
            break;
          }
          case 80: {
            StopSceneTime = input.ReadUInt32();
            break;
          }
          case 90: {
            if (posOffset_ == null) {
              PosOffset = new global::MiHomo.Protos.Vector();
            }
            input.ReadMessage(PosOffset);
            break;
          }
          case 98: {
            if (rotOffset_ == null) {
              RotOffset = new global::MiHomo.Protos.MathQuaternion();
            }
            input.ReadMessage(RotOffset);
            break;
          }
          case 104: {
            MovingPlatformType = (global::MiHomo.Protos.MovingPlatformType) input.ReadEnum();
            break;
          }
          case 112: {
            IsActive = input.ReadBool();
            break;
          }
          case 122: {
            if (route_ == null) {
              Route = new global::MiHomo.Protos.Route();
            }
            input.ReadMessage(Route);
            break;
          }
          case 128: {
            PointId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
