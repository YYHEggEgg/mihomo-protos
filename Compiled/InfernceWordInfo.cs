// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InfernceWordInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from InfernceWordInfo.proto</summary>
  public static partial class InfernceWordInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for InfernceWordInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InfernceWordInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZJbmZlcm5jZVdvcmRJbmZvLnByb3RvEg1taUhvbW8uUHJvdG9zIn0KEElu",
            "ZmVybmNlV29yZEluZm8SFAoMaXNfYXNzb2NpYXRlGAYgASgIEhQKDGlzX2lu",
            "dGVycHJldBgPIAEoCBIRCglpc19zdWJtaXQYCiABKAgSGQoRdW5sb2NrX2J5",
            "X3dvcmRfaWQYBSABKA0SDwoHd29yZF9pZBgIIAEoDWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.InfernceWordInfo), global::MiHomo.Protos.InfernceWordInfo.Parser, new[]{ "IsAssociate", "IsInterpret", "IsSubmit", "UnlockByWordId", "WordId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class InfernceWordInfo : pb::IMessage<InfernceWordInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfernceWordInfo> _parser = new pb::MessageParser<InfernceWordInfo>(() => new InfernceWordInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfernceWordInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.InfernceWordInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfernceWordInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfernceWordInfo(InfernceWordInfo other) : this() {
      isAssociate_ = other.isAssociate_;
      isInterpret_ = other.isInterpret_;
      isSubmit_ = other.isSubmit_;
      unlockByWordId_ = other.unlockByWordId_;
      wordId_ = other.wordId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfernceWordInfo Clone() {
      return new InfernceWordInfo(this);
    }

    /// <summary>Field number for the "is_associate" field.</summary>
    public const int IsAssociateFieldNumber = 6;
    private bool isAssociate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAssociate {
      get { return isAssociate_; }
      set {
        isAssociate_ = value;
      }
    }

    /// <summary>Field number for the "is_interpret" field.</summary>
    public const int IsInterpretFieldNumber = 15;
    private bool isInterpret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInterpret {
      get { return isInterpret_; }
      set {
        isInterpret_ = value;
      }
    }

    /// <summary>Field number for the "is_submit" field.</summary>
    public const int IsSubmitFieldNumber = 10;
    private bool isSubmit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSubmit {
      get { return isSubmit_; }
      set {
        isSubmit_ = value;
      }
    }

    /// <summary>Field number for the "unlock_by_word_id" field.</summary>
    public const int UnlockByWordIdFieldNumber = 5;
    private uint unlockByWordId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnlockByWordId {
      get { return unlockByWordId_; }
      set {
        unlockByWordId_ = value;
      }
    }

    /// <summary>Field number for the "word_id" field.</summary>
    public const int WordIdFieldNumber = 8;
    private uint wordId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WordId {
      get { return wordId_; }
      set {
        wordId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfernceWordInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfernceWordInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsAssociate != other.IsAssociate) return false;
      if (IsInterpret != other.IsInterpret) return false;
      if (IsSubmit != other.IsSubmit) return false;
      if (UnlockByWordId != other.UnlockByWordId) return false;
      if (WordId != other.WordId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsAssociate != false) hash ^= IsAssociate.GetHashCode();
      if (IsInterpret != false) hash ^= IsInterpret.GetHashCode();
      if (IsSubmit != false) hash ^= IsSubmit.GetHashCode();
      if (UnlockByWordId != 0) hash ^= UnlockByWordId.GetHashCode();
      if (WordId != 0) hash ^= WordId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UnlockByWordId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(UnlockByWordId);
      }
      if (IsAssociate != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsAssociate);
      }
      if (WordId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(WordId);
      }
      if (IsSubmit != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsSubmit);
      }
      if (IsInterpret != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsInterpret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UnlockByWordId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(UnlockByWordId);
      }
      if (IsAssociate != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsAssociate);
      }
      if (WordId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(WordId);
      }
      if (IsSubmit != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsSubmit);
      }
      if (IsInterpret != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsInterpret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsAssociate != false) {
        size += 1 + 1;
      }
      if (IsInterpret != false) {
        size += 1 + 1;
      }
      if (IsSubmit != false) {
        size += 1 + 1;
      }
      if (UnlockByWordId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnlockByWordId);
      }
      if (WordId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WordId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfernceWordInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsAssociate != false) {
        IsAssociate = other.IsAssociate;
      }
      if (other.IsInterpret != false) {
        IsInterpret = other.IsInterpret;
      }
      if (other.IsSubmit != false) {
        IsSubmit = other.IsSubmit;
      }
      if (other.UnlockByWordId != 0) {
        UnlockByWordId = other.UnlockByWordId;
      }
      if (other.WordId != 0) {
        WordId = other.WordId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 40: {
            UnlockByWordId = input.ReadUInt32();
            break;
          }
          case 48: {
            IsAssociate = input.ReadBool();
            break;
          }
          case 64: {
            WordId = input.ReadUInt32();
            break;
          }
          case 80: {
            IsSubmit = input.ReadBool();
            break;
          }
          case 120: {
            IsInterpret = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 40: {
            UnlockByWordId = input.ReadUInt32();
            break;
          }
          case 48: {
            IsAssociate = input.ReadBool();
            break;
          }
          case 64: {
            WordId = input.ReadUInt32();
            break;
          }
          case 80: {
            IsSubmit = input.ReadBool();
            break;
          }
          case 120: {
            IsInterpret = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
