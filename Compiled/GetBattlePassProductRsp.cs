// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GetBattlePassProductRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MiHomo.Protos {

  /// <summary>Holder for reflection information generated from GetBattlePassProductRsp.proto</summary>
  public static partial class GetBattlePassProductRspReflection {

    #region Descriptor
    /// <summary>File descriptor for GetBattlePassProductRsp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetBattlePassProductRspReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1HZXRCYXR0bGVQYXNzUHJvZHVjdFJzcC5wcm90bxINbWlIb21vLlByb3Rv",
            "cyLhAQoXR2V0QmF0dGxlUGFzc1Byb2R1Y3RSc3ASJQodYmF0dGxlX3Bhc3Nf",
            "cHJvZHVjdF9wbGF5X3R5cGUYAiABKA0SFwoPY3VyX3NjaGVkdWxlX2lkGAsg",
            "ASgNEhIKCnByaWNlX3RpZXIYBiABKAkSEgoKcHJvZHVjdF9pZBgBIAEoCRIP",
            "CgdyZXRjb2RlGA4gASgFIk0KBUNtZElkEggKBE5PTkUQABITCg9FTkVUX0NI",
            "QU5ORUxfSUQQABIUChBFTkVUX0lTX1JFTElBQkxFEAESCwoGQ01EX0lEENkU",
            "GgIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MiHomo.Protos.GetBattlePassProductRsp), global::MiHomo.Protos.GetBattlePassProductRsp.Parser, new[]{ "BattlePassProductPlayType", "CurScheduleId", "PriceTier", "ProductId", "Retcode" }, null, new[]{ typeof(global::MiHomo.Protos.GetBattlePassProductRsp.Types.CmdId) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetBattlePassProductRsp : pb::IMessage<GetBattlePassProductRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBattlePassProductRsp> _parser = new pb::MessageParser<GetBattlePassProductRsp>(() => new GetBattlePassProductRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBattlePassProductRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MiHomo.Protos.GetBattlePassProductRspReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBattlePassProductRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBattlePassProductRsp(GetBattlePassProductRsp other) : this() {
      battlePassProductPlayType_ = other.battlePassProductPlayType_;
      curScheduleId_ = other.curScheduleId_;
      priceTier_ = other.priceTier_;
      productId_ = other.productId_;
      retcode_ = other.retcode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBattlePassProductRsp Clone() {
      return new GetBattlePassProductRsp(this);
    }

    /// <summary>Field number for the "battle_pass_product_play_type" field.</summary>
    public const int BattlePassProductPlayTypeFieldNumber = 2;
    private uint battlePassProductPlayType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BattlePassProductPlayType {
      get { return battlePassProductPlayType_; }
      set {
        battlePassProductPlayType_ = value;
      }
    }

    /// <summary>Field number for the "cur_schedule_id" field.</summary>
    public const int CurScheduleIdFieldNumber = 11;
    private uint curScheduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurScheduleId {
      get { return curScheduleId_; }
      set {
        curScheduleId_ = value;
      }
    }

    /// <summary>Field number for the "price_tier" field.</summary>
    public const int PriceTierFieldNumber = 6;
    private string priceTier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PriceTier {
      get { return priceTier_; }
      set {
        priceTier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private string productId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 14;
    private int retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBattlePassProductRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBattlePassProductRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BattlePassProductPlayType != other.BattlePassProductPlayType) return false;
      if (CurScheduleId != other.CurScheduleId) return false;
      if (PriceTier != other.PriceTier) return false;
      if (ProductId != other.ProductId) return false;
      if (Retcode != other.Retcode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BattlePassProductPlayType != 0) hash ^= BattlePassProductPlayType.GetHashCode();
      if (CurScheduleId != 0) hash ^= CurScheduleId.GetHashCode();
      if (PriceTier.Length != 0) hash ^= PriceTier.GetHashCode();
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (BattlePassProductPlayType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BattlePassProductPlayType);
      }
      if (PriceTier.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PriceTier);
      }
      if (CurScheduleId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CurScheduleId);
      }
      if (Retcode != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Retcode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (BattlePassProductPlayType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BattlePassProductPlayType);
      }
      if (PriceTier.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PriceTier);
      }
      if (CurScheduleId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(CurScheduleId);
      }
      if (Retcode != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Retcode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BattlePassProductPlayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BattlePassProductPlayType);
      }
      if (CurScheduleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurScheduleId);
      }
      if (PriceTier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceTier);
      }
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBattlePassProductRsp other) {
      if (other == null) {
        return;
      }
      if (other.BattlePassProductPlayType != 0) {
        BattlePassProductPlayType = other.BattlePassProductPlayType;
      }
      if (other.CurScheduleId != 0) {
        CurScheduleId = other.CurScheduleId;
      }
      if (other.PriceTier.Length != 0) {
        PriceTier = other.PriceTier;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
          case 16: {
            BattlePassProductPlayType = input.ReadUInt32();
            break;
          }
          case 50: {
            PriceTier = input.ReadString();
            break;
          }
          case 88: {
            CurScheduleId = input.ReadUInt32();
            break;
          }
          case 112: {
            Retcode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
          case 16: {
            BattlePassProductPlayType = input.ReadUInt32();
            break;
          }
          case 50: {
            PriceTier = input.ReadString();
            break;
          }
          case 88: {
            CurScheduleId = input.ReadUInt32();
            break;
          }
          case 112: {
            Retcode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetBattlePassProductRsp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CmdId {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("ENET_CHANNEL_ID", PreferredAlias = false)] EnetChannelId = 0,
        [pbr::OriginalName("ENET_IS_RELIABLE")] EnetIsReliable = 1,
        [pbr::OriginalName("CMD_ID")] CmdId = 2649,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
